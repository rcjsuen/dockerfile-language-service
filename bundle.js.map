{"version":3,"sources":["webpack:///webpack/bootstrap e13f12bd93dce35a3302","webpack:///./~/vscode-languageserver-types/lib/main.js","webpack:///./~/dockerfile-ast/lib/main.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/dockerfile-ast/lib/instruction.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instruction.js","webpack:///./~/process/browser.js","webpack:///./~/dockerfile-ast/lib/jsonInstruction.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/jsonInstruction.js","webpack:///./~/buffer/index.js","webpack:///./~/dockerfile-ast/lib/util.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/util.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/readable-stream/lib/_stream_duplex.js","webpack:///./~/core-util-is/lib/util.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/main.js","webpack:///./~/dockerfile-language-service/lib/docker.js","webpack:///./~/vscode-base-languageclient/lib/protocol.js","webpack:///./~/vscode-jsonrpc/lib/is.js","webpack:///./~/dockerfile-ast/lib/argument.js","webpack:///./~/dockerfile-ast/lib/instructions/from.js","webpack:///./~/dockerfile-ast/lib/line.js","webpack:///./~/dockerfile-ast/lib/propertyInstruction.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/argument.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/line.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/propertyInstruction.js","webpack:///./~/process-nextick-args/index.js","webpack:///./~/safe-buffer/index.js","webpack:///./~/vscode-base-languageclient/lib/utils/is.js","webpack:///./~/vscode-jsonrpc/lib/events.js","webpack:///./~/dockerfile-ast/lib/instructions/arg.js","webpack:///./~/dockerfile-ast/lib/instructions/cmd.js","webpack:///./~/dockerfile-ast/lib/instructions/copy.js","webpack:///./~/dockerfile-ast/lib/instructions/entrypoint.js","webpack:///./~/dockerfile-ast/lib/instructions/env.js","webpack:///./~/dockerfile-ast/lib/instructions/healthcheck.js","webpack:///./~/dockerfile-ast/lib/instructions/onbuild.js","webpack:///./~/dockerfile-ast/lib/modifiableInstruction.js","webpack:///./~/dockerfile-ast/lib/property.js","webpack:///./~/dockerfile-utils/lib/main.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/arg.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/cmd.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/copy.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/entrypoint.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/env.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/from.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/healthcheck.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/onbuild.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/modifiableInstruction.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/property.js","webpack:///./~/monaco-languageclient/lib/disposable.js","webpack:///./~/dockerfile-language-service/lib/dockerDefinition.js","webpack:///./~/vscode-base-languageclient/lib/services.js","webpack:///./~/vscode-jsonrpc/lib/main.js","webpack:///./~/vscode-jsonrpc/lib/messageReader.js","webpack:///./~/vscode-jsonrpc/lib/messageWriter.js","webpack:///./~/dockerfile-ast/lib/comment.js","webpack:///./~/dockerfile-ast/lib/flag.js","webpack:///./~/dockerfile-ast/lib/instructions/add.js","webpack:///./~/dockerfile-ast/lib/instructions/label.js","webpack:///./~/dockerfile-ast/lib/instructions/shell.js","webpack:///./~/dockerfile-ast/lib/instructions/stopsignal.js","webpack:///./~/dockerfile-ast/lib/instructions/user.js","webpack:///./~/dockerfile-ast/lib/instructions/volume.js","webpack:///./~/dockerfile-ast/lib/instructions/workdir.js","webpack:///./~/dockerfile-ast/lib/parser.js","webpack:///./~/dockerfile-ast/lib/parserDirective.js","webpack:///./~/dockerfile-ast/lib/variable.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/comment.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/flag.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/add.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/label.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/shell.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/stopsignal.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/user.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/volume.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/workdir.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/parser.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/parserDirective.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/variable.js","webpack:///./~/events/events.js","webpack:///./~/isarray/index.js","webpack:///./~/monaco-languageclient/lib/commands.js","webpack:///./~/monaco-languageclient/lib/console-window.js","webpack:///./~/monaco-languageclient/lib/converter.js","webpack:///./~/monaco-languageclient/lib/languages.js","webpack:///./~/monaco-languageclient/lib/workspace.js","webpack:///./~/readable-stream/lib/_stream_readable.js","webpack:///./~/readable-stream/lib/_stream_transform.js","webpack:///./~/readable-stream/lib/_stream_writable.js","webpack:///./~/readable-stream/lib/internal/streams/destroy.js","webpack:///./~/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./~/readable-stream/readable-browser.js","webpack:///./~/stream-http/lib/capability.js","webpack:///./~/stream-http/lib/response.js","webpack:///./~/string_decoder/lib/string_decoder.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/dockerfile-language-service/lib/dockerHighlight.js","webpack:///./~/dockerfile-language-service/lib/dockerPlainText.js","webpack:///./~/dockerfile-language-service/lib/main.js","webpack:///./~/url/url.js","webpack:///./~/vscode-base-languageclient/lib/base.js","webpack:///./lib/client.js","webpack:///./lib/main.js","webpack:///./~/base64-js/index.js","webpack:///./~/builtin-status-codes/browser.js","webpack:///./~/dockerfile-ast/lib/dockerfile.js","webpack:///./~/dockerfile-ast/lib/imageTemplate.js","webpack:///./~/dockerfile-utils/lib/dockerFormatter.js","webpack:///./~/dockerfile-utils/lib/dockerValidator.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/dockerfile.js","webpack:///./~/dockerfile-utils/~/dockerfile-ast/lib/imageTemplate.js","webpack:///./~/glob-to-regexp/index.js","webpack:///./~/https-browserify/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/monaco-languageclient/lib/diagnostic-collection.js","webpack:///./~/monaco-languageclient/lib/index.js","webpack:///./~/monaco-languageclient/lib/services.js","webpack:///./~/os-browserify/browser.js","webpack:///./~/path-browserify/index.js","webpack:///./~/punycode/punycode.js","webpack:///./~/querystring-es3/decode.js","webpack:///./~/querystring-es3/encode.js","webpack:///./~/querystring-es3/index.js","webpack:///./~/readable-stream/lib/_stream_passthrough.js","webpack:///./~/readable-stream/lib/internal/streams/BufferList.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/stream-http/index.js","webpack:///./~/stream-http/lib/request.js","webpack:///./~/to-arraybuffer/index.js","webpack:///./~/dockerfile-language-service/lib/dockerAssist.js","webpack:///./~/dockerfile-language-service/lib/dockerCommands.js","webpack:///./~/dockerfile-language-service/lib/dockerFormatter.js","webpack:///./~/dockerfile-language-service/lib/dockerHover.js","webpack:///./~/dockerfile-language-service/lib/dockerLinks.js","webpack:///./~/dockerfile-language-service/lib/dockerMarkdown.js","webpack:///./~/dockerfile-language-service/lib/dockerRegistryClient.js","webpack:///./~/dockerfile-language-service/lib/dockerRename.js","webpack:///./~/dockerfile-language-service/lib/dockerSignatures.js","webpack:///./~/dockerfile-language-service/lib/dockerSymbols.js","webpack:///./~/dockerfile-language-service/lib/languageService.js","webpack:///./~/url/util.js","webpack:///./~/util-deprecate/browser.js","webpack:///./~/vscode-base-languageclient/lib/connection.js","webpack:///./~/vscode-base-languageclient/lib/utils/async.js","webpack:///./~/vscode-base-languageclient/lib/utils/uuid.js","webpack:///./~/vscode-jsonrpc/lib/cancellation.js","webpack:///./~/vscode-jsonrpc/lib/linkedMap.js","webpack:///./~/vscode-jsonrpc/lib/messages.js","webpack:///./~/vscode-jsonrpc/lib/pipeSupport.js","webpack:///./~/vscode-jsonrpc/lib/socketSupport.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/xtend/immutable.js","webpack:///util (ignored)","webpack:///util (ignored)?9a7b"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uDAAuD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uDAAuD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS,iCAAiC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,uDAAuD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB;AAClE;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAA6C,IAAI;AACjF;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uDAAuD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gBAAgB;;;;;;;;AC/3BjB;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA,CAAC,0DAA0D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;;;;;;;AC7FhF;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;ACpBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA,wDAAwD,qBAAqB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,qBAAqB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5aA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA,wDAAwD,qBAAqB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,qBAAqB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpaA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;ACvLtC;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,wBAAwB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,wBAAwB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7KA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,wBAAwB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,wBAAwB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7KA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;AC5vDA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA,C;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;AC1GA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA,CAAC,0DAA0D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;;;;;;;;AC7FhF;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qIAAqI;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+HAA+H;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+HAA+H;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2IAA2I;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yHAAyH;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yHAAyH;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;;;;;;;;AC/a3G;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,qBAAqB,EAAE;AAC/E;AACA;;;;;;;;AClCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7BA;AACA,8CAA8C,cAAccAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oBAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5QA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7BA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oBAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;+CC5QA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;AC1CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA,uBAAuB,uBAAuB,EAAE;AAChD,8BAA8B,oBAAoB;AAClD,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB,wCAAwC,EAAE,EAAE;AAC5F;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,CAAC;AACD;;;;;;;;AClJA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,qBAAqB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnFA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,kBAAkB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,kBAAkyDAAyD,kBAAkB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpTA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtHA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9FA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,qBAAqB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnFA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,kBAAkB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,kBAAkyDAAyD,kBAAkB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpTA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,gBAAgB;AACjF;AACA;AACA,2DAA2D,0BAA0B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,gBAAgB;AACzF;AACA,iEAAiE,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,0BAA0B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA,sEAAsE,gBAAgB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA,wBAAwB,EAAE;AAC1B,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,sBAAsB;AACtB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACryCAAyC;AACxE;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,yDAAyD;AACzD;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,+BAA+B,EAAE;AAC7H;AACA;AACA;AACA,yEAAyE,+BAA+B,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0EAA0E,SAAS;AACnF,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,oDAAoD;AACpD;AACA;AACA,SAAS;AACT;AACA,8CAA8C,0BAA0B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,gCAAgC;AACxG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACv2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oDAAoD,+BAA+B,EAAE;AACrF,+CAA+C,0BAA0B,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,+BAA+B,EAAE;AACpF,8CAA8C,0BAA0B,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA,qDAAqD,+BAA+B,EAAE;AACtF,gDAAgD,0BAA0B,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,+BAA+B,EAAE;AACpF,8CAA8C,wBAAwB,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,+BAA+B,EAAE;AACpF,8CAA8C,0BAA0B,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;AC7NA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzDA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClEA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,mBAAmB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mBAAmB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,mBAAmB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpXA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzDA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClEA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,mBAAmB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mBAAmB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,mBAAmB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpXA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC7SA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;ACJA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;ACpBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;ACpDA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oEAAoE;AACpH,oCAAoC,0CAA0C;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mCAAmC,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,gBAAgB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,+BAA+B,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mCAAmC,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iCAAiC,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oDAAoD,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,kBAAkB,sBAAsB;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wCAAwC,EAAE;AACrF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,mCAAmC,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,mCAAmC,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,2CAA2C,EAAE;AACvF;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2CAA2C,EAAE;AACtF;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qCAAqC,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oEAAoE;AACpH,oCAAoC,0CAA0C;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,eAAe;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,eAAe;AACnG,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,yDAAyD,6BAA6B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;ACzkBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4EAA4E,aAAa,EAAE,EAAE,gBAAgB;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,6CAA6C,EAAE;AAC7I,aAAa;AACb;AACA;AACA,iGAAiG,yCAAyC,EAAE;AAC5I,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,iCAAiC,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmG,iDAAiD,EAAE;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,6CAA6C,EAAE;AACxI;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,uCAAuC,EAAE;AAClI;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,+CAA+C,EAAE;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,+CAA+C,EAAE;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,qCAAqC,EAAE;AACjI;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,uCAAuC,EAAE;AAClI,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iGAAiG,qCAAqC,EAAE;AACxI,aAAa,+BAA+B,iBAAiB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,sCAAsC,EAAE;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G,sCAAsC,EAAE;AACnJ;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,sCAAsC,EAAE;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,0CAA0C,EAAE;AACtI;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,mCAAmC,EAAE;AACjI,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,qGAAqG,kCAAkC,EAAE;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,wCAAwC,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;AC5aA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA,yDAAyD,8BAA8B,EAAE;AACzF,2DAA2D,iCAAiC,EAAE;AAC9F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB;AAC5D;AACA;AACA;AACA;AACA,iCAAiC,qDAAqD;AACtF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA,qDAAqD,oBAAoB,EAAE,0BAA0B,gBAAgB,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA;AACA;AACA;AACA,aAAa,gBAAgB,WAAW,EAAE;AAC1C,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yEAAyE,6EAA6E;AACtJ;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,0FAA0F;;AAE3I;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,kGAAkG;AAClG,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,4FAA4F;AAC5F,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,4EAA4E;;AAE5E;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA,mDAAmD,iEAAiE;AACpH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,C;;;;;;;;ACt/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,C;;;;;;;ACriDAAiD,0FAA0F;;AAE3I;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC;;AAEA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;ACpqBA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;ACzEA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACxEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI,aAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,wCAAwC,eAAe,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACxNA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,sCAAsC,sCAAsC;AACzG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;AC/QA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,gBAAgB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA,0DAA0D,gBAAgB;AAC1E;AACA;AACA;AACA,oEAAoE,gBAAgB;AACpF;AACA,0EAA0E,gBAAgB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gBAAgB;AAC1E;AACA,iEAAiE,gBAAgB;AACjF;AACA;AACA;AACA,sEAAsE,gBAAgB;AACtF;AACA;AACA,mFAAmF,gBAAgB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA,gEAAgE,gBAAgB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA,0DAA0D,gBAAgB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gBAAgB;AAC1E;AACA;AACA;AACA,qEAAqE,gBAAgB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,iBAAiB;AAChF;AACA;AACA;AACA,kEAAkE,kBAAkB;AACpF;AACA,oEAAoE,kBAAkB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC5TA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+HAA+H;;;;;;;;ACzBhI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,KAAK;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,2CAA2C,KAAK;AAChD,0CAA0C,KAAK;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3tBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,UAAU;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,2EAA2E,+BAA+B;AAC1G;AACA;AACA;AACA;AACA,aAAa;AACbwHAAwH,4DAA4D,EAAE;AACtL,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,kBAAkB,qGAAqG,sPAAsP;AAC3Z;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qBAAqB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qCAAqC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,qCAAqC;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qCAAqC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,qCAAqC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA,iCAAiC,sBAAsB,YAAY,mBAAmB,GAAG,+DAA+D;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC,IAAI,QAAQ;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC,IAAI,QAAQ;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC,IAAI,QAAQ;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC,IAAI,QAAQ;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,+DAA+D,EAAE;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA,+FAA+F,WAAW;AAC1G;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gCAAgC;AACvE;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB,EAAE;AACnB;AACA,iDAAiD,mCAAmC,4BAA4B;AAChH,4CAA4C,8BAA8B,4BAA4B;AACtG;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,4DAA4D;AAClK,uGAAuG,4DAA4D;AACnK;AACA;AACA;AACA;AACA,6DAA6D,oBAAoB,2CAA2C;AAC5H,yBAAyB;AACzB;AACA;AACA,uGAAuG,4DAA4D;AACnK;AACA;AACA,2GAA2G,4DAA4D;AACvK;AACA;AACA;AACA;AACA,6DAA6D,oBAAoB,0DAA0D;AAC3I,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,8BAA8B;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,4BAA4B;AACtF;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,kDAAkD;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yCAAyC,oCAAoC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA,sEAAsE,SAAS,WAAW,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,0CAA0C;AAC1C,4EAA4E,oDAAoD;AAChI;AACA;AACA,uEAAuE,2DAA2D,oBAAoB;AACtJ;AACA;AACA,0CAA0C;AAC1C,+EAA+E,oDAAoD;AACnI;AACA;AACA,4EAA4E,2DAA2D,oBAAoB;AAC3J;AACA;AACA,4EAA4E,2DAA2D,oBAAoB;AAC3J;AACA;AACA,mFAAmF,2DAA2D,oBAAoB;AAClK;AACA;AACA,gFAAgF,2DAA2D,oBAAoB;AAC/J;AACA;AACA,iFAAiF,2DAA2D,oBAAoB;AAChK;AACA;AACA,4EAA4E,2DAA2D,oBAAoB;AAC3J;AACA;AACA,0CAA0C;AAC1C,0EAA0E,oDAAoD;AAC9H;AACA;AACA,oFAAoF,2DAA2D,oBAAoB;AACnK;AACA;AACA,yFAAyF,2DAA2D,oBAAoB;AACxK;AACA;AACA,0CAA0C;AAC1C,0FAA0F,oDAAoD;AAC9I;AACA;AACA,wEAAwE,2DAA2D,oBAAoB;AACvJ;AACA;AACA,0CAA0C;AAC1C,8EAA8E,oDAAoD;AAClI;AACA;AACA,0CAA0C;AAC1C,gFAAgF,oDAAoD;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbyCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,iCAAiC,EAAE;AAC5F;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,qBAAqB;AAClE;AACA;AACA;AACA;AACA,yBAAyB;AACzB,gFAAgF,WAAW,EAAE;AAC7F;AACA;AACA,aAAa;AACb;AACA,+CAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kC;;;;;;ACjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gC;;;;;;;ACZA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAcqCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5MA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,oBAAoB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA,8CAA8C,qBAAqB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjKA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA,mCAAmC,iBAAiB;AACpkDAAkD,iBAAiB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,kBAAkB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,MAAM;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qBAAqB;AAC5D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,uBAAuB;AACxqBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,kBAAkB;AACrkCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,wBAAwB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C,mCAAmaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA,6CAA6C,EAAE;AAC/C,yCAAyC,EAAE;AAC3C;AACA,4CAA4C,EAAE;AAC9C,kCAAkC,EAAE;AACpC,wCAAwC,EAAE;AAC1C,+DAA+D,EAAE;AACjE,6BAA6B,EAAE;AAC/B,uDAAuD,EAAE;AACzD,uDAAuD,EAAE;AACzD,iDAAiD,EAAE;AACnD,gEAAgE,EAAE;AAClE,yBAAyB,EAAE,2BAA2B,EAAE;AACxD,kDAAkD,EAAE;AACpD,qDAAqD,EAAE;AACvD,kDAAkD,EAAE;AACpD,qCAAqC,EAAE;AACvC,6DAA6D,EAAE;AAC/D,oDAAoD,EAAE;AACtD,oCAAoC,EAAE;AACtC,6CAA6C,EAAE,eAAe,EAAE;AAChE;AACA;AACA,oDAAoD,EAAE;AACtD,yCAAyC,EAAE;AAC3C,gDAAgD,EAAE;AAClD,iDAAiD,EAAE;AACnD,0CAA0C,EAAE;AAC5C,yCAAyC,EAAE;AAC3C,kDAAkD,EAAE;AACpD;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;;;;;;;;ACvyCA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAcqCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpMA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,YAAY;AAC9B;;AAEA;AACA;;AAEA;AACA,mCAAmC,SAAS;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AClIA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;;ACnFA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,0CAA0C,EAAE;AACrG;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mEAAmE,uCAAuC,EAAE;AAC5G;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iD;;;;;;;AChFA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;AClBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;ACnBA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B;;AAE/B,8BAA8B;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B;;AAE5B,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,UAAU;;AAEzB,4BAA4B;;AAE5B,gCAAgC;;AAEhC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,IAAI;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;;;;;;;sDC/NA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,MAAM;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,KAAK;AACL,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB,yCAAyC,qBAAqB;;AAE9D;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;;AAEtD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,iBAAiB;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAEA;AACA;AACA;AACA;AACA,GAAG;AAAA;AACH,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA,CAAC;;;;;;;;;ACphBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpFA;;AAEA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;;AC9CA;;AAEA,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA,C;;;;;;AC9EA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;ACzLD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;AClFA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ,2CAA2C;AAC3C,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClUA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;AC1BA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,wBAAwB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,gBAAgB;AAC9G;AACA;AACA;AACA;AACA,gGAAgG,gCAAgC;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA,gGAAgG,gCAAgC;AAChI;AACA;AACA;AACA;AACA;AACA,iEAAiE,yBAAyB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,8EAA8E,gBAAgB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,oBAAoB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,EAAE,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,SAAS,GAAG,OAAO;AAC1H;AACA;AACA;AACA;AACA;AACA,gGAAgG,OAAO;AACvG;AACA;AACA,6GAA6G,OAAO,GAAG,eAAe;AACtI;AACA;AACA,kHAAkH,aAAa;AAC/H;AACA;AACA,0GAA0G,SAAS,GAAG,OAAO;AAC7H;AACA;AACA,uIAAuI,aAAa;AACpJ;AACA;AACA,qGAAqG,MAAM,GAAG,QAAQ;AACtH;AACA;AACA,yGAAyG,OAAO;AAChH;AACA;AACA,wGAAwG,YAAY;AACpH;AACA;AACA;AACA,oNAAoN,MAAM,aAAa,MAAM,kBAAkB,KAAK,aAAa,IAAI,WAAW,aAAa;AAC7S;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sHAAsH,aAAa;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,cAAc;AACtH;AACA;AACA;AACA;AACA;AACA,wGAAwG,cAAc;AACtH;AACA;AACA;AACA;AACA;AACA,iGAAiG,QAAQ;AACzG;AACA;AACA;AACA;AACA;AACA,uGAAuG,MAAM;AAC7G;AACA;AACA;AACA;AACA;AACA,mGAAmG,IAAI;AACvG;AACA;AACA;AACA;AACA;AACA,8GAA8G,KAAK;AACnH;AACA;AACA;AACA;AACA;AACA,qGAAqG,MAAM;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+GAA+G,MAAM,KAAK,QAAQ;AAClI;AACA;AACA,qHAAqH,OAAO;AAC5H;AACA;AACA,mHAAmH,cAAc;AACjI;AACA;AACA,mGAAmG,UAAU;AAC7G;AACA;AACA,wHAAwH,aAAa;AACrI;AACA;AACA,uHAAuH,SAAS;AAChI;AACA;AACA,qGAAqG,SAAS;AAC9G;AACA;AACA,sHAAsH,QAAQ;AAC9H;AACA;AACA,yHAAyH,oBAAoB;AAC7I;AACA;AACA,+HAA+H,IAAI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACzsBA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC9OA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,oBAAoB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA,2DAA2D,gBAAgB;AAC3E;AACA;AACA;AACA,8CAA8C,qBAAqB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,qBAAqB;AACzE;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AChKA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA,6DAA6D,gBAAgB;AAC7E;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,gBAAgB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,wBAAwB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,yBAAyB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC7IA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC9NA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC7HA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,+BAA+B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACvBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,4BAA4B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,qBAAqiCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjyCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AC3zCA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACpCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;ACxFA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,kCAAkC,yCAAyC,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,GAAG;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA,YAAY,uBAAuB,sBAAsB,EAAE;AAC3D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA,iBAAiB;AACjB,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA,iBAAiB;AACjgBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClVA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;ACrBA;;AAEA;;AAEA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AClBA,e;;;;;;ACAA,e","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 103);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e13f12bd93dce35a3302","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nvar Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position = exports.Position || (exports.Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nvar Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range = exports.Range || (exports.Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nvar Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location = exports.Location || (exports.Location = {}));\r\n/**\r\n * The diagnostic's serverity.\r\n */\r\nvar DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity = exports.DiagnosticSeverity || (exports.DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nvar Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic = exports.Diagnostic || (exports.Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nvar Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.title);\r\n    }\r\n    Command.is = is;\r\n})(Command = exports.Command || (exports.Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nvar TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param psotion The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n})(TextEdit = exports.TextEdit || (exports.TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nvar TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit = exports.TextDocumentEdit || (exports.TextDocumentEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\r\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\r\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for versioned document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexports.WorkspaceChange = WorkspaceChange;\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nvar TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier = exports.TextDocumentIdentifier || (exports.TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nvar VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier = exports.VersionedTextDocumentIdentifier || (exports.VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nvar TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's language identifier.\r\n     * @param uri The document's version number.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem = exports.TextDocumentItem || (exports.TextDocumentItem = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nvar CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n})(CompletionItemKind = exports.CompletionItemKind || (exports.CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nvar InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat = exports.InsertTextFormat || (exports.InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nvar CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem = exports.CompletionItem || (exports.CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nvar CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList = exports.CompletionList || (exports.CompletionList = {}));\r\nvar MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n})(MarkedString = exports.MarkedString || (exports.MarkedString = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nvar ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation = exports.ParameterInformation || (exports.ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nvar SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation = exports.SignatureInformation || (exports.SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nvar DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrance.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind = exports.DocumentHighlightKind || (exports.DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nvar DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight = exports.DocumentHighlight || (exports.DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nvar SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n})(SymbolKind = exports.SymbolKind || (exports.SymbolKind = {}));\r\nvar SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containg the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation = exports.SymbolInformation || (exports.SymbolInformation = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nvar CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics) {\r\n        return { diagnostics: diagnostics };\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is);\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext = exports.CodeActionContext || (exports.CodeActionContext = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nvar CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens = exports.CodeLens || (exports.CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nvar FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions = exports.FormattingOptions || (exports.FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\nexports.DocumentLink = DocumentLink;\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target) {\r\n        return { range: range, target: target };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink = exports.DocumentLink || (exports.DocumentLink = {}));\r\nexports.DocumentLink = DocumentLink;\r\nexports.EOL = ['\\n', '\\r\\n', '\\r'];\r\nvar TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n})(TextDocument = exports.TextDocument || (exports.TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nvar TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function () {\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-languageserver-types/lib/main.js\n// module id = 0\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar argument_1 = require(\"./argument\");\r\nexports.Argument = argument_1.Argument;\r\nconst comment_1 = require(\"./comment\");\r\nexports.Comment = comment_1.Comment;\r\nconst parser_1 = require(\"./parser\");\r\nvar flag_1 = require(\"./flag\");\r\nexports.Flag = flag_1.Flag;\r\nconst instruction_1 = require(\"./instruction\");\r\nexports.Instruction = instruction_1.Instruction;\r\nvar line_1 = require(\"./line\");\r\nexports.Line = line_1.Line;\r\nconst parserDirective_1 = require(\"./parserDirective\");\r\nexports.ParserDirective = parserDirective_1.ParserDirective;\r\nvar property_1 = require(\"./property\");\r\nexports.Property = property_1.Property;\r\nvar variable_1 = require(\"./variable\");\r\nexports.Variable = variable_1.Variable;\r\nvar add_1 = require(\"./instructions/add\");\r\nexports.Add = add_1.Add;\r\nconst arg_1 = require(\"./instructions/arg\");\r\nexports.Arg = arg_1.Arg;\r\nconst cmd_1 = require(\"./instructions/cmd\");\r\nexports.Cmd = cmd_1.Cmd;\r\nconst copy_1 = require(\"./instructions/copy\");\r\nexports.Copy = copy_1.Copy;\r\nconst entrypoint_1 = require(\"./instructions/entrypoint\");\r\nexports.Entrypoint = entrypoint_1.Entrypoint;\r\nconst env_1 = require(\"./instructions/env\");\r\nexports.Env = env_1.Env;\r\nconst from_1 = require(\"./instructions/from\");\r\nexports.From = from_1.From;\r\nconst healthcheck_1 = require(\"./instructions/healthcheck\");\r\nexports.Healthcheck = healthcheck_1.Healthcheck;\r\nvar jsonInstruction_1 = require(\"./jsonInstruction\");\r\nexports.JSONInstruction = jsonInstruction_1.JSONInstruction;\r\nvar label_1 = require(\"./instructions/label\");\r\nexports.Label = label_1.Label;\r\nvar modifiableInstruction_1 = require(\"./modifiableInstruction\");\r\nexports.ModifiableInstruction = modifiableInstruction_1.ModifiableInstruction;\r\nvar onbuild_1 = require(\"./instructions/onbuild\");\r\nexports.Onbuild = onbuild_1.Onbuild;\r\nvar propertyInstruction_1 = require(\"./propertyInstruction\");\r\nexports.PropertyInstruction = propertyInstruction_1.PropertyInstruction;\r\nvar shell_1 = require(\"./instructions/shell\");\r\nexports.Shell = shell_1.Shell;\r\nvar stopsignal_1 = require(\"./instructions/stopsignal\");\r\nexports.Stopsignal = stopsignal_1.Stopsignal;\r\nvar user_1 = require(\"./instructions/user\");\r\nexports.User = user_1.User;\r\nvar volume_1 = require(\"./instructions/volume\");\r\nexports.Volume = volume_1.Volume;\r\nvar workdir_1 = require(\"./instructions/workdir\");\r\nexports.Workdir = workdir_1.Workdir;\r\nvar Keyword;\r\n(function (Keyword) {\r\n    Keyword[\"ADD\"] = \"ARG\";\r\n    Keyword[\"ARG\"] = \"ARG\";\r\n    Keyword[\"CMD\"] = \"CMD\";\r\n    Keyword[\"COPY\"] = \"COPY\";\r\n    Keyword[\"ENTRYPOINT\"] = \"ENTRYPOINT\";\r\n    Keyword[\"ENV\"] = \"ENV\";\r\n    Keyword[\"EXPOSE\"] = \"EXPOSE\";\r\n    Keyword[\"FROM\"] = \"FROM\";\r\n    Keyword[\"HEALTHCHECK\"] = \"HEALTHCHECK\";\r\n    Keyword[\"LABEL\"] = \"LABEL\";\r\n    Keyword[\"MAINTAINER\"] = \"MAINTAINER\";\r\n    Keyword[\"ONBUILD\"] = \"ONBUILD\";\r\n    Keyword[\"RUN\"] = \"RUN\";\r\n    Keyword[\"SHELL\"] = \"SHELL\";\r\n    Keyword[\"STOPSIGNAL\"] = \"STOPSIGNAL\";\r\n    Keyword[\"USER\"] = \"USER\";\r\n    Keyword[\"VOLUME\"] = \"VOLUME\";\r\n    Keyword[\"WORKDIR\"] = \"WORKDIR\";\r\n})(Keyword = exports.Keyword || (exports.Keyword = {}));\r\nvar Directive;\r\n(function (Directive) {\r\n    Directive[\"escape\"] = \"escape\";\r\n})(Directive = exports.Directive || (exports.Directive = {}));\r\nexports.DefaultVariables = [\r\n    \"FTP_PROXY\", \"ftp_proxy\",\r\n    \"HTTP_PROXY\", \"http_proxy\",\r\n    \"HTTPS_PROXY\", \"https_proxy\",\r\n    \"NO_PROXY\", \"no_proxy\"\r\n];\r\nvar DockerfileParser;\r\n(function (DockerfileParser) {\r\n    function parse(content) {\r\n        let parser = new parser_1.Parser();\r\n        return parser.parse(content);\r\n    }\r\n    DockerfileParser.parse = parse;\r\n})(DockerfileParser = exports.DockerfileParser || (exports.DockerfileParser = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/main.js\n// module id = 1\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 2\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst util_1 = require(\"./util\");\r\nconst line_1 = require(\"./line\");\r\nconst argument_1 = require(\"./argument\");\r\nconst variable_1 = require(\"./variable\");\r\nclass Instruction extends line_1.Line {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range);\r\n        this.dockerfile = dockerfile;\r\n        this.escapeChar = escapeChar;\r\n        this.instruction = instruction;\r\n        this.instructionRange = instructionRange;\r\n    }\r\n    toString() {\r\n        let value = this.getKeyword();\r\n        for (let arg of this.getArguments()) {\r\n            value += ' ';\r\n            value += arg.getValue();\r\n        }\r\n        return value;\r\n    }\r\n    getRangeContent(range) {\r\n        if (range === null) {\r\n            return null;\r\n        }\r\n        return this.document.getText().substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\r\n    }\r\n    getInstructionRange() {\r\n        return this.instructionRange;\r\n    }\r\n    getInstruction() {\r\n        return this.instruction;\r\n    }\r\n    getKeyword() {\r\n        return this.getInstruction().toUpperCase();\r\n    }\r\n    getArgumentsRange() {\r\n        let args = this.getArguments();\r\n        if (args.length === 0) {\r\n            return null;\r\n        }\r\n        return vscode_languageserver_types_1.Range.create(args[0].getRange().start, args[args.length - 1].getRange().end);\r\n    }\r\n    getArgumentsRanges() {\r\n        let args = this.getArguments();\r\n        if (args.length === 0) {\r\n            return [];\r\n        }\r\n        if (args[0].getRange().start.line === args[args.length - 1].getRange().end.line) {\r\n            return [vscode_languageserver_types_1.Range.create(args[0].getRange().start, args[args.length - 1].getRange().end)];\r\n        }\r\n        let ranges = [];\r\n        let end = -1;\r\n        let startPosition = args[0].getRange().start;\r\n        let range = this.getInstructionRange();\r\n        let extra = this.document.offsetAt(range.end) - this.document.offsetAt(range.start);\r\n        let content = this.getTextContent();\r\n        let fullArgs = content.substring(extra, this.document.offsetAt(args[args.length - 1].getRange().end) - this.document.offsetAt(range.start));\r\n        let offset = this.document.offsetAt(range.start) + extra;\r\n        let start = false;\r\n        let comment = false;\r\n        for (let i = 0; i < fullArgs.length; i++) {\r\n            let char = fullArgs.charAt(i);\r\n            if (char === this.escapeChar) {\r\n                let next = fullArgs.charAt(i + 1);\r\n                if (next === ' ' || next === '\\t') {\r\n                    whitespaceCheck: for (let j = i + 2; j < fullArgs.length; j++) {\r\n                        switch (fullArgs.charAt(j)) {\r\n                            case ' ':\r\n                            case '\\t':\r\n                                continue;\r\n                            case '\\r':\r\n                                j++;\r\n                            case '\\n':\r\n                                ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end + 1)));\r\n                                startPosition = null;\r\n                                start = true;\r\n                                comment = false;\r\n                                i = j;\r\n                                break whitespaceCheck;\r\n                            default:\r\n                                break whitespaceCheck;\r\n                        }\r\n                    }\r\n                }\r\n                else if (next === '\\r') {\r\n                    ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end + 1)));\r\n                    startPosition = null;\r\n                    start = true;\r\n                    comment = false;\r\n                    i += 2;\r\n                }\r\n                else if (next === '\\n') {\r\n                    ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end + 1)));\r\n                    startPosition = null;\r\n                    start = true;\r\n                    comment = false;\r\n                    i++;\r\n                }\r\n                else {\r\n                    i++;\r\n                }\r\n            }\r\n            else if (util_1.Util.isNewline(char)) {\r\n                if (comment) {\r\n                    if (startPosition) {\r\n                        ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end)));\r\n                    }\r\n                    startPosition = null;\r\n                    start = true;\r\n                    comment = false;\r\n                }\r\n            }\r\n            else {\r\n                if (!comment) {\r\n                    if (startPosition === null) {\r\n                        if (char === '#') {\r\n                            comment = true;\r\n                        }\r\n                        let position = this.document.positionAt(offset + i);\r\n                        if (position.character !== 0) {\r\n                            startPosition = vscode_languageserver_types_1.Position.create(position.line, 0);\r\n                        }\r\n                    }\r\n                    end = i;\r\n                }\r\n            }\r\n        }\r\n        ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end + 1)));\r\n        return ranges;\r\n    }\r\n    getRawArgumentsContent() {\r\n        let args = this.getArguments();\r\n        if (args.length === 0) {\r\n            return null;\r\n        }\r\n        return this.getRangeContent(vscode_languageserver_types_1.Range.create(args[0].getRange().start, args[args.length - 1].getRange().end));\r\n    }\r\n    getArgumentsContent() {\r\n        let args = this.getArguments();\r\n        if (args.length === 0) {\r\n            return null;\r\n        }\r\n        let content = \"\";\r\n        let ranges = this.getArgumentsRanges();\r\n        let documentText = this.document.getText();\r\n        for (let range of ranges) {\r\n            content += documentText.substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\r\n        }\r\n        return content;\r\n    }\r\n    getArguments() {\r\n        let args = [];\r\n        let range = this.getInstructionRange();\r\n        let extra = this.document.offsetAt(range.end) - this.document.offsetAt(range.start);\r\n        let content = this.getTextContent();\r\n        let fullArgs = content.substring(extra);\r\n        let offset = this.document.offsetAt(range.start) + extra;\r\n        let start = false;\r\n        let comment = false;\r\n        let found = -1;\r\n        let escapeMarker = -1;\r\n        let escapedArg = \"\";\r\n        for (let i = 0; i < fullArgs.length; i++) {\r\n            let char = fullArgs.charAt(i);\r\n            if (util_1.Util.isWhitespace(char)) {\r\n                if (util_1.Util.isNewline(char) && comment) {\r\n                    comment = false;\r\n                }\r\n                else if (found !== -1) {\r\n                    if (escapeMarker === -1) {\r\n                        args.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + found), this.document.positionAt(offset + i))));\r\n                    }\r\n                    else {\r\n                        args.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + found), this.document.positionAt(offset + escapeMarker))));\r\n                    }\r\n                    escapedArg = \"\";\r\n                    found = -1;\r\n                }\r\n            }\r\n            else if (char === this.escapeChar) {\r\n                let next = fullArgs.charAt(i + 1);\r\n                if (next === ' ' || next === '\\t') {\r\n                    whitespaceCheck: for (let j = i + 2; j < fullArgs.length; j++) {\r\n                        let newlineCheck = fullArgs.charAt(j);\r\n                        switch (newlineCheck) {\r\n                            case ' ':\r\n                            case '\\t':\r\n                                continue;\r\n                            case '\\r':\r\n                                j++;\r\n                            case '\\n':\r\n                                start = true;\r\n                                escapeMarker = i;\r\n                                i = j;\r\n                                break whitespaceCheck;\r\n                            default:\r\n                                escapeMarker = i;\r\n                                if (found === -1) {\r\n                                    i = j - 1;\r\n                                }\r\n                                break whitespaceCheck;\r\n                        }\r\n                    }\r\n                }\r\n                else if (next === '\\r') {\r\n                    start = true;\r\n                    escapeMarker = i;\r\n                    i += 2;\r\n                }\r\n                else if (next === '\\n') {\r\n                    start = true;\r\n                    escapeMarker = i;\r\n                    i++;\r\n                }\r\n                else if (next === '$') {\r\n                    escapedArg = escapedArg + char + next;\r\n                    if (found === -1) {\r\n                        found = i;\r\n                    }\r\n                    i++;\r\n                }\r\n                else {\r\n                    escapedArg = escapedArg + next;\r\n                    if (found === -1) {\r\n                        found = i;\r\n                    }\r\n                    i++;\r\n                }\r\n            }\r\n            else if (!comment) {\r\n                if (start && char === '#') {\r\n                    start = false;\r\n                    comment = true;\r\n                }\r\n                else {\r\n                    escapeMarker = -1;\r\n                    escapedArg = escapedArg + char;\r\n                    if (found === -1) {\r\n                        found = i;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (found !== -1) {\r\n            args.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + found), this.document.positionAt(offset + fullArgs.length))));\r\n        }\r\n        return args;\r\n    }\r\n    getExpandedArguments() {\r\n        let args = this.getArguments();\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argRange = args[i].getRange();\r\n            let offset = this.document.offsetAt(argRange.start);\r\n            const variables = this.parseVariables(offset, args[i].getValue());\r\n            const swaps = [];\r\n            let requiresExpansion = false;\r\n            for (let variable of variables) {\r\n                const value = this.dockerfile.resolveVariable(variable.getName(), variable.getNameRange().start.line);\r\n                swaps.push(value);\r\n                requiresExpansion = requiresExpansion || value !== undefined;\r\n            }\r\n            if (requiresExpansion) {\r\n                let expanded = \"\";\r\n                for (let j = 0; j < swaps.length; j++) {\r\n                    const variableRange = variables[j].getRange();\r\n                    const start = this.document.offsetAt(variableRange.start);\r\n                    const end = this.document.offsetAt(variableRange.end);\r\n                    if (swaps[j]) {\r\n                        // replace variable with its resolved value\r\n                        expanded += this.document.getText().substring(offset, start);\r\n                        expanded += swaps[j];\r\n                        offset = end;\r\n                    }\r\n                    else {\r\n                        expanded += this.document.getText().substring(offset, end);\r\n                        offset = end;\r\n                    }\r\n                }\r\n                args[i] = new argument_1.Argument(expanded, argRange);\r\n            }\r\n        }\r\n        return args;\r\n    }\r\n    getVariables() {\r\n        const variables = [];\r\n        const args = this.getArguments();\r\n        for (const arg of args) {\r\n            let range = arg.getRange();\r\n            let rawValue = this.document.getText().substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\r\n            const parsedVariables = this.parseVariables(this.document.offsetAt(arg.getRange().start), rawValue);\r\n            for (const parsedVariable of parsedVariables) {\r\n                variables.push(parsedVariable);\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n    parseVariables(offset, arg) {\r\n        let variables = [];\r\n        variableLoop: for (let i = 0; i < arg.length; i++) {\r\n            switch (arg.charAt(i)) {\r\n                case this.escapeChar:\r\n                    if (arg.charAt(i + 1) === '$') {\r\n                        i++;\r\n                    }\r\n                    break;\r\n                case '$':\r\n                    if (arg.charAt(i + 1) === '{') {\r\n                        let escapedName = \"\";\r\n                        let nameEnd = -1;\r\n                        nameLoop: for (let j = i + 2; j < arg.length; j++) {\r\n                            let char = arg.charAt(j);\r\n                            switch (char) {\r\n                                case this.escapeChar:\r\n                                    for (let k = j + 1; k < arg.length; k++) {\r\n                                        switch (arg.charAt(k)) {\r\n                                            case ' ':\r\n                                            case '\\t':\r\n                                            case '\\r':\r\n                                                // ignore whitespace\r\n                                                continue;\r\n                                            case '\\n':\r\n                                                // escape this newline\r\n                                                j = k;\r\n                                                continue nameLoop;\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case '}':\r\n                                    if (nameEnd === -1) {\r\n                                        nameEnd = j;\r\n                                    }\r\n                                    let start = this.document.positionAt(offset + i);\r\n                                    variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 2), this.document.positionAt(offset + nameEnd)), vscode_languageserver_types_1.Range.create(start, this.document.positionAt(offset + j + 1)), this.dockerfile.resolveVariable(escapedName, start.line) !== undefined, this.isBuildVariable(escapedName, start.line)));\r\n                                    i = j;\r\n                                    continue variableLoop;\r\n                                case ':':\r\n                                    if (nameEnd === -1) {\r\n                                        nameEnd = j;\r\n                                    }\r\n                                    break;\r\n                                default:\r\n                                    if (nameEnd === -1) {\r\n                                        escapedName += char;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                        // no } found, not a valid variable, stop processing\r\n                        break variableLoop;\r\n                    }\r\n                    else if (util_1.Util.isWhitespace(arg.charAt(i + 1)) || i === arg.length - 1) {\r\n                        // $ followed by whitespace or EOF, ignore this variable\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        let escapedName = \"\";\r\n                        nameLoop: for (let j = i + 1; j < arg.length; j++) {\r\n                            let char = arg.charAt(j);\r\n                            switch (char) {\r\n                                case '$':\r\n                                case '\\'':\r\n                                case '\"':\r\n                                case ' ':\r\n                                case '\\t':\r\n                                    let varStart = this.document.positionAt(offset + i);\r\n                                    variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 1), this.document.positionAt(offset + j)), vscode_languageserver_types_1.Range.create(varStart, this.document.positionAt(offset + j)), this.dockerfile.resolveVariable(escapedName, varStart.line) !== undefined, this.isBuildVariable(escapedName, varStart.line)));\r\n                                    i = j - 1;\r\n                                    continue variableLoop;\r\n                                case this.escapeChar:\r\n                                    for (let k = j + 1; k < arg.length; k++) {\r\n                                        switch (arg.charAt(k)) {\r\n                                            case ' ':\r\n                                            case '\\t':\r\n                                            case '\\r':\r\n                                                // ignore whitespace\r\n                                                continue;\r\n                                            case '\\n':\r\n                                                // escape this newline\r\n                                                j = k;\r\n                                                continue nameLoop;\r\n                                        }\r\n                                    }\r\n                                    // reached EOF after an escape character\r\n                                    let start = this.document.positionAt(offset + i);\r\n                                    variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 1), this.document.positionAt(offset + j)), vscode_languageserver_types_1.Range.create(start, this.document.positionAt(offset + j)), this.dockerfile.resolveVariable(escapedName, start.line) !== undefined, this.isBuildVariable(escapedName, start.line)));\r\n                                    break variableLoop;\r\n                            }\r\n                            escapedName += char;\r\n                        }\r\n                        let start = this.document.positionAt(offset + i);\r\n                        variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 1), this.document.positionAt(offset + arg.length)), vscode_languageserver_types_1.Range.create(start, this.document.positionAt(offset + arg.length)), this.dockerfile.resolveVariable(escapedName, start.line) !== undefined, this.isBuildVariable(escapedName, start.line)));\r\n                    }\r\n                    break variableLoop;\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n    isBuildVariable(variable, line) {\r\n        let image = this.dockerfile.getContainingImage(vscode_languageserver_types_1.Position.create(line, 0));\r\n        let envs = image.getENVs();\r\n        for (let i = envs.length - 1; i >= 0; i--) {\r\n            if (envs[i].isBefore(line)) {\r\n                for (let property of envs[i].getProperties()) {\r\n                    if (property.getName() === variable) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let args = image.getARGs();\r\n        for (let i = args.length - 1; i >= 0; i--) {\r\n            if (args[i].isBefore(line)) {\r\n                let property = args[i].getProperty();\r\n                if (property && property.getName() === variable) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.Instruction = Instruction;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instruction.js\n// module id = 3\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst util_1 = require(\"./util\");\r\nconst line_1 = require(\"./line\");\r\nconst argument_1 = require(\"./argument\");\r\nconst variable_1 = require(\"./variable\");\r\nclass Instruction extends line_1.Line {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range);\r\n        this.dockerfile = dockerfile;\r\n        this.escapeChar = escapeChar;\r\n        this.instruction = instruction;\r\n        this.instructionRange = instructionRange;\r\n    }\r\n    getRangeContent(range) {\r\n        if (range === null) {\r\n            return null;\r\n        }\r\n        return this.document.getText().substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\r\n    }\r\n    getInstructionRange() {\r\n        return this.instructionRange;\r\n    }\r\n    getInstruction() {\r\n        return this.instruction;\r\n    }\r\n    getKeyword() {\r\n        return this.getInstruction().toUpperCase();\r\n    }\r\n    getArgumentsRange() {\r\n        let args = this.getArguments();\r\n        if (args.length === 0) {\r\n            return null;\r\n        }\r\n        return vscode_languageserver_types_1.Range.create(args[0].getRange().start, args[args.length - 1].getRange().end);\r\n    }\r\n    getArgumentsRanges() {\r\n        let args = this.getArguments();\r\n        if (args.length === 0) {\r\n            return [];\r\n        }\r\n        if (args[0].getRange().start.line === args[args.length - 1].getRange().end.line) {\r\n            return [vscode_languageserver_types_1.Range.create(args[0].getRange().start, args[args.length - 1].getRange().end)];\r\n        }\r\n        let ranges = [];\r\n        let end = -1;\r\n        let startPosition = args[0].getRange().start;\r\n        let range = this.getInstructionRange();\r\n        let extra = this.document.offsetAt(range.end) - this.document.offsetAt(range.start);\r\n        let content = this.getTextContent();\r\n        let fullArgs = content.substring(extra, this.document.offsetAt(args[args.length - 1].getRange().end) - this.document.offsetAt(range.start));\r\n        let offset = this.document.offsetAt(range.start) + extra;\r\n        let start = false;\r\n        let comment = false;\r\n        for (let i = 0; i < fullArgs.length; i++) {\r\n            let char = fullArgs.charAt(i);\r\n            if (char === this.escapeChar) {\r\n                let next = fullArgs.charAt(i + 1);\r\n                if (next === ' ' || next === '\\t') {\r\n                    whitespaceCheck: for (let j = i + 2; j < fullArgs.length; j++) {\r\n                        switch (fullArgs.charAt(j)) {\r\n                            case ' ':\r\n                            case '\\t':\r\n                                continue;\r\n                            case '\\r':\r\n                                j++;\r\n                            case '\\n':\r\n                                ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end + 1)));\r\n                                startPosition = null;\r\n                                start = true;\r\n                                comment = false;\r\n                                i = j;\r\n                                break whitespaceCheck;\r\n                            default:\r\n                                break whitespaceCheck;\r\n                        }\r\n                    }\r\n                }\r\n                else if (next === '\\r') {\r\n                    ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end + 1)));\r\n                    startPosition = null;\r\n                    start = true;\r\n                    comment = false;\r\n                    i += 2;\r\n                }\r\n                else if (next === '\\n') {\r\n                    ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end + 1)));\r\n                    startPosition = null;\r\n                    start = true;\r\n                    comment = false;\r\n                    i++;\r\n                }\r\n                else {\r\n                    i++;\r\n                }\r\n            }\r\n            else if (util_1.Util.isNewline(char)) {\r\n                if (comment) {\r\n                    if (startPosition) {\r\n                        ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end)));\r\n                    }\r\n                    startPosition = null;\r\n                    start = true;\r\n                    comment = false;\r\n                }\r\n            }\r\n            else {\r\n                if (!comment) {\r\n                    if (startPosition === null) {\r\n                        if (char === '#') {\r\n                            comment = true;\r\n                        }\r\n                        let position = this.document.positionAt(offset + i);\r\n                        if (position.character !== 0) {\r\n                            startPosition = vscode_languageserver_types_1.Position.create(position.line, 0);\r\n                        }\r\n                    }\r\n                    end = i;\r\n                }\r\n            }\r\n        }\r\n        ranges.push(vscode_languageserver_types_1.Range.create(startPosition, this.document.positionAt(offset + end + 1)));\r\n        return ranges;\r\n    }\r\n    getRawArgumentsContent() {\r\n        let args = this.getArguments();\r\n        if (args.length === 0) {\r\n            return null;\r\n        }\r\n        return this.getRangeContent(vscode_languageserver_types_1.Range.create(args[0].getRange().start, args[args.length - 1].getRange().end));\r\n    }\r\n    getArgumentsContent() {\r\n        let args = this.getArguments();\r\n        if (args.length === 0) {\r\n            return null;\r\n        }\r\n        let content = \"\";\r\n        let ranges = this.getArgumentsRanges();\r\n        let documentText = this.document.getText();\r\n        for (let range of ranges) {\r\n            content += documentText.substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\r\n        }\r\n        return content;\r\n    }\r\n    getArguments() {\r\n        let args = [];\r\n        let range = this.getInstructionRange();\r\n        let extra = this.document.offsetAt(range.end) - this.document.offsetAt(range.start);\r\n        let content = this.getTextContent();\r\n        let fullArgs = content.substring(extra);\r\n        let offset = this.document.offsetAt(range.start) + extra;\r\n        let start = false;\r\n        let comment = false;\r\n        let found = -1;\r\n        let escapeMarker = -1;\r\n        let escapedArg = \"\";\r\n        for (let i = 0; i < fullArgs.length; i++) {\r\n            let char = fullArgs.charAt(i);\r\n            if (util_1.Util.isWhitespace(char)) {\r\n                if (util_1.Util.isNewline(char) && comment) {\r\n                    comment = false;\r\n                }\r\n                else if (found !== -1) {\r\n                    if (escapeMarker === -1) {\r\n                        args.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + found), this.document.positionAt(offset + i))));\r\n                    }\r\n                    else {\r\n                        args.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + found), this.document.positionAt(offset + escapeMarker))));\r\n                    }\r\n                    escapedArg = \"\";\r\n                    found = -1;\r\n                }\r\n            }\r\n            else if (char === this.escapeChar) {\r\n                let next = fullArgs.charAt(i + 1);\r\n                if (next === ' ' || next === '\\t') {\r\n                    whitespaceCheck: for (let j = i + 2; j < fullArgs.length; j++) {\r\n                        let newlineCheck = fullArgs.charAt(j);\r\n                        switch (newlineCheck) {\r\n                            case ' ':\r\n                            case '\\t':\r\n                                continue;\r\n                            case '\\r':\r\n                                j++;\r\n                            case '\\n':\r\n                                start = true;\r\n                                escapeMarker = i;\r\n                                i = j;\r\n                                break whitespaceCheck;\r\n                            default:\r\n                                escapeMarker = i;\r\n                                if (found === -1) {\r\n                                    i = j - 1;\r\n                                }\r\n                                break whitespaceCheck;\r\n                        }\r\n                    }\r\n                }\r\n                else if (next === '\\r') {\r\n                    start = true;\r\n                    escapeMarker = i;\r\n                    i += 2;\r\n                }\r\n                else if (next === '\\n') {\r\n                    start = true;\r\n                    escapeMarker = i;\r\n                    i++;\r\n                }\r\n                else if (next === '$') {\r\n                    escapedArg = escapedArg + char + next;\r\n                    if (found === -1) {\r\n                        found = i;\r\n                    }\r\n                    i++;\r\n                }\r\n                else {\r\n                    escapedArg = escapedArg + next;\r\n                    if (found === -1) {\r\n                        found = i;\r\n                    }\r\n                    i++;\r\n                }\r\n            }\r\n            else if (!comment) {\r\n                if (start && char === '#') {\r\n                    start = false;\r\n                    comment = true;\r\n                }\r\n                else {\r\n                    escapeMarker = -1;\r\n                    escapedArg = escapedArg + char;\r\n                    if (found === -1) {\r\n                        found = i;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (found !== -1) {\r\n            args.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + found), this.document.positionAt(offset + fullArgs.length))));\r\n        }\r\n        return args;\r\n    }\r\n    getExpandedArguments() {\r\n        let args = this.getArguments();\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argRange = args[i].getRange();\r\n            let offset = this.document.offsetAt(argRange.start);\r\n            const variables = this.parseVariables(offset, args[i].getValue());\r\n            const swaps = [];\r\n            let requiresExpansion = false;\r\n            for (let variable of variables) {\r\n                const value = this.dockerfile.resolveVariable(variable.getName(), variable.getNameRange().start.line);\r\n                swaps.push(value);\r\n                requiresExpansion = requiresExpansion || value !== undefined;\r\n            }\r\n            if (requiresExpansion) {\r\n                let expanded = \"\";\r\n                for (let j = 0; j < swaps.length; j++) {\r\n                    const variableRange = variables[j].getRange();\r\n                    const start = this.document.offsetAt(variableRange.start);\r\n                    const end = this.document.offsetAt(variableRange.end);\r\n                    if (swaps[j]) {\r\n                        // replace variable with its resolved value\r\n                        expanded += this.document.getText().substring(offset, start);\r\n                        expanded += swaps[j];\r\n                        offset = end;\r\n                    }\r\n                    else {\r\n                        expanded += this.document.getText().substring(offset, end);\r\n                        offset = end;\r\n                    }\r\n                }\r\n                args[i] = new argument_1.Argument(expanded, argRange);\r\n            }\r\n        }\r\n        return args;\r\n    }\r\n    getVariables() {\r\n        const variables = [];\r\n        const args = this.getArguments();\r\n        for (const arg of args) {\r\n            let range = arg.getRange();\r\n            let rawValue = this.document.getText().substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\r\n            const parsedVariables = this.parseVariables(this.document.offsetAt(arg.getRange().start), rawValue);\r\n            for (const parsedVariable of parsedVariables) {\r\n                variables.push(parsedVariable);\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n    parseVariables(offset, arg) {\r\n        let variables = [];\r\n        variableLoop: for (let i = 0; i < arg.length; i++) {\r\n            switch (arg.charAt(i)) {\r\n                case this.escapeChar:\r\n                    if (arg.charAt(i + 1) === '$') {\r\n                        i++;\r\n                    }\r\n                    break;\r\n                case '$':\r\n                    if (arg.charAt(i + 1) === '{') {\r\n                        let escapedName = \"\";\r\n                        let nameEnd = -1;\r\n                        nameLoop: for (let j = i + 2; j < arg.length; j++) {\r\n                            let char = arg.charAt(j);\r\n                            switch (char) {\r\n                                case this.escapeChar:\r\n                                    for (let k = j + 1; k < arg.length; k++) {\r\n                                        switch (arg.charAt(k)) {\r\n                                            case ' ':\r\n                                            case '\\t':\r\n                                            case '\\r':\r\n                                                // ignore whitespace\r\n                                                continue;\r\n                                            case '\\n':\r\n                                                // escape this newline\r\n                                                j = k;\r\n                                                continue nameLoop;\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case '}':\r\n                                    if (nameEnd === -1) {\r\n                                        nameEnd = j;\r\n                                    }\r\n                                    let start = this.document.positionAt(offset + i);\r\n                                    variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 2), this.document.positionAt(offset + nameEnd)), vscode_languageserver_types_1.Range.create(start, this.document.positionAt(offset + j + 1)), this.dockerfile.resolveVariable(escapedName, start.line) !== undefined, this.isBuildVariable(escapedName, start.line)));\r\n                                    i = j;\r\n                                    continue variableLoop;\r\n                                case ':':\r\n                                    if (nameEnd === -1) {\r\n                                        nameEnd = j;\r\n                                    }\r\n                                    break;\r\n                                default:\r\n                                    if (nameEnd === -1) {\r\n                                        escapedName += char;\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                        // no } found, not a valid variable, stop processing\r\n                        break variableLoop;\r\n                    }\r\n                    else if (util_1.Util.isWhitespace(arg.charAt(i + 1)) || i === arg.length - 1) {\r\n                        // $ followed by whitespace or EOF, ignore this variable\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        let escapedName = \"\";\r\n                        nameLoop: for (let j = i + 1; j < arg.length; j++) {\r\n                            let char = arg.charAt(j);\r\n                            switch (char) {\r\n                                case '$':\r\n                                case '\\'':\r\n                                case '\"':\r\n                                case ' ':\r\n                                case '\\t':\r\n                                    let varStart = this.document.positionAt(offset + i);\r\n                                    variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 1), this.document.positionAt(offset + j)), vscode_languageserver_types_1.Range.create(varStart, this.document.positionAt(offset + j)), this.dockerfile.resolveVariable(escapedName, varStart.line) !== undefined, this.isBuildVariable(escapedName, varStart.line)));\r\n                                    i = j - 1;\r\n                                    continue variableLoop;\r\n                                case this.escapeChar:\r\n                                    for (let k = j + 1; k < arg.length; k++) {\r\n                                        switch (arg.charAt(k)) {\r\n                                            case ' ':\r\n                                            case '\\t':\r\n                                            case '\\r':\r\n                                                // ignore whitespace\r\n                                                continue;\r\n                                            case '\\n':\r\n                                                // escape this newline\r\n                                                j = k;\r\n                                                continue nameLoop;\r\n                                        }\r\n                                    }\r\n                                    // reached EOF after an escape character\r\n                                    let start = this.document.positionAt(offset + i);\r\n                                    variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 1), this.document.positionAt(offset + j)), vscode_languageserver_types_1.Range.create(start, this.document.positionAt(offset + j)), this.dockerfile.resolveVariable(escapedName, start.line) !== undefined, this.isBuildVariable(escapedName, start.line)));\r\n                                    break variableLoop;\r\n                            }\r\n                            escapedName += char;\r\n                        }\r\n                        let start = this.document.positionAt(offset + i);\r\n                        variables.push(new variable_1.Variable(escapedName, vscode_languageserver_types_1.Range.create(this.document.positionAt(offset + i + 1), this.document.positionAt(offset + arg.length)), vscode_languageserver_types_1.Range.create(start, this.document.positionAt(offset + arg.length)), this.dockerfile.resolveVariable(escapedName, start.line) !== undefined, this.isBuildVariable(escapedName, start.line)));\r\n                    }\r\n                    break variableLoop;\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n    isBuildVariable(variable, line) {\r\n        let image = this.dockerfile.getContainingImage(vscode_languageserver_types_1.Position.create(line, 0));\r\n        let envs = image.getENVs();\r\n        for (let i = envs.length - 1; i >= 0; i--) {\r\n            if (envs[i].isBefore(line)) {\r\n                for (let property of envs[i].getProperties()) {\r\n                    if (property.getName() === variable) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let args = image.getARGs();\r\n        for (let i = args.length - 1; i >= 0; i--) {\r\n            if (args[i].isBefore(line)) {\r\n                let property = args[i].getProperty();\r\n                if (property && property.getName() === variable) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexports.Instruction = Instruction;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instruction.js\n// module id = 4\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 5\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst argument_1 = require(\"./argument\");\r\nconst modifiableInstruction_1 = require(\"./modifiableInstruction\");\r\nclass JSONInstruction extends modifiableInstruction_1.ModifiableInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n        this.jsonStrings = [];\r\n        const argsContent = this.getRawArgumentsContent();\r\n        if (argsContent === null) {\r\n            return;\r\n        }\r\n        const args = this.getArguments();\r\n        if (args.length === 1 && args[0].getValue() === \"[]\") {\r\n            let argRange = args[0].getRange();\r\n            this.openingBracket = new argument_1.Argument(\"[\", vscode_languageserver_types_1.Range.create(argRange.start.line, argRange.start.character, argRange.start.line, argRange.start.character + 1));\r\n            this.closingBracket = new argument_1.Argument(\"]\", vscode_languageserver_types_1.Range.create(argRange.start.line, argRange.start.character + 1, argRange.end.line, argRange.end.character));\r\n            return;\r\n        }\r\n        else if (args.length === 2 && args[0].getValue() === '[' && args[1].getValue() === ']') {\r\n            this.openingBracket = args[0];\r\n            this.closingBracket = args[1];\r\n            return;\r\n        }\r\n        const argsOffset = document.offsetAt(this.getArgumentsRange().start);\r\n        let start = -1;\r\n        let last = \"\";\r\n        let quoted = false;\r\n        let escapedArg = \"\";\r\n        argsCheck: for (let i = 0; i < argsContent.length; i++) {\r\n            let char = argsContent.charAt(i);\r\n            switch (char) {\r\n                case '[':\r\n                    if (last === \"\") {\r\n                        this.openingBracket = new argument_1.Argument(\"[\", vscode_languageserver_types_1.Range.create(document.positionAt(argsOffset + i), document.positionAt(argsOffset + i + 1)));\r\n                        last = '[';\r\n                    }\r\n                    else if (quoted) {\r\n                        escapedArg = escapedArg + char;\r\n                    }\r\n                    else {\r\n                        break argsCheck;\r\n                    }\r\n                    break;\r\n                case '\"':\r\n                    if (last === '[' || last === ',') {\r\n                        start = i;\r\n                        quoted = true;\r\n                        last = '\"';\r\n                        escapedArg = escapedArg + char;\r\n                        continue;\r\n                    }\r\n                    else if (last === '\"') {\r\n                        if (quoted) {\r\n                            escapedArg = escapedArg + char;\r\n                            // quoted string done\r\n                            quoted = false;\r\n                            this.jsonStrings.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(document.positionAt(argsOffset + start), document.positionAt(argsOffset + i + 1))));\r\n                            escapedArg = \"\";\r\n                        }\r\n                        else {\r\n                            // should be a , or a ]\r\n                            break argsCheck;\r\n                        }\r\n                    }\r\n                    else {\r\n                        break argsCheck;\r\n                    }\r\n                    break;\r\n                case ',':\r\n                    if (quoted) {\r\n                        escapedArg = escapedArg + char;\r\n                    }\r\n                    else {\r\n                        if (last === '\"') {\r\n                            last = ',';\r\n                        }\r\n                        else {\r\n                            break argsCheck;\r\n                        }\r\n                    }\r\n                    break;\r\n                case ']':\r\n                    if (quoted) {\r\n                        escapedArg = escapedArg + char;\r\n                    }\r\n                    else if (last !== \"\") {\r\n                        this.closingBracket = new argument_1.Argument(\"]\", vscode_languageserver_types_1.Range.create(document.positionAt(argsOffset + i), document.positionAt(argsOffset + i + 1)));\r\n                        break argsCheck;\r\n                    }\r\n                    break;\r\n                case ' ':\r\n                case '\\t':\r\n                    break;\r\n                case '\\\\':\r\n                    if (quoted) {\r\n                        switch (argsContent.charAt(i + 1)) {\r\n                            case '\"':\r\n                            case '\\\\':\r\n                                escapedArg = escapedArg + argsContent.charAt(i + 1);\r\n                                i++;\r\n                                continue;\r\n                            case ' ':\r\n                            case '\\t':\r\n                                escapeCheck: for (let j = i + 2; j < argsContent.length; j++) {\r\n                                    switch (argsContent.charAt(j)) {\r\n                                        case '\\r':\r\n                                            // offset one more for \\r\\n\r\n                                            j++;\r\n                                        case '\\n':\r\n                                            i = j;\r\n                                            continue argsCheck;\r\n                                        case ' ':\r\n                                        case '\\t':\r\n                                            break;\r\n                                        default:\r\n                                            break escapeCheck;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case '\\r':\r\n                                // offset one more for \\r\\n\r\n                                i++;\r\n                            default:\r\n                                i++;\r\n                                continue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        escapeCheck: for (let j = i + 1; j < argsContent.length; j++) {\r\n                            switch (argsContent.charAt(j)) {\r\n                                case '\\r':\r\n                                    // offset one more for \\r\\n\r\n                                    j++;\r\n                                case '\\n':\r\n                                    i = j;\r\n                                    continue argsCheck;\r\n                                case ' ':\r\n                                case '\\t':\r\n                                    break;\r\n                                default:\r\n                                    break escapeCheck;\r\n                            }\r\n                        }\r\n                    }\r\n                    break argsCheck;\r\n                default:\r\n                    if (!quoted) {\r\n                        break argsCheck;\r\n                    }\r\n                    escapedArg = escapedArg + char;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    stopSearchingForFlags(_value) {\r\n        return true;\r\n    }\r\n    getOpeningBracket() {\r\n        return this.openingBracket;\r\n    }\r\n    getJSONStrings() {\r\n        return this.jsonStrings;\r\n    }\r\n    getClosingBracket() {\r\n        return this.closingBracket;\r\n    }\r\n}\r\nexports.JSONInstruction = JSONInstruction;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/jsonInstruction.js\n// module id = 6\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst argument_1 = require(\"./argument\");\r\nconst modifiableInstruction_1 = require(\"./modifiableInstruction\");\r\nclass JSONInstruction extends modifiableInstruction_1.ModifiableInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n        this.jsonStrings = [];\r\n        const argsContent = this.getRawArgumentsContent();\r\n        if (argsContent === null) {\r\n            return;\r\n        }\r\n        const args = this.getArguments();\r\n        if (args.length === 1 && args[0].getValue() === \"[]\") {\r\n            let argRange = args[0].getRange();\r\n            this.openingBracket = new argument_1.Argument(\"[\", vscode_languageserver_types_1.Range.create(argRange.start.line, argRange.start.character, argRange.start.line, argRange.start.character + 1));\r\n            this.closingBracket = new argument_1.Argument(\"]\", vscode_languageserver_types_1.Range.create(argRange.start.line, argRange.start.character + 1, argRange.end.line, argRange.end.character));\r\n            return;\r\n        }\r\n        else if (args.length === 2 && args[0].getValue() === '[' && args[1].getValue() === ']') {\r\n            this.openingBracket = args[0];\r\n            this.closingBracket = args[1];\r\n            return;\r\n        }\r\n        const argsOffset = document.offsetAt(this.getArgumentsRange().start);\r\n        let start = -1;\r\n        let last = \"\";\r\n        let quoted = false;\r\n        let escapedArg = \"\";\r\n        argsCheck: for (let i = 0; i < argsContent.length; i++) {\r\n            let char = argsContent.charAt(i);\r\n            switch (char) {\r\n                case '[':\r\n                    if (last === \"\") {\r\n                        this.openingBracket = new argument_1.Argument(\"[\", vscode_languageserver_types_1.Range.create(document.positionAt(argsOffset + i), document.positionAt(argsOffset + i + 1)));\r\n                        last = '[';\r\n                    }\r\n                    else if (quoted) {\r\n                        escapedArg = escapedArg + char;\r\n                    }\r\n                    else {\r\n                        break argsCheck;\r\n                    }\r\n                    break;\r\n                case '\"':\r\n                    if (last === '[' || last === ',') {\r\n                        start = i;\r\n                        quoted = true;\r\n                        last = '\"';\r\n                        escapedArg = escapedArg + char;\r\n                        continue;\r\n                    }\r\n                    else if (last === '\"') {\r\n                        if (quoted) {\r\n                            escapedArg = escapedArg + char;\r\n                            // quoted string done\r\n                            quoted = false;\r\n                            this.jsonStrings.push(new argument_1.Argument(escapedArg, vscode_languageserver_types_1.Range.create(document.positionAt(argsOffset + start), document.positionAt(argsOffset + i + 1))));\r\n                            escapedArg = \"\";\r\n                        }\r\n                        else {\r\n                            // should be a , or a ]\r\n                            break argsCheck;\r\n                        }\r\n                    }\r\n                    else {\r\n                        break argsCheck;\r\n                    }\r\n                    break;\r\n                case ',':\r\n                    if (quoted) {\r\n                        escapedArg = escapedArg + char;\r\n                    }\r\n                    else {\r\n                        if (last === '\"') {\r\n                            last = ',';\r\n                        }\r\n                        else {\r\n                            break argsCheck;\r\n                        }\r\n                    }\r\n                    break;\r\n                case ']':\r\n                    if (quoted) {\r\n                        escapedArg = escapedArg + char;\r\n                    }\r\n                    else if (last !== \"\") {\r\n                        this.closingBracket = new argument_1.Argument(\"]\", vscode_languageserver_types_1.Range.create(document.positionAt(argsOffset + i), document.positionAt(argsOffset + i + 1)));\r\n                        break argsCheck;\r\n                    }\r\n                    break;\r\n                case ' ':\r\n                case '\\t':\r\n                    break;\r\n                case '\\\\':\r\n                    if (quoted) {\r\n                        switch (argsContent.charAt(i + 1)) {\r\n                            case '\"':\r\n                            case '\\\\':\r\n                                escapedArg = escapedArg + argsContent.charAt(i + 1);\r\n                                i++;\r\n                                continue;\r\n                            case ' ':\r\n                            case '\\t':\r\n                                escapeCheck: for (let j = i + 2; j < argsContent.length; j++) {\r\n                                    switch (argsContent.charAt(j)) {\r\n                                        case '\\r':\r\n                                            // offset one more for \\r\\n\r\n                                            j++;\r\n                                        case '\\n':\r\n                                            i = j;\r\n                                            continue argsCheck;\r\n                                        case ' ':\r\n                                        case '\\t':\r\n                                            break;\r\n                                        default:\r\n                                            break escapeCheck;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case '\\r':\r\n                                // offset one more for \\r\\n\r\n                                i++;\r\n                            default:\r\n                                i++;\r\n                                continue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        escapeCheck: for (let j = i + 1; j < argsContent.length; j++) {\r\n                            switch (argsContent.charAt(j)) {\r\n                                case '\\r':\r\n                                    // offset one more for \\r\\n\r\n                                    j++;\r\n                                case '\\n':\r\n                                    i = j;\r\n                                    continue argsCheck;\r\n                                case ' ':\r\n                                case '\\t':\r\n                                    break;\r\n                                default:\r\n                                    break escapeCheck;\r\n                            }\r\n                        }\r\n                    }\r\n                    break argsCheck;\r\n                default:\r\n                    if (!quoted) {\r\n                        break argsCheck;\r\n                    }\r\n                    escapedArg = escapedArg + char;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    stopSearchingForFlags(_value) {\r\n        return true;\r\n    }\r\n    getOpeningBracket() {\r\n        return this.openingBracket;\r\n    }\r\n    getJSONStrings() {\r\n        return this.jsonStrings;\r\n    }\r\n    getClosingBracket() {\r\n        return this.closingBracket;\r\n    }\r\n}\r\nexports.JSONInstruction = JSONInstruction;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/jsonInstruction.js\n// module id = 7\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 8\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Util {\r\n    static isWhitespace(char) {\r\n        return char === ' ' || char === '\\t' || Util.isNewline(char);\r\n    }\r\n    static isNewline(char) {\r\n        return char === '\\r' || char === '\\n';\r\n    }\r\n    static findLeadingNonWhitespace(content, escapeChar) {\r\n        whitespaceCheck: for (let i = 0; i < content.length; i++) {\r\n            switch (content.charAt(i)) {\r\n                case ' ':\r\n                case '\\t':\r\n                    continue;\r\n                case escapeChar:\r\n                    escapeCheck: for (let j = i + 1; j < content.length; j++) {\r\n                        switch (content.charAt(j)) {\r\n                            case ' ':\r\n                            case '\\t':\r\n                                continue;\r\n                            case '\\r':\r\n                                // offset one more for \\r\\n\r\n                                i = j + 1;\r\n                                continue whitespaceCheck;\r\n                            case '\\n':\r\n                                i = j;\r\n                                continue whitespaceCheck;\r\n                            default:\r\n                                break escapeCheck;\r\n                        }\r\n                    }\r\n                    return i;\r\n                default:\r\n                    return i;\r\n            }\r\n        }\r\n        // only possible if the content is the empty string\r\n        return -1;\r\n    }\r\n    /**\r\n     * Determines if the given position is contained within the given range.\r\n     *\r\n     * @param position the position to check\r\n     * @param range the range to see if the position is inside of\r\n     */\r\n    static isInsideRange(position, range) {\r\n        if (range.start.line === range.end.line) {\r\n            return range.start.line === position.line\r\n                && range.start.character <= position.character\r\n                && position.character <= range.end.character;\r\n        }\r\n        else if (range.start.line === position.line) {\r\n            return range.start.character <= position.character;\r\n        }\r\n        else if (range.end.line === position.line) {\r\n            return position.character <= range.end.character;\r\n        }\r\n        return range.start.line < position.line && position.line < range.end.line;\r\n    }\r\n}\r\nexports.Util = Util;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/util.js\n// module id = 9\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Util {\r\n    static isWhitespace(char) {\r\n        return char === ' ' || char === '\\t' || Util.isNewline(char);\r\n    }\r\n    static isNewline(char) {\r\n        return char === '\\r' || char === '\\n';\r\n    }\r\n    static findLeadingNonWhitespace(content, escapeChar) {\r\n        whitespaceCheck: for (let i = 0; i < content.length; i++) {\r\n            switch (content.charAt(i)) {\r\n                case ' ':\r\n                case '\\t':\r\n                    continue;\r\n                case escapeChar:\r\n                    escapeCheck: for (let j = i + 1; j < content.length; j++) {\r\n                        switch (content.charAt(j)) {\r\n                            case ' ':\r\n                            case '\\t':\r\n                                continue;\r\n                            case '\\r':\r\n                                // offset one more for \\r\\n\r\n                                i = j + 1;\r\n                                continue whitespaceCheck;\r\n                            case '\\n':\r\n                                i = j;\r\n                                continue whitespaceCheck;\r\n                            default:\r\n                                break escapeCheck;\r\n                        }\r\n                    }\r\n                    return i;\r\n                default:\r\n                    return i;\r\n            }\r\n        }\r\n        // only possible if the content is the empty string\r\n        return -1;\r\n    }\r\n    /**\r\n     * Determines if the given position is contained within the given range.\r\n     *\r\n     * @param position the position to check\r\n     * @param range the range to see if the position is inside of\r\n     */\r\n    static isInsideRange(position, range) {\r\n        if (range.start.line === range.end.line) {\r\n            return range.start.line === position.line\r\n                && range.start.character <= position.character\r\n                && position.character <= range.end.character;\r\n        }\r\n        else if (range.start.line === position.line) {\r\n            return range.start.character <= position.character;\r\n        }\r\n        else if (range.end.line === position.line) {\r\n            return position.character <= range.end.character;\r\n        }\r\n        return range.start.line < position.line && position.line < range.end.line;\r\n    }\r\n}\r\nexports.Util = Util;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/util.js\n// module id = 10\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 11\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args').nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  processNextTick(cb, err);\n};\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_duplex.js\n// module id = 12\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-util-is/lib/util.js\n// module id = 13\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar argument_1 = require(\"./argument\");\r\nexports.Argument = argument_1.Argument;\r\nconst comment_1 = require(\"./comment\");\r\nexports.Comment = comment_1.Comment;\r\nconst parser_1 = require(\"./parser\");\r\nvar flag_1 = require(\"./flag\");\r\nexports.Flag = flag_1.Flag;\r\nconst instruction_1 = require(\"./instruction\");\r\nexports.Instruction = instruction_1.Instruction;\r\nvar line_1 = require(\"./line\");\r\nexports.Line = line_1.Line;\r\nconst parserDirective_1 = require(\"./parserDirective\");\r\nexports.ParserDirective = parserDirective_1.ParserDirective;\r\nvar property_1 = require(\"./property\");\r\nexports.Property = property_1.Property;\r\nvar variable_1 = require(\"./variable\");\r\nexports.Variable = variable_1.Variable;\r\nvar add_1 = require(\"./instructions/add\");\r\nexports.Add = add_1.Add;\r\nconst arg_1 = require(\"./instructions/arg\");\r\nexports.Arg = arg_1.Arg;\r\nconst cmd_1 = require(\"./instructions/cmd\");\r\nexports.Cmd = cmd_1.Cmd;\r\nconst copy_1 = require(\"./instructions/copy\");\r\nexports.Copy = copy_1.Copy;\r\nconst entrypoint_1 = require(\"./instructions/entrypoint\");\r\nexports.Entrypoint = entrypoint_1.Entrypoint;\r\nconst env_1 = require(\"./instructions/env\");\r\nexports.Env = env_1.Env;\r\nconst from_1 = require(\"./instructions/from\");\r\nexports.From = from_1.From;\r\nconst healthcheck_1 = require(\"./instructions/healthcheck\");\r\nexports.Healthcheck = healthcheck_1.Healthcheck;\r\nvar jsonInstruction_1 = require(\"./jsonInstruction\");\r\nexports.JSONInstruction = jsonInstruction_1.JSONInstruction;\r\nvar label_1 = require(\"./instructions/label\");\r\nexports.Label = label_1.Label;\r\nvar modifiableInstruction_1 = require(\"./modifiableInstruction\");\r\nexports.ModifiableInstruction = modifiableInstruction_1.ModifiableInstruction;\r\nvar onbuild_1 = require(\"./instructions/onbuild\");\r\nexports.Onbuild = onbuild_1.Onbuild;\r\nvar propertyInstruction_1 = require(\"./propertyInstruction\");\r\nexports.PropertyInstruction = propertyInstruction_1.PropertyInstruction;\r\nvar shell_1 = require(\"./instructions/shell\");\r\nexports.Shell = shell_1.Shell;\r\nvar stopsignal_1 = require(\"./instructions/stopsignal\");\r\nexports.Stopsignal = stopsignal_1.Stopsignal;\r\nvar user_1 = require(\"./instructions/user\");\r\nexports.User = user_1.User;\r\nvar volume_1 = require(\"./instructions/volume\");\r\nexports.Volume = volume_1.Volume;\r\nvar workdir_1 = require(\"./instructions/workdir\");\r\nexports.Workdir = workdir_1.Workdir;\r\nvar Keyword;\r\n(function (Keyword) {\r\n    Keyword[\"ADD\"] = \"ARG\";\r\n    Keyword[\"ARG\"] = \"ARG\";\r\n    Keyword[\"CMD\"] = \"CMD\";\r\n    Keyword[\"COPY\"] = \"COPY\";\r\n    Keyword[\"ENTRYPOINT\"] = \"ENTRYPOINT\";\r\n    Keyword[\"ENV\"] = \"ENV\";\r\n    Keyword[\"EXPOSE\"] = \"EXPOSE\";\r\n    Keyword[\"FROM\"] = \"FROM\";\r\n    Keyword[\"HEALTHCHECK\"] = \"HEALTHCHECK\";\r\n    Keyword[\"LABEL\"] = \"LABEL\";\r\n    Keyword[\"MAINTAINER\"] = \"MAINTAINER\";\r\n    Keyword[\"ONBUILD\"] = \"ONBUILD\";\r\n    Keyword[\"RUN\"] = \"RUN\";\r\n    Keyword[\"SHELL\"] = \"SHELL\";\r\n    Keyword[\"STOPSIGNAL\"] = \"STOPSIGNAL\";\r\n    Keyword[\"USER\"] = \"USER\";\r\n    Keyword[\"VOLUME\"] = \"VOLUME\";\r\n    Keyword[\"WORKDIR\"] = \"WORKDIR\";\r\n})(Keyword = exports.Keyword || (exports.Keyword = {}));\r\nvar Directive;\r\n(function (Directive) {\r\n    Directive[\"escape\"] = \"escape\";\r\n})(Directive = exports.Directive || (exports.Directive = {}));\r\nexports.DefaultVariables = [\r\n    \"FTP_PROXY\", \"ftp_proxy\",\r\n    \"HTTP_PROXY\", \"http_proxy\",\r\n    \"HTTPS_PROXY\", \"https_proxy\",\r\n    \"NO_PROXY\", \"no_proxy\"\r\n];\r\nvar DockerfileParser;\r\n(function (DockerfileParser) {\r\n    function parse(content) {\r\n        let parser = new parser_1.Parser();\r\n        return parser.parse(content);\r\n    }\r\n    DockerfileParser.parse = parse;\r\n})(DockerfileParser = exports.DockerfileParser || (exports.DockerfileParser = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/main.js\n// module id = 14\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.KEYWORDS = [\r\n    \"ADD\",\r\n    \"ARG\",\r\n    \"CMD\",\r\n    \"COPY\",\r\n    \"ENTRYPOINT\",\r\n    \"ENV\",\r\n    \"EXPOSE\",\r\n    \"FROM\",\r\n    \"HEALTHCHECK\",\r\n    \"LABEL\",\r\n    \"MAINTAINER\",\r\n    \"ONBUILD\",\r\n    \"RUN\",\r\n    \"SHELL\",\r\n    \"STOPSIGNAL\",\r\n    \"USER\",\r\n    \"VOLUME\",\r\n    \"WORKDIR\"\r\n];\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    Util.isWhitespace = function (char) {\r\n        return char === ' ' || char === '\\t' || Util.isNewline(char);\r\n    };\r\n    Util.isNewline = function (char) {\r\n        return char === '\\r' || char === '\\n';\r\n    };\r\n    /**\r\n     * Determines if the given position is contained within the given range.\r\n     *\r\n     * @param position the position to check\r\n     * @param range the range to see if the position is inside of\r\n     */\r\n    Util.isInsideRange = function (position, range) {\r\n        if (range === null) {\r\n            return false;\r\n        }\r\n        else if (range.start.line === range.end.line) {\r\n            return range.start.line === position.line\r\n                && range.start.character <= position.character\r\n                && position.character <= range.end.character;\r\n        }\r\n        else if (range.start.line === position.line) {\r\n            return range.start.character <= position.character;\r\n        }\r\n        else if (range.end.line === position.line) {\r\n            return position.character <= range.end.character;\r\n        }\r\n        return range.start.line < position.line && position.line < range.end.line;\r\n    };\r\n    Util.rangeEquals = function (range, range2) {\r\n        return Util.positionEquals(range.start, range2.start) && Util.positionEquals(range.end, range2.end);\r\n    };\r\n    Util.positionEquals = function (position, position2) {\r\n        return position.line == position2.line && position.character === position2.character;\r\n    };\r\n    Util.positionBefore = function (origin, other) {\r\n        if (origin.line < other.line) {\r\n            return true;\r\n        }\r\n        else if (origin.line > other.line) {\r\n            return false;\r\n        }\r\n        return origin.character < other.character;\r\n    };\r\n    return Util;\r\n}());\r\nexports.Util = Util;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/docker.js\n// module id = 15\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Is = require(\"./utils/is\");\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nvar DocumentFilter;\n(function (DocumentFilter) {\n    function is(value) {\n        let candidate = value;\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\n    }\n    DocumentFilter.is = is;\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\n/**\n * The `client/registerCapability` request is sent from the server to the client to register a new feature\n * handler on the client side.\n */\nvar RegistrationRequest;\n(function (RegistrationRequest) {\n    RegistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/registerCapability');\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\n/**\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered feature\n * handler on the client side.\n */\nvar UnregistrationRequest;\n(function (UnregistrationRequest) {\n    UnregistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/unregisterCapability');\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\n;\n/**\n * Defines how the host (editor) should sync\n * document changes to the language server.\n */\nvar TextDocumentSyncKind;\n(function (TextDocumentSyncKind) {\n    /**\n     * Documents should not be synced at all.\n     */\n    TextDocumentSyncKind.None = 0;\n    /**\n     * Documents are synced by always sending the full content\n     * of the document.\n     */\n    TextDocumentSyncKind.Full = 1;\n    /**\n     * Documents are synced by sending the full content on open.\n     * After that only incremental updates to the document are\n     * send.\n     */\n    TextDocumentSyncKind.Incremental = 2;\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\n/**\n * The initialize request is sent from the client to the server.\n * It is sent once as the request after starting up the server.\n * The requests parameter is of type [InitializeParams](#InitializeParams)\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\n * resolves to such.\n */\nvar InitializeRequest;\n(function (InitializeRequest) {\n    InitializeRequest.type = new vscode_jsonrpc_1.RequestType('initialize');\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\n/**\n * Known error codes for an `InitializeError`;\n */\nvar InitializeError;\n(function (InitializeError) {\n    /**\n     * If the protocol version provided by the client can't be handled by the server.\n     * @deprecated This initialize error got replaced by client capabilities. There is\n     * no version handshake in version 3.0x\n     */\n    InitializeError.unknownProtocolVersion = 1;\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\n/**\n * The intialized notification is send from the client to the\n * server after the client is fully initialized and the server\n * is allowed to send requests from the server to the client.\n */\nvar InitializedNotification;\n(function (InitializedNotification) {\n    InitializedNotification.type = new vscode_jsonrpc_1.NotificationType('initialized');\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\n//---- Shutdown Method ----\n/**\n * A shutdown request is sent from the client to the server.\n * It is sent once when the client descides to shutdown the\n * server. The only notification that is sent after a shudown request\n * is the exit event.\n */\nvar ShutdownRequest;\n(function (ShutdownRequest) {\n    ShutdownRequest.type = new vscode_jsonrpc_1.RequestType0('shutdown');\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\n//---- Exit Notification ----\n/**\n * The exit event is sent from the client to the server to\n * ask the server to exit its process.\n */\nvar ExitNotification;\n(function (ExitNotification) {\n    ExitNotification.type = new vscode_jsonrpc_1.NotificationType0('exit');\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\n//---- Configuration notification ----\n/**\n * The configuration change notification is sent from the client to the server\n * when the client's configuration has changed. The notification contains\n * the changed configuration as defined by the language client.\n */\nvar DidChangeConfigurationNotification;\n(function (DidChangeConfigurationNotification) {\n    DidChangeConfigurationNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeConfiguration');\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\n//---- Message show and log notifications ----\n/**\n * The message type\n */\nvar MessageType;\n(function (MessageType) {\n    /**\n     * An error message.\n     */\n    MessageType.Error = 1;\n    /**\n     * A warning message.\n     */\n    MessageType.Warning = 2;\n    /**\n     * An information message.\n     */\n    MessageType.Info = 3;\n    /**\n     * A log message.\n     */\n    MessageType.Log = 4;\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\n/**\n * The show message notification is sent from a server to a client to ask\n * the client to display a particular message in the user interface.\n */\nvar ShowMessageNotification;\n(function (ShowMessageNotification) {\n    ShowMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/showMessage');\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\n/**\n * The show message request is sent from the server to the clinet to show a message\n * and a set of options actions to the user.\n */\nvar ShowMessageRequest;\n(function (ShowMessageRequest) {\n    ShowMessageRequest.type = new vscode_jsonrpc_1.RequestType('window/showMessageRequest');\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\n/**\n * The log message notification is sent from the server to the client to ask\n * the client to log a particular message.\n */\nvar LogMessageNotification;\n(function (LogMessageNotification) {\n    LogMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/logMessage');\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\n//---- Telemetry notification\n/**\n * The telemetry event notification is sent from the server to the client to ask\n * the client to log telemetry data.\n */\nvar TelemetryEventNotification;\n(function (TelemetryEventNotification) {\n    TelemetryEventNotification.type = new vscode_jsonrpc_1.NotificationType('telemetry/event');\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\n/**\n * The document open notification is sent from the client to the server to signal\n * newly opened text documents. The document's truth is now managed by the client\n * and the server must not try to read the document's truth using the document's\n * uri.\n */\nvar DidOpenTextDocumentNotification;\n(function (DidOpenTextDocumentNotification) {\n    DidOpenTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didOpen');\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\n/**\n * The document change notification is sent from the client to the server to signal\n * changes to a text document.\n */\nvar DidChangeTextDocumentNotification;\n(function (DidChangeTextDocumentNotification) {\n    DidChangeTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didChange');\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\n/**\n * The document close notification is sent from the client to the server when\n * the document got closed in the client. The document's truth now exists\n * where the document's uri points to (e.g. if the document's uri is a file uri\n * the truth now exists on disk).\n */\nvar DidCloseTextDocumentNotification;\n(function (DidCloseTextDocumentNotification) {\n    DidCloseTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didClose');\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\n/**\n * The document save notification is sent from the client to the server when\n * the document got saved in the client.\n */\nvar DidSaveTextDocumentNotification;\n(function (DidSaveTextDocumentNotification) {\n    DidSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didSave');\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\n/**\n * A document will save notification is sent from the client to the server before\n * the document is actually saved.\n */\nvar WillSaveTextDocumentNotification;\n(function (WillSaveTextDocumentNotification) {\n    WillSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/willSave');\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\n/**\n * A document will save request is sent from the client to the server before\n * the document is actually saved. The request can return an array of TextEdits\n * which will be applied to the text document before it is saved. Please note that\n * clients might drop results if computing the text edits took too long or if a\n * server constantly fails on this request. This is done to keep the save fast and\n * reliable.\n */\nvar WillSaveTextDocumentWaitUntilRequest;\n(function (WillSaveTextDocumentWaitUntilRequest) {\n    WillSaveTextDocumentWaitUntilRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/willSaveWaitUntil');\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\n//---- File eventing ----\n/**\n * The watched files notification is sent from the client to the server when\n * the client detects changes to file watched by the lanaguage client.\n */\nvar DidChangeWatchedFilesNotification;\n(function (DidChangeWatchedFilesNotification) {\n    DidChangeWatchedFilesNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWatchedFiles');\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\n/**\n * The file event type\n */\nvar FileChangeType;\n(function (FileChangeType) {\n    /**\n     * The file got created.\n     */\n    FileChangeType.Created = 1;\n    /**\n     * The file got changed.\n     */\n    FileChangeType.Changed = 2;\n    /**\n     * The file got deleted.\n     */\n    FileChangeType.Deleted = 3;\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\n//---- Diagnostic notification ----\n/**\n * Diagnostics notification are sent from the server to the client to signal\n * results of validation runs.\n */\nvar PublishDiagnosticsNotification;\n(function (PublishDiagnosticsNotification) {\n    PublishDiagnosticsNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/publishDiagnostics');\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\n/**\n * Request to request completion at a given text document position. The request's\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\n * or a Thenable that resolves to such.\n */\nvar CompletionRequest;\n(function (CompletionRequest) {\n    CompletionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/completion');\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\n/**\n * Request to resolve additional information for a given completion item.The request's\n * parameter is of type [CompletionItem](#CompletionItem) the response\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\n */\nvar CompletionResolveRequest;\n(function (CompletionResolveRequest) {\n    CompletionResolveRequest.type = new vscode_jsonrpc_1.RequestType('completionItem/resolve');\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\n//---- Hover Support -------------------------------\n/**\n * Request to request hover information at a given text document position. The request's\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\n * type [Hover](#Hover) or a Thenable that resolves to such.\n */\nvar HoverRequest;\n(function (HoverRequest) {\n    HoverRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/hover');\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\nvar SignatureHelpRequest;\n(function (SignatureHelpRequest) {\n    SignatureHelpRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/signatureHelp');\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\n//---- Goto Definition -------------------------------------\n/**\n * A request to resolve the defintion location of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the response is of type [Definition](#Definition) or a\n * Thenable that resolves to such.\n */\nvar DefinitionRequest;\n(function (DefinitionRequest) {\n    DefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/definition');\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\n/**\n * A request to resolve project-wide references for the symbol denoted\n * by the given text document position. The request's parameter is of\n * type [ReferenceParams](#ReferenceParams) the response is of type\n * [Location[]](#Location) or a Thenable that resolves to such.\n */\nvar ReferencesRequest;\n(function (ReferencesRequest) {\n    ReferencesRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/references');\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\n//---- Document Highlight ----------------------------------\n/**\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\n * text document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the request reponse is of type [DocumentHighlight[]]\n * (#DocumentHighlight) or a Thenable that resolves to such.\n */\nvar DocumentHighlightRequest;\n(function (DocumentHighlightRequest) {\n    DocumentHighlightRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentHighlight');\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\n//---- Document Symbol Provider ---------------------------\n/**\n * A request to list all symbols found in a given text document. The request's\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\n * that resolves to such.\n */\nvar DocumentSymbolRequest;\n(function (DocumentSymbolRequest) {\n    DocumentSymbolRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentSymbol');\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\n//---- Workspace Symbol Provider ---------------------------\n/**\n * A request to list project-wide symbols matching the query string given\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\n * resolves to such.\n */\nvar WorkspaceSymbolRequest;\n(function (WorkspaceSymbolRequest) {\n    WorkspaceSymbolRequest.type = new vscode_jsonrpc_1.RequestType('workspace/symbol');\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\n/**\n * A request to provide commands for the given text document and range.\n */\nvar CodeActionRequest;\n(function (CodeActionRequest) {\n    CodeActionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeAction');\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\n/**\n * A request to provide code lens for the given text document.\n */\nvar CodeLensRequest;\n(function (CodeLensRequest) {\n    CodeLensRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeLens');\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\n/**\n * A request to resolve a command for a given code lens.\n */\nvar CodeLensResolveRequest;\n(function (CodeLensResolveRequest) {\n    CodeLensResolveRequest.type = new vscode_jsonrpc_1.RequestType('codeLens/resolve');\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\n/**\n * A request to to format a whole document.\n */\nvar DocumentFormattingRequest;\n(function (DocumentFormattingRequest) {\n    DocumentFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/formatting');\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\n/**\n * A request to to format a range in a document.\n */\nvar DocumentRangeFormattingRequest;\n(function (DocumentRangeFormattingRequest) {\n    DocumentRangeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rangeFormatting');\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\n/**\n * A request to format a document on type.\n */\nvar DocumentOnTypeFormattingRequest;\n(function (DocumentOnTypeFormattingRequest) {\n    DocumentOnTypeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/onTypeFormatting');\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\n/**\n * A request to rename a symbol.\n */\nvar RenameRequest;\n(function (RenameRequest) {\n    RenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rename');\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\n/**\n * A request to provide document links\n */\nvar DocumentLinkRequest;\n(function (DocumentLinkRequest) {\n    DocumentLinkRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentLink');\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\n/**\n * Request to resolve additional information for a given document link. The request's\n * parameter is of type [DocumentLink](#DocumentLink) the response\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\n */\nvar DocumentLinkResolveRequest;\n(function (DocumentLinkResolveRequest) {\n    DocumentLinkResolveRequest.type = new vscode_jsonrpc_1.RequestType('documentLink/resolve');\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\n/**\n * A request send from the client to the server to execute a command. The request might return\n * a workspace edit which the client will apply to the workspace.\n */\nvar ExecuteCommandRequest;\n(function (ExecuteCommandRequest) {\n    ExecuteCommandRequest.type = new vscode_jsonrpc_1.RequestType('workspace/executeCommand');\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\n/**\n * A request sent from the server to the client to modified certain resources.\n */\nvar ApplyWorkspaceEditRequest;\n(function (ApplyWorkspaceEditRequest) {\n    ApplyWorkspaceEditRequest.type = new vscode_jsonrpc_1.RequestType('workspace/applyEdit');\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-base-languageclient/lib/protocol.js\n// module id = 16\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar toString = Object.prototype.toString;\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return toString.call(value) === '[object Error]';\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return toString.call(value) === '[object Function]';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(function (elem) { return string(elem); });\r\n}\r\nexports.stringArray = stringArray;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-jsonrpc/lib/is.js\n// module id = 17\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Argument {\r\n    constructor(value, range) {\r\n        this.value = value;\r\n        this.range = range;\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n    isAfter(position) {\r\n        if (this.range.end.line < position.line) {\r\n            return false;\r\n        }\r\n        return this.range.start.line > position.line ? true : this.range.start.character > position.character;\r\n    }\r\n    isBefore(position) {\r\n        if (this.range.start.line < position.line) {\r\n            return true;\r\n        }\r\n        return this.range.end.line > position.line ? false : this.range.end.character < position.character;\r\n    }\r\n}\r\nexports.Argument = Argument;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/argument.js\n// module id = 18\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst instruction_1 = require(\"../instruction\");\r\nclass From extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    getImage() {\r\n        return this.getRangeContent(this.getImageRange());\r\n    }\r\n    /**\r\n     * Returns the name of the image that will be used as the base image.\r\n     *\r\n     * @return the base image's name, or null if unspecified\r\n     */\r\n    getImageName() {\r\n        return this.getRangeContent(this.getImageNameRange());\r\n    }\r\n    /**\r\n     * Returns the range that covers the name of the image used by\r\n     * this instruction.\r\n     *\r\n     * @return the range of the name of this instruction's argument,\r\n     *         or null if no image has been specified\r\n     */\r\n    getImageNameRange() {\r\n        let range = this.getImageRange();\r\n        if (range) {\r\n            let content = this.getRangeContent(range);\r\n            let index = content.lastIndexOf(':');\r\n            let digestIndex = content.lastIndexOf('@');\r\n            if (index === -1 || (digestIndex !== -1 && digestIndex < index)) {\r\n                index = digestIndex;\r\n            }\r\n            if (index !== -1) {\r\n                return vscode_languageserver_types_1.Range.create(range.start, this.document.positionAt(this.document.offsetAt(range.start) + index));\r\n            }\r\n            return range;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns the range that covers the image argument of this\r\n     * instruction. This includes the tag or digest of the image if\r\n     * it has been specified by the instruction.\r\n     *\r\n     * @return the range of the image argument, or null if no image\r\n     *         has been specified\r\n     */\r\n    getImageRange() {\r\n        let args = this.getArguments();\r\n        return args.length !== 0 ? args[0].getRange() : null;\r\n    }\r\n    /**\r\n     * Returns the range in the document that the tag of the base\r\n     * image encompasses.\r\n     *\r\n     * @return the base image's tag's range in the document, or null\r\n     *         if no tag has been specified\r\n     */\r\n    getImageTagRange() {\r\n        const range = this.getImageRange();\r\n        if (range) {\r\n            let content = this.getRangeContent(range);\r\n            if (content.indexOf('@') === -1) {\r\n                let index = content.lastIndexOf(':');\r\n                if (index !== -1) {\r\n                    return vscode_languageserver_types_1.Range.create(range.start.line, range.start.character + index + 1, range.end.line, range.end.character);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns the range in the document that the digest of the base\r\n     * image encompasses.\r\n     *\r\n     * @return the base image's digest's range in the document, or null\r\n     *         if no digest has been specified\r\n     */\r\n    getImageDigestRange() {\r\n        let range = this.getImageRange();\r\n        if (range) {\r\n            let content = this.getRangeContent(range);\r\n            let index = content.lastIndexOf('@');\r\n            if (index !== -1) {\r\n                return vscode_languageserver_types_1.Range.create(range.start.line, range.start.character + index + 1, range.end.line, range.end.character);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getBuildStage() {\r\n        let range = this.getBuildStageRange();\r\n        return range === null ? null : this.getRangeContent(range);\r\n    }\r\n    getBuildStageRange() {\r\n        let args = this.getArguments();\r\n        if (args.length === 3 && args[1].getValue().toUpperCase() === \"AS\") {\r\n            return args[2].getRange();\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexports.From = From;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/from.js\n// module id = 19\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Line {\r\n    constructor(document, range) {\r\n        this.document = document;\r\n        this.range = range;\r\n    }\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    getTextContent() {\r\n        return this.document.getText().substring(this.document.offsetAt(this.range.start), this.document.offsetAt(this.range.end));\r\n    }\r\n    isAfter(line) {\r\n        return this.range.start.line > line.range.start.line;\r\n    }\r\n    isBefore(line) {\r\n        return this.range.start.line < line;\r\n    }\r\n}\r\nexports.Line = Line;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/line.js\n// module id = 20\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst instruction_1 = require(\"./instruction\");\r\nconst property_1 = require(\"./property\");\r\nconst argument_1 = require(\"./argument\");\r\nconst util_1 = require(\"./util\");\r\nclass PropertyInstruction extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n        this.properties = undefined;\r\n    }\r\n    getProperties() {\r\n        if (this.properties === undefined) {\r\n            let args = this.getArguments();\r\n            if (args.length === 0) {\r\n                this.properties = [];\r\n            }\r\n            else if (args.length === 1) {\r\n                this.properties = [new property_1.Property(this.document, this.escapeChar, args[0])];\r\n            }\r\n            else if (args.length === 2) {\r\n                if (args[0].getValue().indexOf('=') === -1) {\r\n                    this.properties = [new property_1.Property(this.document, this.escapeChar, args[0], args[1])];\r\n                }\r\n                else {\r\n                    this.properties = [\r\n                        new property_1.Property(this.document, this.escapeChar, args[0]),\r\n                        new property_1.Property(this.document, this.escapeChar, args[1])\r\n                    ];\r\n                }\r\n            }\r\n            else if (args[0].getValue().indexOf('=') === -1) {\r\n                let text = this.document.getText();\r\n                let start = args[1].getRange().start;\r\n                let end = args[args.length - 1].getRange().end;\r\n                text = text.substring(this.document.offsetAt(start), this.document.offsetAt(end));\r\n                this.properties = [new property_1.Property(this.document, this.escapeChar, args[0], new argument_1.Argument(text, vscode_languageserver_types_1.Range.create(args[1].getRange().start, args[args.length - 1].getRange().end)))];\r\n            }\r\n            else {\r\n                this.properties = [];\r\n                for (let i = 0; i < args.length; i++) {\r\n                    this.properties.push(new property_1.Property(this.document, this.escapeChar, args[i]));\r\n                }\r\n            }\r\n        }\r\n        return this.properties;\r\n    }\r\n    /**\r\n     * Goes from the back of the string and returns the first\r\n     * non-whitespace character that is found. If an escape character\r\n     * is found with newline characters, the escape character will\r\n     * not be considered a non-whitespace character and its index in\r\n     * the string will not be returned.\r\n     *\r\n     * @param content the string to search through\r\n     * @return the index in the string for the first non-whitespace\r\n     *         character when searching from the end of the string\r\n     */\r\n    findTrailingNonWhitespace(content) {\r\n        // loop back to find the first non-whitespace character\r\n        let index = content.length;\r\n        whitespaceCheck: for (let i = content.length - 1; i >= 0; i--) {\r\n            switch (content.charAt(i)) {\r\n                case ' ':\r\n                case '\\t':\r\n                    continue;\r\n                case '\\n':\r\n                    if (content.charAt(i - 1) === '\\r') {\r\n                        i = i - 1;\r\n                    }\r\n                case '\\r':\r\n                    newlineCheck: for (let j = i - 1; j >= 0; j--) {\r\n                        switch (content.charAt(j)) {\r\n                            case ' ':\r\n                            case '\\t':\r\n                            case '\\r':\r\n                            case '\\n':\r\n                            case this.escapeChar:\r\n                                continue;\r\n                            default:\r\n                                index = j;\r\n                                break newlineCheck;\r\n                        }\r\n                    }\r\n                    break whitespaceCheck;\r\n                default:\r\n                    index = i;\r\n                    break whitespaceCheck;\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n    getArguments() {\r\n        const args = [];\r\n        let range = this.getInstructionRange();\r\n        let instructionNameEndOffset = this.document.offsetAt(range.end);\r\n        let extra = instructionNameEndOffset - this.document.offsetAt(range.start);\r\n        let content = this.getTextContent();\r\n        let fullArgs = content.substring(extra);\r\n        let start = util_1.Util.findLeadingNonWhitespace(fullArgs, this.escapeChar);\r\n        if (start === -1) {\r\n            // only whitespace found, no arguments\r\n            return [];\r\n        }\r\n        // records whether the parser has just processed an escaped newline or not\r\n        let escaped = false;\r\n        // flag to track if the last character was an escape character\r\n        let endingEscape = false;\r\n        // position before the first escape character was hit\r\n        let mark = -1;\r\n        let end = this.findTrailingNonWhitespace(fullArgs);\r\n        content = fullArgs.substring(start, end + 1);\r\n        let argStart = 0;\r\n        let spaced = false;\r\n        argumentLoop: for (let i = 0; i < content.length; i++) {\r\n            let char = content.charAt(i);\r\n            switch (char) {\r\n                case this.escapeChar:\r\n                    if (i + 1 === content.length) {\r\n                        endingEscape = true;\r\n                        break argumentLoop;\r\n                    }\r\n                    if (!escaped) {\r\n                        mark = i;\r\n                    }\r\n                    switch (content.charAt(i + 1)) {\r\n                        case ' ':\r\n                        case '\\t':\r\n                            if (!util_1.Util.isWhitespace(content.charAt(i + 2))) {\r\n                                // space was escaped, continue as normal\r\n                                i = i + 1;\r\n                                continue argumentLoop;\r\n                            }\r\n                            // whitespace encountered, need to figure out if it extends to EOL\r\n                            whitespaceCheck: for (let j = i + 2; j < content.length; j++) {\r\n                                switch (content.charAt(j)) {\r\n                                    case '\\r':\r\n                                        // offset one more for \\r\\n\r\n                                        j++;\r\n                                    case '\\n':\r\n                                        // whitespace only, safe to skip\r\n                                        escaped = true;\r\n                                        i = j;\r\n                                        continue argumentLoop;\r\n                                    case ' ':\r\n                                    case '\\t':\r\n                                        // ignore whitespace\r\n                                        break;\r\n                                    default:\r\n                                        // whitespace doesn't extend to EOL, create an argument\r\n                                        args.push(new argument_1.Argument(content.substring(argStart, i), vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + i + 2))));\r\n                                        argStart = j;\r\n                                        break whitespaceCheck;\r\n                                }\r\n                            }\r\n                            // go back and start processing the encountered non-whitespace character\r\n                            i = argStart - 1;\r\n                            continue argumentLoop;\r\n                        case '\\r':\r\n                            // offset one more for \\r\\n\r\n                            i++;\r\n                        case '\\n':\r\n                            // immediately followed by a newline, skip the newline\r\n                            escaped = true;\r\n                            i = i + 1;\r\n                            continue argumentLoop;\r\n                        case this.escapeChar:\r\n                            // double escape found, skip it and move on\r\n                            if (argStart === -1) {\r\n                                argStart = i;\r\n                            }\r\n                            i = i + 1;\r\n                            continue argumentLoop;\r\n                        default:\r\n                            if (argStart === -1) {\r\n                                argStart = i;\r\n                            }\r\n                            // non-whitespace encountered, skip the escape and process the\r\n                            // character normally\r\n                            continue argumentLoop;\r\n                    }\r\n                case '\\'':\r\n                case '\"':\r\n                    if (argStart === -1) {\r\n                        argStart = i;\r\n                    }\r\n                    for (let j = i + 1; j < content.length; j++) {\r\n                        switch (content.charAt(j)) {\r\n                            case char:\r\n                                args.push(new argument_1.Argument(content.substring(argStart, j + 1), vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + j + 1))));\r\n                                i = j;\r\n                                argStart = -1;\r\n                                continue argumentLoop;\r\n                            case this.escapeChar:\r\n                                j++;\r\n                                break;\r\n                        }\r\n                    }\r\n                    break argumentLoop;\r\n                case ' ':\r\n                case '\\t':\r\n                    if (escaped) {\r\n                        spaced = true;\r\n                    }\r\n                    else if (argStart !== -1) {\r\n                        args.push(new argument_1.Argument(content.substring(argStart, i), vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + i))));\r\n                        argStart = -1;\r\n                    }\r\n                    break;\r\n                case '\\r':\r\n                    // offset one more for \\r\\n\r\n                    i++;\r\n                case '\\n':\r\n                    spaced = false;\r\n                    break;\r\n                case '#':\r\n                    if (escaped) {\r\n                        // a newline was escaped and now there's a comment\r\n                        for (let j = i + 1; j < content.length; j++) {\r\n                            switch (content.charAt(j)) {\r\n                                case '\\r':\r\n                                    j++;\r\n                                case '\\n':\r\n                                    i = j;\r\n                                    spaced = false;\r\n                                    continue argumentLoop;\r\n                            }\r\n                        }\r\n                        // went to the end without finding a newline,\r\n                        // the comment was the last line in the instruction,\r\n                        // just stop parsing\r\n                        let value = content.substring(argStart, mark);\r\n                        args.push(new argument_1.Argument(value, vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + mark))));\r\n                        argStart = -1;\r\n                        break argumentLoop;\r\n                    }\r\n                    else if (argStart === -1) {\r\n                        argStart = i;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (spaced) {\r\n                        if (argStart !== -1) {\r\n                            args.push(new argument_1.Argument(content.substring(argStart, mark), vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + mark))));\r\n                            argStart = -1;\r\n                        }\r\n                        spaced = false;\r\n                    }\r\n                    escaped = false;\r\n                    if (argStart === -1) {\r\n                        argStart = i;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        if (argStart !== -1 && argStart !== content.length) {\r\n            let end = endingEscape ? content.length - 1 : content.length;\r\n            let value = content.substring(argStart, end);\r\n            args.push(new argument_1.Argument(value, vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + end))));\r\n        }\r\n        return args;\r\n    }\r\n}\r\nexports.PropertyInstruction = PropertyInstruction;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/propertyInstruction.js\n// module id = 21\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Argument {\r\n    constructor(value, range) {\r\n        this.value = value;\r\n        this.range = range;\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n    isAfter(position) {\r\n        if (this.range.end.line < position.line) {\r\n            return false;\r\n        }\r\n        return this.range.start.line > position.line ? true : this.range.start.character > position.character;\r\n    }\r\n    isBefore(position) {\r\n        if (this.range.start.line < position.line) {\r\n            return true;\r\n        }\r\n        return this.range.end.line > position.line ? false : this.range.end.character < position.character;\r\n    }\r\n}\r\nexports.Argument = Argument;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/argument.js\n// module id = 22\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Line {\r\n    constructor(document, range) {\r\n        this.document = document;\r\n        this.range = range;\r\n    }\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    getTextContent() {\r\n        return this.document.getText().substring(this.document.offsetAt(this.range.start), this.document.offsetAt(this.range.end));\r\n    }\r\n    isAfter(line) {\r\n        return this.range.start.line > line.range.start.line;\r\n    }\r\n    isBefore(line) {\r\n        return this.range.start.line < line;\r\n    }\r\n}\r\nexports.Line = Line;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/line.js\n// module id = 23\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst instruction_1 = require(\"./instruction\");\r\nconst property_1 = require(\"./property\");\r\nconst argument_1 = require(\"./argument\");\r\nconst util_1 = require(\"./util\");\r\nclass PropertyInstruction extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n        this.properties = undefined;\r\n    }\r\n    getProperties() {\r\n        if (this.properties === undefined) {\r\n            let args = this.getArguments();\r\n            if (args.length === 0) {\r\n                this.properties = [];\r\n            }\r\n            else if (args.length === 1) {\r\n                this.properties = [new property_1.Property(this.document, this.escapeChar, args[0])];\r\n            }\r\n            else if (args.length === 2) {\r\n                if (args[0].getValue().indexOf('=') === -1) {\r\n                    this.properties = [new property_1.Property(this.document, this.escapeChar, args[0], args[1])];\r\n                }\r\n                else {\r\n                    this.properties = [\r\n                        new property_1.Property(this.document, this.escapeChar, args[0]),\r\n                        new property_1.Property(this.document, this.escapeChar, args[1])\r\n                    ];\r\n                }\r\n            }\r\n            else if (args[0].getValue().indexOf('=') === -1) {\r\n                let text = this.document.getText();\r\n                let start = args[1].getRange().start;\r\n                let end = args[args.length - 1].getRange().end;\r\n                text = text.substring(this.document.offsetAt(start), this.document.offsetAt(end));\r\n                this.properties = [new property_1.Property(this.document, this.escapeChar, args[0], new argument_1.Argument(text, vscode_languageserver_types_1.Range.create(args[1].getRange().start, args[args.length - 1].getRange().end)))];\r\n            }\r\n            else {\r\n                this.properties = [];\r\n                for (let i = 0; i < args.length; i++) {\r\n                    this.properties.push(new property_1.Property(this.document, this.escapeChar, args[i]));\r\n                }\r\n            }\r\n        }\r\n        return this.properties;\r\n    }\r\n    /**\r\n     * Goes from the back of the string and returns the first\r\n     * non-whitespace character that is found. If an escape character\r\n     * is found with newline characters, the escape character will\r\n     * not be considered a non-whitespace character and its index in\r\n     * the string will not be returned.\r\n     *\r\n     * @param content the string to search through\r\n     * @return the index in the string for the first non-whitespace\r\n     *         character when searching from the end of the string\r\n     */\r\n    findTrailingNonWhitespace(content) {\r\n        // loop back to find the first non-whitespace character\r\n        let index = content.length;\r\n        whitespaceCheck: for (let i = content.length - 1; i >= 0; i--) {\r\n            switch (content.charAt(i)) {\r\n                case ' ':\r\n                case '\\t':\r\n                    continue;\r\n                case '\\n':\r\n                    if (content.charAt(i - 1) === '\\r') {\r\n                        i = i - 1;\r\n                    }\r\n                case '\\r':\r\n                    newlineCheck: for (let j = i - 1; j >= 0; j--) {\r\n                        switch (content.charAt(j)) {\r\n                            case ' ':\r\n                            case '\\t':\r\n                            case '\\r':\r\n                            case '\\n':\r\n                            case this.escapeChar:\r\n                                continue;\r\n                            default:\r\n                                index = j;\r\n                                break newlineCheck;\r\n                        }\r\n                    }\r\n                    break whitespaceCheck;\r\n                default:\r\n                    index = i;\r\n                    break whitespaceCheck;\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n    getArguments() {\r\n        const args = [];\r\n        let range = this.getInstructionRange();\r\n        let instructionNameEndOffset = this.document.offsetAt(range.end);\r\n        let extra = instructionNameEndOffset - this.document.offsetAt(range.start);\r\n        let content = this.getTextContent();\r\n        let fullArgs = content.substring(extra);\r\n        let start = util_1.Util.findLeadingNonWhitespace(fullArgs, this.escapeChar);\r\n        if (start === -1) {\r\n            // only whitespace found, no arguments\r\n            return [];\r\n        }\r\n        // records whether the parser has just processed an escaped newline or not\r\n        let escaped = false;\r\n        // flag to track if the last character was an escape character\r\n        let endingEscape = false;\r\n        // position before the first escape character was hit\r\n        let mark = -1;\r\n        let end = this.findTrailingNonWhitespace(fullArgs);\r\n        content = fullArgs.substring(start, end + 1);\r\n        let argStart = 0;\r\n        let spaced = false;\r\n        argumentLoop: for (let i = 0; i < content.length; i++) {\r\n            let char = content.charAt(i);\r\n            switch (char) {\r\n                case this.escapeChar:\r\n                    if (i + 1 === content.length) {\r\n                        endingEscape = true;\r\n                        break argumentLoop;\r\n                    }\r\n                    if (!escaped) {\r\n                        mark = i;\r\n                    }\r\n                    switch (content.charAt(i + 1)) {\r\n                        case ' ':\r\n                        case '\\t':\r\n                            if (!util_1.Util.isWhitespace(content.charAt(i + 2))) {\r\n                                // space was escaped, continue as normal\r\n                                i = i + 1;\r\n                                continue argumentLoop;\r\n                            }\r\n                            // whitespace encountered, need to figure out if it extends to EOL\r\n                            whitespaceCheck: for (let j = i + 2; j < content.length; j++) {\r\n                                switch (content.charAt(j)) {\r\n                                    case '\\r':\r\n                                        // offset one more for \\r\\n\r\n                                        j++;\r\n                                    case '\\n':\r\n                                        // whitespace only, safe to skip\r\n                                        escaped = true;\r\n                                        i = j;\r\n                                        continue argumentLoop;\r\n                                    case ' ':\r\n                                    case '\\t':\r\n                                        // ignore whitespace\r\n                                        break;\r\n                                    default:\r\n                                        // whitespace doesn't extend to EOL, create an argument\r\n                                        args.push(new argument_1.Argument(content.substring(argStart, i), vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + i + 2))));\r\n                                        argStart = j;\r\n                                        break whitespaceCheck;\r\n                                }\r\n                            }\r\n                            // go back and start processing the encountered non-whitespace character\r\n                            i = argStart - 1;\r\n                            continue argumentLoop;\r\n                        case '\\r':\r\n                            // offset one more for \\r\\n\r\n                            i++;\r\n                        case '\\n':\r\n                            // immediately followed by a newline, skip the newline\r\n                            escaped = true;\r\n                            i = i + 1;\r\n                            continue argumentLoop;\r\n                        case this.escapeChar:\r\n                            // double escape found, skip it and move on\r\n                            if (argStart === -1) {\r\n                                argStart = i;\r\n                            }\r\n                            i = i + 1;\r\n                            continue argumentLoop;\r\n                        default:\r\n                            if (argStart === -1) {\r\n                                argStart = i;\r\n                            }\r\n                            // non-whitespace encountered, skip the escape and process the\r\n                            // character normally\r\n                            continue argumentLoop;\r\n                    }\r\n                case '\\'':\r\n                case '\"':\r\n                    if (argStart === -1) {\r\n                        argStart = i;\r\n                    }\r\n                    for (let j = i + 1; j < content.length; j++) {\r\n                        switch (content.charAt(j)) {\r\n                            case char:\r\n                                args.push(new argument_1.Argument(content.substring(argStart, j + 1), vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + j + 1))));\r\n                                i = j;\r\n                                argStart = -1;\r\n                                continue argumentLoop;\r\n                            case this.escapeChar:\r\n                                j++;\r\n                                break;\r\n                        }\r\n                    }\r\n                    break argumentLoop;\r\n                case ' ':\r\n                case '\\t':\r\n                    if (escaped) {\r\n                        spaced = true;\r\n                    }\r\n                    else if (argStart !== -1) {\r\n                        args.push(new argument_1.Argument(content.substring(argStart, i), vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + i))));\r\n                        argStart = -1;\r\n                    }\r\n                    break;\r\n                case '\\r':\r\n                    // offset one more for \\r\\n\r\n                    i++;\r\n                case '\\n':\r\n                    spaced = false;\r\n                    break;\r\n                case '#':\r\n                    if (escaped) {\r\n                        // a newline was escaped and now there's a comment\r\n                        for (let j = i + 1; j < content.length; j++) {\r\n                            switch (content.charAt(j)) {\r\n                                case '\\r':\r\n                                    j++;\r\n                                case '\\n':\r\n                                    i = j;\r\n                                    spaced = false;\r\n                                    continue argumentLoop;\r\n                            }\r\n                        }\r\n                        // went to the end without finding a newline,\r\n                        // the comment was the last line in the instruction,\r\n                        // just stop parsing\r\n                        let value = content.substring(argStart, mark);\r\n                        args.push(new argument_1.Argument(value, vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + mark))));\r\n                        argStart = -1;\r\n                        break argumentLoop;\r\n                    }\r\n                    else if (argStart === -1) {\r\n                        argStart = i;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (spaced) {\r\n                        if (argStart !== -1) {\r\n                            args.push(new argument_1.Argument(content.substring(argStart, mark), vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + mark))));\r\n                            argStart = -1;\r\n                        }\r\n                        spaced = false;\r\n                    }\r\n                    escaped = false;\r\n                    if (argStart === -1) {\r\n                        argStart = i;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        if (argStart !== -1 && argStart !== content.length) {\r\n            let end = endingEscape ? content.length - 1 : content.length;\r\n            let value = content.substring(argStart, end);\r\n            args.push(new argument_1.Argument(value, vscode_languageserver_types_1.Range.create(this.document.positionAt(instructionNameEndOffset + start + argStart), this.document.positionAt(instructionNameEndOffset + start + end))));\r\n        }\r\n        return args;\r\n    }\r\n}\r\nexports.PropertyInstruction = PropertyInstruction;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/propertyInstruction.js\n// module id = 24\n// module chunks = 0","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process-nextick-args/index.js\n// module id = 25\n// module chunks = 0","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/safe-buffer/index.js\n// module id = 26\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst toString = Object.prototype.toString;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return toString.call(value) === '[object String]';\n}\nexports.string = string;\nfunction number(value) {\n    return toString.call(value) === '[object Number]';\n}\nexports.number = number;\nfunction error(value) {\n    return toString.call(value) === '[object Error]';\n}\nexports.error = error;\nfunction func(value) {\n    return toString.call(value) === '[object Function]';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction thenable(value) {\n    return value && func(value.then);\n}\nexports.thenable = thenable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-base-languageclient/lib/utils/is.js\n// module id = 27\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    var _disposable = { dispose: function () { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nvar CallbackList = /** @class */ (function () {\r\n    function CallbackList() {\r\n    }\r\n    CallbackList.prototype.add = function (callback, context, bucket) {\r\n        var _this = this;\r\n        if (context === void 0) { context = null; }\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: function () { return _this.remove(callback, context); } });\r\n        }\r\n    };\r\n    CallbackList.prototype.remove = function (callback, context) {\r\n        if (context === void 0) { context = null; }\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    };\r\n    CallbackList.prototype.invoke = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    CallbackList.prototype.isEmpty = function () {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    };\r\n    CallbackList.prototype.dispose = function () {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    };\r\n    return CallbackList;\r\n}());\r\nvar Emitter = /** @class */ (function () {\r\n    function Emitter(_options) {\r\n        this._options = _options;\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"event\", {\r\n        /**\r\n         * For the public to allow to subscribe\r\n         * to events from this Emitter\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._event) {\r\n                this._event = function (listener, thisArgs, disposables) {\r\n                    if (!_this._callbacks) {\r\n                        _this._callbacks = new CallbackList();\r\n                    }\r\n                    if (_this._options && _this._options.onFirstListenerAdd && _this._callbacks.isEmpty()) {\r\n                        _this._options.onFirstListenerAdd(_this);\r\n                    }\r\n                    _this._callbacks.add(listener, thisArgs);\r\n                    var result;\r\n                    result = {\r\n                        dispose: function () {\r\n                            _this._callbacks.remove(listener, thisArgs);\r\n                            result.dispose = Emitter._noop;\r\n                            if (_this._options && _this._options.onLastListenerRemove && _this._callbacks.isEmpty()) {\r\n                                _this._options.onLastListenerRemove(_this);\r\n                            }\r\n                        }\r\n                    };\r\n                    if (Array.isArray(disposables)) {\r\n                        disposables.push(result);\r\n                    }\r\n                    return result;\r\n                };\r\n            }\r\n            return this._event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    Emitter.prototype.fire = function (event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    };\r\n    Emitter.prototype.dispose = function () {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    };\r\n    Emitter._noop = function () { };\r\n    return Emitter;\r\n}());\r\nexports.Emitter = Emitter;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-jsonrpc/lib/events.js\n// module id = 28\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst property_1 = require(\"../property\");\r\nconst propertyInstruction_1 = require(\"../propertyInstruction\");\r\nclass Arg extends propertyInstruction_1.PropertyInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n        this.property = null;\r\n        const args = this.getArguments();\r\n        if (args.length === 1) {\r\n            this.property = new property_1.Property(this.document, this.escapeChar, args[0]);\r\n        }\r\n        else {\r\n            this.property = null;\r\n        }\r\n    }\r\n    /**\r\n     * Returns the variable defined by this ARG. This may be null if\r\n     * this ARG instruction is malformed and has no variable\r\n     * declaration.\r\n     */\r\n    getProperty() {\r\n        return this.property;\r\n    }\r\n}\r\nexports.Arg = Arg;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/arg.js\n// module id = 29\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\r\nclass Cmd extends jsonInstruction_1.JSONInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.Cmd = Cmd;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/cmd.js\n// module id = 30\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\r\nclass Copy extends jsonInstruction_1.JSONInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    stopSearchingForFlags(argument) {\r\n        return argument.indexOf(\"--\") === -1;\r\n    }\r\n    getFromFlag() {\r\n        let flags = super.getFlags();\r\n        return flags.length === 1 && flags[0].getName() === \"from\" ? flags[0] : null;\r\n    }\r\n}\r\nexports.Copy = Copy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/copy.js\n// module id = 31\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\r\nclass Entrypoint extends jsonInstruction_1.JSONInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.Entrypoint = Entrypoint;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/entrypoint.js\n// module id = 32\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst propertyInstruction_1 = require(\"../propertyInstruction\");\r\nclass Env extends propertyInstruction_1.PropertyInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    getProperties() {\r\n        return super.getProperties();\r\n    }\r\n}\r\nexports.Env = Env;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/env.js\n// module id = 33\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst modifiableInstruction_1 = require(\"../modifiableInstruction\");\r\nclass Healthcheck extends modifiableInstruction_1.ModifiableInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    stopSearchingForFlags(argument) {\r\n        argument = argument.toUpperCase();\r\n        return argument === \"CMD\" || argument === \"NONE\";\r\n    }\r\n    getSubcommand() {\r\n        let args = this.getArguments();\r\n        return args.length !== 0 ? args[0] : null;\r\n    }\r\n}\r\nexports.Healthcheck = Healthcheck;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/healthcheck.js\n// module id = 34\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst parser_1 = require(\"../parser\");\r\nconst instruction_1 = require(\"../instruction\");\r\nclass Onbuild extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    getTrigger() {\r\n        let trigger = this.getTriggerWord();\r\n        return trigger === null ? null : trigger.toUpperCase();\r\n    }\r\n    getTriggerWord() {\r\n        return this.getRangeContent(this.getTriggerRange());\r\n    }\r\n    getTriggerRange() {\r\n        let args = this.getArguments();\r\n        return args.length > 0 ? args[0].getRange() : null;\r\n    }\r\n    getTriggerInstruction() {\r\n        let triggerRange = this.getTriggerRange();\r\n        if (triggerRange === null) {\r\n            return null;\r\n        }\r\n        let args = this.getArguments();\r\n        return parser_1.Parser.createInstruction(this.document, this.dockerfile, this.escapeChar, vscode_languageserver_types_1.Range.create(args[0].getRange().start, this.getRange().end), this.getTriggerWord(), triggerRange);\r\n    }\r\n}\r\nexports.Onbuild = Onbuild;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/onbuild.js\n// module id = 35\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst flag_1 = require(\"./flag\");\r\nconst instruction_1 = require(\"./instruction\");\r\nclass ModifiableInstruction extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    getFlags() {\r\n        if (!this.flags) {\r\n            this.flags = [];\r\n            for (let arg of this.getArguments()) {\r\n                let value = arg.getValue();\r\n                if (this.stopSearchingForFlags(value)) {\r\n                    return this.flags;\r\n                }\r\n                else if (value.indexOf(\"--\") === 0) {\r\n                    let range = arg.getRange();\r\n                    let rawValue = this.document.getText().substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\r\n                    let nameIndex = value.indexOf('=');\r\n                    let index = rawValue.indexOf('=');\r\n                    let firstMatch = false;\r\n                    let secondMatch = false;\r\n                    let startIndex = -1;\r\n                    nameSearchLoop: for (let i = 0; i < rawValue.length; i++) {\r\n                        switch (rawValue.charAt(i)) {\r\n                            case '\\\\':\r\n                            case ' ':\r\n                            case '\\t':\r\n                            case '\\r':\r\n                            case '\\n':\r\n                                break;\r\n                            case '-':\r\n                                if (secondMatch) {\r\n                                    startIndex = i;\r\n                                    break nameSearchLoop;\r\n                                }\r\n                                else if (firstMatch) {\r\n                                    secondMatch = true;\r\n                                }\r\n                                else {\r\n                                    firstMatch = true;\r\n                                }\r\n                                break;\r\n                            default:\r\n                                startIndex = i;\r\n                                break nameSearchLoop;\r\n                        }\r\n                    }\r\n                    let nameStart = this.document.positionAt(this.document.offsetAt(range.start) + startIndex);\r\n                    if (index === -1) {\r\n                        this.flags.push(new flag_1.Flag(range, value.substring(2), vscode_languageserver_types_1.Range.create(nameStart, range.end), null, null));\r\n                    }\r\n                    else if (index === value.length - 1) {\r\n                        let nameEnd = this.document.positionAt(this.document.offsetAt(range.start) + index);\r\n                        this.flags.push(new flag_1.Flag(range, value.substring(2, index), vscode_languageserver_types_1.Range.create(nameStart, nameEnd), \"\", vscode_languageserver_types_1.Range.create(range.end, range.end)));\r\n                    }\r\n                    else {\r\n                        let nameEnd = this.document.positionAt(this.document.offsetAt(range.start) + index);\r\n                        this.flags.push(new flag_1.Flag(range, value.substring(2, nameIndex), vscode_languageserver_types_1.Range.create(nameStart, nameEnd), value.substring(nameIndex + 1), vscode_languageserver_types_1.Range.create(this.document.positionAt(this.document.offsetAt(range.start) + index + 1), range.end)));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.flags;\r\n    }\r\n    getArguments() {\r\n        const args = super.getArguments();\r\n        const flags = this.getFlags();\r\n        if (flags.length === 0) {\r\n            return args;\r\n        }\r\n        for (let i = 0; i < flags.length; i++) {\r\n            args.shift();\r\n        }\r\n        return args;\r\n    }\r\n}\r\nexports.ModifiableInstruction = ModifiableInstruction;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/modifiableInstruction.js\n// module id = 36\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst util_1 = require(\"./util\");\r\nclass Property {\r\n    constructor(document, escapeChar, arg, arg2) {\r\n        this.name = null;\r\n        this.value = null;\r\n        this.document = document;\r\n        this.escapeChar = escapeChar;\r\n        if (arg2) {\r\n            this.nameRange = arg.getRange();\r\n            this.name = document.getText().substring(document.offsetAt(this.nameRange.start), document.offsetAt(this.nameRange.end));\r\n            this.valueRange = arg2.getRange();\r\n            let value = document.getText().substring(document.offsetAt(this.valueRange.start), document.offsetAt(this.valueRange.end));\r\n            this.value = Property.getValue(value, escapeChar);\r\n            this.range = vscode_languageserver_types_1.Range.create(this.nameRange.start, this.valueRange.end);\r\n        }\r\n        else {\r\n            this.nameRange = Property.getNameRange(document, arg);\r\n            this.name = document.getText().substring(document.offsetAt(this.nameRange.start), document.offsetAt(this.nameRange.end));\r\n            this.valueRange = Property.getValueRange(document, arg);\r\n            if (this.valueRange) {\r\n                let value = document.getText().substring(document.offsetAt(this.valueRange.start), document.offsetAt(this.valueRange.end));\r\n                this.value = Property.getValue(value, escapeChar);\r\n            }\r\n            this.range = arg.getRange();\r\n        }\r\n    }\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    getNameRange() {\r\n        return this.nameRange;\r\n    }\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n    getValueRange() {\r\n        return this.valueRange;\r\n    }\r\n    getRawValue() {\r\n        if (this.valueRange === null) {\r\n            return null;\r\n        }\r\n        let escaped = false;\r\n        let rawValue = \"\";\r\n        let value = this.document.getText().substring(this.document.offsetAt(this.valueRange.start), this.document.offsetAt(this.valueRange.end));\r\n        rawLoop: for (let i = 0; i < value.length; i++) {\r\n            let char = value.charAt(i);\r\n            switch (char) {\r\n                case this.escapeChar:\r\n                    for (let j = i + 1; j < value.length; j++) {\r\n                        switch (value.charAt(j)) {\r\n                            case '\\r':\r\n                                j++;\r\n                            case '\\n':\r\n                                escaped = true;\r\n                                i = j;\r\n                                continue rawLoop;\r\n                            case ' ':\r\n                            case '\\t':\r\n                                break;\r\n                            default:\r\n                                rawValue = rawValue + char;\r\n                                continue rawLoop;\r\n                        }\r\n                    }\r\n                    // this happens if there's only whitespace after the escape character\r\n                    rawValue = rawValue + char;\r\n                    break;\r\n                case '\\r':\r\n                case '\\n':\r\n                    break;\r\n                case ' ':\r\n                case '\\t':\r\n                    if (!escaped) {\r\n                        rawValue = rawValue + char;\r\n                    }\r\n                    break;\r\n                case '#':\r\n                    if (escaped) {\r\n                        for (let j = i + 1; j < value.length; j++) {\r\n                            switch (value.charAt(j)) {\r\n                                case '\\r':\r\n                                    j++;\r\n                                case '\\n':\r\n                                    i = j;\r\n                                    continue rawLoop;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        rawValue = rawValue + char;\r\n                    }\r\n                    break;\r\n                default:\r\n                    rawValue = rawValue + char;\r\n                    escaped = false;\r\n                    break;\r\n            }\r\n        }\r\n        return rawValue;\r\n    }\r\n    static getNameRange(document, arg) {\r\n        let index = arg.getValue().indexOf('=');\r\n        if (index !== -1) {\r\n            return vscode_languageserver_types_1.Range.create(arg.getRange().start, document.positionAt(document.offsetAt(arg.getRange().start) + index));\r\n        }\r\n        // no '=' found, just defined the ARG's name\r\n        return arg.getRange();\r\n    }\r\n    static getValueRange(document, arg) {\r\n        let argValue = arg.getValue();\r\n        let index = argValue.indexOf('=');\r\n        if (index === -1) {\r\n            // no value declared if no '=' found\r\n            return null;\r\n        }\r\n        return vscode_languageserver_types_1.Range.create(document.positionAt(document.offsetAt(arg.getRange().start) + index + 1), document.positionAt(document.offsetAt(arg.getRange().end)));\r\n    }\r\n    /**\r\n     * Returns the actual value of this instruction's declared\r\n     * variable. The value will have its escape characters removed if\r\n     * applicable. If the value spans multiple lines and there are\r\n     * comments nested within the lines, they too will be removed.\r\n     *\r\n     * @return the value that this ARG instruction's declared\r\n     *         variable will resolve to, may be null if no value is\r\n     *         defined, may be the empty string if the value only\r\n     *         consists of whitespace\r\n     */\r\n    static getValue(value, escapeChar) {\r\n        let escaped = false;\r\n        const skip = util_1.Util.findLeadingNonWhitespace(value, escapeChar);\r\n        if (skip !== 0 && value.charAt(skip) === '#') {\r\n            // need to skip over comments\r\n            escaped = true;\r\n        }\r\n        value = value.substring(skip);\r\n        let first = value.charAt(0);\r\n        let last = value.charAt(value.length - 1);\r\n        let literal = first === '\\'' || first === '\"';\r\n        let inSingle = (first === '\\'' && last === '\\'');\r\n        let inDouble = false;\r\n        if (first === '\"') {\r\n            for (let i = 1; i < value.length; i++) {\r\n                if (value.charAt(i) === escapeChar) {\r\n                    i++;\r\n                }\r\n                else if (value.charAt(i) === '\"' && i === value.length - 1) {\r\n                    inDouble = true;\r\n                }\r\n            }\r\n        }\r\n        if (inSingle || inDouble) {\r\n            value = value.substring(1, value.length - 1);\r\n        }\r\n        let commentCheck = -1;\r\n        let escapedValue = \"\";\r\n        let start = 0;\r\n        parseValue: for (let i = 0; i < value.length; i++) {\r\n            let char = value.charAt(i);\r\n            switch (char) {\r\n                case escapeChar:\r\n                    if (i + 1 === value.length) {\r\n                        escapedValue = escapedValue + escapeChar;\r\n                        break parseValue;\r\n                    }\r\n                    char = value.charAt(i + 1);\r\n                    if (char === ' ' || char === '\\t') {\r\n                        whitespaceCheck: for (let j = i + 2; j < value.length; j++) {\r\n                            let char2 = value.charAt(j);\r\n                            switch (char2) {\r\n                                case ' ':\r\n                                case '\\t':\r\n                                    break;\r\n                                case '\\r':\r\n                                    j++;\r\n                                case '\\n':\r\n                                    escaped = true;\r\n                                    i = j;\r\n                                    continue parseValue;\r\n                                default:\r\n                                    if (!inDouble && !inSingle && !literal) {\r\n                                        if (char2 === escapeChar) {\r\n                                            // add the escaped character\r\n                                            escapedValue = escapedValue + char;\r\n                                            // now start parsing from the next escape character\r\n                                            i = i + 1;\r\n                                        }\r\n                                        else {\r\n                                            // the expectation is that this j = i + 2 here\r\n                                            escapedValue = escapedValue + char + char2;\r\n                                            i = j;\r\n                                        }\r\n                                        continue parseValue;\r\n                                    }\r\n                                    break whitespaceCheck;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inDouble) {\r\n                        if (char === '\\r') {\r\n                            escaped = true;\r\n                            i = i + 2;\r\n                        }\r\n                        else if (char === '\\n') {\r\n                            escaped = true;\r\n                            i++;\r\n                        }\r\n                        else if (char !== '\"') {\r\n                            if (char === escapeChar) {\r\n                                i++;\r\n                            }\r\n                            escapedValue = escapedValue + escapeChar;\r\n                        }\r\n                        continue parseValue;\r\n                    }\r\n                    else if (inSingle || literal) {\r\n                        if (char === '\\r') {\r\n                            escaped = true;\r\n                            i = i + 2;\r\n                        }\r\n                        else if (char === '\\n') {\r\n                            escaped = true;\r\n                            i++;\r\n                        }\r\n                        else {\r\n                            escapedValue = escapedValue + escapeChar;\r\n                        }\r\n                        continue parseValue;\r\n                    }\r\n                    else if (char === escapeChar) {\r\n                        // double escape, append one and move on\r\n                        escapedValue = escapedValue + escapeChar;\r\n                        i++;\r\n                    }\r\n                    else if (char === '\\r') {\r\n                        escaped = true;\r\n                        // offset one more for \\r\\n\r\n                        i = i + 2;\r\n                    }\r\n                    else if (char === '\\n') {\r\n                        escaped = true;\r\n                        i++;\r\n                        start = i;\r\n                    }\r\n                    else {\r\n                        // any other escapes are simply ignored\r\n                        escapedValue = escapedValue + char;\r\n                        i++;\r\n                    }\r\n                    break;\r\n                case ' ':\r\n                case '\\t':\r\n                    if (escaped && commentCheck === -1) {\r\n                        commentCheck = i;\r\n                    }\r\n                    escapedValue = escapedValue + char;\r\n                    break;\r\n                case '\\r':\r\n                    i++;\r\n                case '\\n':\r\n                    if (escaped && commentCheck !== -1) {\r\n                        // rollback and remove the whitespace that was previously appended\r\n                        escapedValue = escapedValue.substring(0, escapedValue.length - (i - commentCheck - 1));\r\n                        commentCheck = -1;\r\n                    }\r\n                    break;\r\n                case '#':\r\n                    // a newline was escaped and now there's a comment\r\n                    if (escaped) {\r\n                        if (commentCheck !== -1) {\r\n                            // rollback and remove the whitespace that was previously appended\r\n                            escapedValue = escapedValue.substring(0, escapedValue.length - (i - commentCheck));\r\n                            commentCheck = -1;\r\n                        }\r\n                        newlineCheck: for (let j = i + 1; j < value.length; j++) {\r\n                            switch (value.charAt(j)) {\r\n                                case '\\r':\r\n                                    j++;\r\n                                case '\\n':\r\n                                    i = j;\r\n                                    break newlineCheck;\r\n                            }\r\n                        }\r\n                        continue parseValue;\r\n                    }\r\n                default:\r\n                    if (escaped) {\r\n                        escaped = false;\r\n                        commentCheck = -1;\r\n                    }\r\n                    escapedValue = escapedValue + char;\r\n                    break;\r\n            }\r\n        }\r\n        return escapedValue;\r\n    }\r\n}\r\nexports.Property = Property;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/property.js\n// module id = 37\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst dockerFormatter_1 = require(\"./dockerFormatter\");\r\nconst dockerValidator_1 = require(\"./dockerValidator\");\r\n/**\r\n * Error codes that correspond to a given validation error. These\r\n * values are exposed for the purpose of allowing clients to identify\r\n * what kind of validation error has occurred and to then prompt\r\n * action that is appropriate for resolving the error to the user.\r\n *\r\n * Note that the names and values of these errors are not considered\r\n * to be API and may change between releases of dockerfiles-util.\r\n * This is because the Docker builder's errors and error messages are\r\n * itself not considered to be API. Thus, Dockerfiles that originally\r\n * would not build and throw an error may stop throwing an error\r\n * a future release of Docker due to newly added features. This would\r\n * then mean that an error (code and message) is no longer valid and\r\n * should thus be removed. Hence, this list of error codes is not\r\n * stable and as aforementioned may change between releases of\r\n * dockerfile-utils.\r\n */\r\nvar ValidationCode;\r\n(function (ValidationCode) {\r\n    ValidationCode[ValidationCode[\"CASING_INSTRUCTION\"] = 0] = \"CASING_INSTRUCTION\";\r\n    ValidationCode[ValidationCode[\"CASING_DIRECTIVE\"] = 1] = \"CASING_DIRECTIVE\";\r\n    ValidationCode[ValidationCode[\"ARGUMENT_MISSING\"] = 2] = \"ARGUMENT_MISSING\";\r\n    ValidationCode[ValidationCode[\"ARGUMENT_EXTRA\"] = 3] = \"ARGUMENT_EXTRA\";\r\n    ValidationCode[ValidationCode[\"ARGUMENT_REQUIRES_ONE\"] = 4] = \"ARGUMENT_REQUIRES_ONE\";\r\n    ValidationCode[ValidationCode[\"ARGUMENT_REQUIRES_AT_LEAST_ONE\"] = 5] = \"ARGUMENT_REQUIRES_AT_LEAST_ONE\";\r\n    ValidationCode[ValidationCode[\"ARGUMENT_REQUIRES_TWO\"] = 6] = \"ARGUMENT_REQUIRES_TWO\";\r\n    ValidationCode[ValidationCode[\"ARGUMENT_REQUIRES_AT_LEAST_TWO\"] = 7] = \"ARGUMENT_REQUIRES_AT_LEAST_TWO\";\r\n    ValidationCode[ValidationCode[\"ARGUMENT_REQUIRES_ONE_OR_THREE\"] = 8] = \"ARGUMENT_REQUIRES_ONE_OR_THREE\";\r\n    ValidationCode[ValidationCode[\"ARGUMENT_UNNECESSARY\"] = 9] = \"ARGUMENT_UNNECESSARY\";\r\n    ValidationCode[ValidationCode[\"DUPLICATE_BUILD_STAGE_NAME\"] = 10] = \"DUPLICATE_BUILD_STAGE_NAME\";\r\n    ValidationCode[ValidationCode[\"EMPTY_CONTINUATION_LINE\"] = 11] = \"EMPTY_CONTINUATION_LINE\";\r\n    ValidationCode[ValidationCode[\"INVALID_BUILD_STAGE_NAME\"] = 12] = \"INVALID_BUILD_STAGE_NAME\";\r\n    ValidationCode[ValidationCode[\"FLAG_AT_LEAST_ONE\"] = 13] = \"FLAG_AT_LEAST_ONE\";\r\n    ValidationCode[ValidationCode[\"FLAG_DUPLICATE\"] = 14] = \"FLAG_DUPLICATE\";\r\n    ValidationCode[ValidationCode[\"FLAG_INVALID_DURATION\"] = 15] = \"FLAG_INVALID_DURATION\";\r\n    ValidationCode[ValidationCode[\"FLAG_LESS_THAN_1MS\"] = 16] = \"FLAG_LESS_THAN_1MS\";\r\n    ValidationCode[ValidationCode[\"FLAG_MISSING_DURATION\"] = 17] = \"FLAG_MISSING_DURATION\";\r\n    ValidationCode[ValidationCode[\"FLAG_MISSING_VALUE\"] = 18] = \"FLAG_MISSING_VALUE\";\r\n    ValidationCode[ValidationCode[\"FLAG_UNKNOWN_UNIT\"] = 19] = \"FLAG_UNKNOWN_UNIT\";\r\n    ValidationCode[ValidationCode[\"NO_SOURCE_IMAGE\"] = 20] = \"NO_SOURCE_IMAGE\";\r\n    ValidationCode[ValidationCode[\"INVALID_ESCAPE_DIRECTIVE\"] = 21] = \"INVALID_ESCAPE_DIRECTIVE\";\r\n    ValidationCode[ValidationCode[\"INVALID_AS\"] = 22] = \"INVALID_AS\";\r\n    ValidationCode[ValidationCode[\"INVALID_DESTINATION\"] = 23] = \"INVALID_DESTINATION\";\r\n    ValidationCode[ValidationCode[\"INVALID_PORT\"] = 24] = \"INVALID_PORT\";\r\n    ValidationCode[ValidationCode[\"INVALID_PROTO\"] = 25] = \"INVALID_PROTO\";\r\n    /**\r\n     * The error code used if the base image of a FROM instruction\r\n     * has an invalid tag or digest specified.\r\n     */\r\n    ValidationCode[ValidationCode[\"INVALID_REFERENCE_FORMAT\"] = 26] = \"INVALID_REFERENCE_FORMAT\";\r\n    ValidationCode[ValidationCode[\"INVALID_SIGNAL\"] = 27] = \"INVALID_SIGNAL\";\r\n    ValidationCode[ValidationCode[\"INVALID_SYNTAX\"] = 28] = \"INVALID_SYNTAX\";\r\n    ValidationCode[ValidationCode[\"ONBUILD_CHAINING_DISALLOWED\"] = 29] = \"ONBUILD_CHAINING_DISALLOWED\";\r\n    ValidationCode[ValidationCode[\"ONBUILD_TRIGGER_DISALLOWED\"] = 30] = \"ONBUILD_TRIGGER_DISALLOWED\";\r\n    ValidationCode[ValidationCode[\"SHELL_JSON_FORM\"] = 31] = \"SHELL_JSON_FORM\";\r\n    ValidationCode[ValidationCode[\"SHELL_REQUIRES_ONE\"] = 32] = \"SHELL_REQUIRES_ONE\";\r\n    ValidationCode[ValidationCode[\"SYNTAX_MISSING_EQUALS\"] = 33] = \"SYNTAX_MISSING_EQUALS\";\r\n    ValidationCode[ValidationCode[\"SYNTAX_MISSING_NAMES\"] = 34] = \"SYNTAX_MISSING_NAMES\";\r\n    ValidationCode[ValidationCode[\"SYNTAX_MISSING_SINGLE_QUOTE\"] = 35] = \"SYNTAX_MISSING_SINGLE_QUOTE\";\r\n    ValidationCode[ValidationCode[\"SYNTAX_MISSING_DOUBLE_QUOTE\"] = 36] = \"SYNTAX_MISSING_DOUBLE_QUOTE\";\r\n    ValidationCode[ValidationCode[\"MULTIPLE_INSTRUCTIONS\"] = 37] = \"MULTIPLE_INSTRUCTIONS\";\r\n    ValidationCode[ValidationCode[\"UNKNOWN_INSTRUCTION\"] = 38] = \"UNKNOWN_INSTRUCTION\";\r\n    ValidationCode[ValidationCode[\"UNKNOWN_ADD_FLAG\"] = 39] = \"UNKNOWN_ADD_FLAG\";\r\n    ValidationCode[ValidationCode[\"UNKNOWN_COPY_FLAG\"] = 40] = \"UNKNOWN_COPY_FLAG\";\r\n    ValidationCode[ValidationCode[\"UNKNOWN_HEALTHCHECK_FLAG\"] = 41] = \"UNKNOWN_HEALTHCHECK_FLAG\";\r\n    ValidationCode[ValidationCode[\"UNKNOWN_TYPE\"] = 42] = \"UNKNOWN_TYPE\";\r\n    ValidationCode[ValidationCode[\"DEPRECATED_MAINTAINER\"] = 43] = \"DEPRECATED_MAINTAINER\";\r\n    ValidationCode[ValidationCode[\"HEALTHCHECK_CMD_ARGUMENT_MISSING\"] = 44] = \"HEALTHCHECK_CMD_ARGUMENT_MISSING\";\r\n    ValidationCode[ValidationCode[\"FLAG_INVALID_FROM_VALUE\"] = 45] = \"FLAG_INVALID_FROM_VALUE\";\r\n})(ValidationCode = exports.ValidationCode || (exports.ValidationCode = {}));\r\n/**\r\n * The severity options that may be defined for the validator.\r\n */\r\nvar ValidationSeverity;\r\n(function (ValidationSeverity) {\r\n    /**\r\n     * The value to set to ignore a problem that has been detected of\r\n     * a certain type.\r\n     */\r\n    ValidationSeverity[ValidationSeverity[\"IGNORE\"] = 0] = \"IGNORE\";\r\n    /**\r\n     * The value to set to classify a problem that has been detected\r\n     * of a certain type as a warning.\r\n     */\r\n    ValidationSeverity[ValidationSeverity[\"WARNING\"] = 1] = \"WARNING\";\r\n    /**\r\n     * The value to set to classify a problem that has been detected\r\n     * of a certain type as an error.\r\n     */\r\n    ValidationSeverity[ValidationSeverity[\"ERROR\"] = 2] = \"ERROR\";\r\n})(ValidationSeverity = exports.ValidationSeverity || (exports.ValidationSeverity = {}));\r\n/**\r\n * Analyzes the Dockerfile contained within the given string and\r\n * provides an array of TextEdits back for formatting the document.\r\n */\r\nfunction format(content, options) {\r\n    const document = vscode_languageserver_types_1.TextDocument.create(\"\", \"\", 0, content);\r\n    let formatter = new dockerFormatter_1.DockerFormatter();\r\n    return formatter.formatDocument(document, options);\r\n}\r\nexports.format = format;\r\n/**\r\n * Validates the Dockerfile that is contained in the given string.\r\n */\r\nfunction validate(content, settings) {\r\n    const document = vscode_languageserver_types_1.TextDocument.create(\"\", \"\", 0, content);\r\n    const validator = new dockerValidator_1.Validator(settings);\r\n    return validator.validate(document);\r\n}\r\nexports.validate = validate;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/lib/main.js\n// module id = 38\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst property_1 = require(\"../property\");\r\nconst propertyInstruction_1 = require(\"../propertyInstruction\");\r\nclass Arg extends propertyInstruction_1.PropertyInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n        this.property = null;\r\n        const args = this.getArguments();\r\n        if (args.length === 1) {\r\n            this.property = new property_1.Property(this.document, this.escapeChar, args[0]);\r\n        }\r\n        else {\r\n            this.property = null;\r\n        }\r\n    }\r\n    /**\r\n     * Returns the variable defined by this ARG. This may be null if\r\n     * this ARG instruction is malformed and has no variable\r\n     * declaration.\r\n     */\r\n    getProperty() {\r\n        return this.property;\r\n    }\r\n}\r\nexports.Arg = Arg;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/arg.js\n// module id = 39\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\r\nclass Cmd extends jsonInstruction_1.JSONInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.Cmd = Cmd;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/cmd.js\n// module id = 40\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\r\nclass Copy extends jsonInstruction_1.JSONInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    stopSearchingForFlags(argument) {\r\n        return argument.indexOf(\"--\") === -1;\r\n    }\r\n    getFromFlag() {\r\n        let flags = super.getFlags();\r\n        return flags.length === 1 && flags[0].getName() === \"from\" ? flags[0] : null;\r\n    }\r\n}\r\nexports.Copy = Copy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/copy.js\n// module id = 41\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\r\nclass Entrypoint extends jsonInstruction_1.JSONInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.Entrypoint = Entrypoint;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/entrypoint.js\n// module id = 42\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst propertyInstruction_1 = require(\"../propertyInstruction\");\r\nclass Env extends propertyInstruction_1.PropertyInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    getProperties() {\r\n        return super.getProperties();\r\n    }\r\n}\r\nexports.Env = Env;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/env.js\n// module id = 43\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst instruction_1 = require(\"../instruction\");\r\nclass From extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    getImage() {\r\n        return this.getRangeContent(this.getImageRange());\r\n    }\r\n    /**\r\n     * Returns the name of the image that will be used as the base image.\r\n     *\r\n     * @return the base image's name, or null if unspecified\r\n     */\r\n    getImageName() {\r\n        let range = this.getImageRange();\r\n        if (range) {\r\n            let content = this.getRangeContent(range);\r\n            let index = content.lastIndexOf(':');\r\n            if (index === -1) {\r\n                index = content.lastIndexOf('@');\r\n            }\r\n            return index === -1 ? content : content.substring(0, index);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns the range that covers the image argument of this\r\n     * instruction. This includes the tag or digest of the image if\r\n     * it has been specified by the instruction.\r\n     *\r\n     * @return the range of the image argument, or null if no image\r\n     *         has been specified\r\n     */\r\n    getImageRange() {\r\n        let args = this.getArguments();\r\n        return args.length !== 0 ? args[0].getRange() : null;\r\n    }\r\n    /**\r\n     * Returns the range in the document that the tag of the base\r\n     * image encompasses.\r\n     *\r\n     * @return the base image's tag's range in the document, or null\r\n     *         if no tag has been specified\r\n     */\r\n    getImageTagRange() {\r\n        const range = this.getImageRange();\r\n        if (range) {\r\n            let content = this.getRangeContent(range);\r\n            if (content.indexOf('@') === -1) {\r\n                let index = content.lastIndexOf(':');\r\n                if (index !== -1) {\r\n                    return vscode_languageserver_types_1.Range.create(range.start.line, range.start.character + index + 1, range.end.line, range.end.character);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns the range in the document that the digest of the base\r\n     * image encompasses.\r\n     *\r\n     * @return the base image's digest's range in the document, or null\r\n     *         if no digest has been specified\r\n     */\r\n    getImageDigestRange() {\r\n        let range = this.getImageRange();\r\n        if (range) {\r\n            let content = this.getRangeContent(range);\r\n            let index = content.lastIndexOf('@');\r\n            if (index !== -1) {\r\n                return vscode_languageserver_types_1.Range.create(range.start.line, range.start.character + index + 1, range.end.line, range.end.character);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getBuildStage() {\r\n        let range = this.getBuildStageRange();\r\n        return range === null ? null : this.getRangeContent(range);\r\n    }\r\n    getBuildStageRange() {\r\n        let args = this.getArguments();\r\n        if (args.length === 3 && args[1].getValue().toUpperCase() === \"AS\") {\r\n            return args[2].getRange();\r\n        }\r\n        return null;\r\n    }\r\n}\r\nexports.From = From;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/from.js\n// module id = 44\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst modifiableInstruction_1 = require(\"../modifiableInstruction\");\r\nclass Healthcheck extends modifiableInstruction_1.ModifiableInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    stopSearchingForFlags(argument) {\r\n        argument = argument.toUpperCase();\r\n        return argument === \"CMD\" || argument === \"NONE\";\r\n    }\r\n    getSubcommand() {\r\n        let args = this.getArguments();\r\n        return args.length !== 0 ? args[0] : null;\r\n    }\r\n}\r\nexports.Healthcheck = Healthcheck;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/healthcheck.js\n// module id = 45\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst parser_1 = require(\"../parser\");\r\nconst instruction_1 = require(\"../instruction\");\r\nclass Onbuild extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    getTrigger() {\r\n        let trigger = this.getTriggerWord();\r\n        return trigger === null ? null : trigger.toUpperCase();\r\n    }\r\n    getTriggerWord() {\r\n        return this.getRangeContent(this.getTriggerRange());\r\n    }\r\n    getTriggerRange() {\r\n        let args = this.getArguments();\r\n        return args.length > 0 ? args[0].getRange() : null;\r\n    }\r\n    getTriggerInstruction() {\r\n        let triggerRange = this.getTriggerRange();\r\n        if (triggerRange === null) {\r\n            return null;\r\n        }\r\n        let args = this.getArguments();\r\n        return parser_1.Parser.createInstruction(this.document, this.dockerfile, this.escapeChar, vscode_languageserver_types_1.Range.create(args[0].getRange().start, this.getRange().end), this.getTriggerWord(), triggerRange);\r\n    }\r\n}\r\nexports.Onbuild = Onbuild;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/onbuild.js\n// module id = 46\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst flag_1 = require(\"./flag\");\r\nconst instruction_1 = require(\"./instruction\");\r\nclass ModifiableInstruction extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    getFlags() {\r\n        if (!this.flags) {\r\n            this.flags = [];\r\n            for (let arg of this.getArguments()) {\r\n                let value = arg.getValue();\r\n                if (this.stopSearchingForFlags(value)) {\r\n                    return this.flags;\r\n                }\r\n                else if (value.indexOf(\"--\") === 0) {\r\n                    let range = arg.getRange();\r\n                    let rawValue = this.document.getText().substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\r\n                    let nameIndex = value.indexOf('=');\r\n                    let index = rawValue.indexOf('=');\r\n                    let firstMatch = false;\r\n                    let secondMatch = false;\r\n                    let startIndex = -1;\r\n                    nameSearchLoop: for (let i = 0; i < rawValue.length; i++) {\r\n                        switch (rawValue.charAt(i)) {\r\n                            case '\\\\':\r\n                            case ' ':\r\n                            case '\\t':\r\n                            case '\\r':\r\n                            case '\\n':\r\n                                break;\r\n                            case '-':\r\n                                if (secondMatch) {\r\n                                    startIndex = i;\r\n                                    break nameSearchLoop;\r\n                                }\r\n                                else if (firstMatch) {\r\n                                    secondMatch = true;\r\n                                }\r\n                                else {\r\n                                    firstMatch = true;\r\n                                }\r\n                                break;\r\n                            default:\r\n                                startIndex = i;\r\n                                break nameSearchLoop;\r\n                        }\r\n                    }\r\n                    let nameStart = this.document.positionAt(this.document.offsetAt(range.start) + startIndex);\r\n                    if (index === -1) {\r\n                        this.flags.push(new flag_1.Flag(range, value.substring(2), vscode_languageserver_types_1.Range.create(nameStart, range.end), null, null));\r\n                    }\r\n                    else if (index === value.length - 1) {\r\n                        let nameEnd = this.document.positionAt(this.document.offsetAt(range.start) + index);\r\n                        this.flags.push(new flag_1.Flag(range, value.substring(2, index), vscode_languageserver_types_1.Range.create(nameStart, nameEnd), \"\", vscode_languageserver_types_1.Range.create(range.end, range.end)));\r\n                    }\r\n                    else {\r\n                        let nameEnd = this.document.positionAt(this.document.offsetAt(range.start) + index);\r\n                        this.flags.push(new flag_1.Flag(range, value.substring(2, nameIndex), vscode_languageserver_types_1.Range.create(nameStart, nameEnd), value.substring(nameIndex + 1), vscode_languageserver_types_1.Range.create(this.document.positionAt(this.document.offsetAt(range.start) + index + 1), range.end)));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.flags;\r\n    }\r\n    getArguments() {\r\n        const args = super.getArguments();\r\n        const flags = this.getFlags();\r\n        if (flags.length === 0) {\r\n            return args;\r\n        }\r\n        for (let i = 0; i < flags.length; i++) {\r\n            args.shift();\r\n        }\r\n        return args;\r\n    }\r\n}\r\nexports.ModifiableInstruction = ModifiableInstruction;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/modifiableInstruction.js\n// module id = 47\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst util_1 = require(\"./util\");\r\nclass Property {\r\n    constructor(document, escapeChar, arg, arg2) {\r\n        this.name = null;\r\n        this.value = null;\r\n        this.document = document;\r\n        this.escapeChar = escapeChar;\r\n        if (arg2) {\r\n            this.nameRange = arg.getRange();\r\n            this.name = document.getText().substring(document.offsetAt(this.nameRange.start), document.offsetAt(this.nameRange.end));\r\n            this.valueRange = arg2.getRange();\r\n            let value = document.getText().substring(document.offsetAt(this.valueRange.start), document.offsetAt(this.valueRange.end));\r\n            this.value = Property.getValue(value, escapeChar);\r\n            this.range = vscode_languageserver_types_1.Range.create(this.nameRange.start, this.valueRange.end);\r\n        }\r\n        else {\r\n            this.nameRange = Property.getNameRange(document, arg);\r\n            this.name = document.getText().substring(document.offsetAt(this.nameRange.start), document.offsetAt(this.nameRange.end));\r\n            this.valueRange = Property.getValueRange(document, arg);\r\n            if (this.valueRange) {\r\n                let value = document.getText().substring(document.offsetAt(this.valueRange.start), document.offsetAt(this.valueRange.end));\r\n                this.value = Property.getValue(value, escapeChar);\r\n            }\r\n            this.range = arg.getRange();\r\n        }\r\n    }\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    getNameRange() {\r\n        return this.nameRange;\r\n    }\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n    getValueRange() {\r\n        return this.valueRange;\r\n    }\r\n    getRawValue() {\r\n        if (this.valueRange === null) {\r\n            return null;\r\n        }\r\n        let escaped = false;\r\n        let rawValue = \"\";\r\n        let value = this.document.getText().substring(this.document.offsetAt(this.valueRange.start), this.document.offsetAt(this.valueRange.end));\r\n        rawLoop: for (let i = 0; i < value.length; i++) {\r\n            let char = value.charAt(i);\r\n            switch (char) {\r\n                case this.escapeChar:\r\n                    for (let j = i + 1; j < value.length; j++) {\r\n                        switch (value.charAt(j)) {\r\n                            case '\\r':\r\n                                j++;\r\n                            case '\\n':\r\n                                escaped = true;\r\n                                i = j;\r\n                                continue rawLoop;\r\n                            case ' ':\r\n                            case '\\t':\r\n                                break;\r\n                            default:\r\n                                rawValue = rawValue + char;\r\n                                continue rawLoop;\r\n                        }\r\n                    }\r\n                    // this happens if there's only whitespace after the escape character\r\n                    rawValue = rawValue + char;\r\n                    break;\r\n                case '\\r':\r\n                case '\\n':\r\n                    break;\r\n                case ' ':\r\n                case '\\t':\r\n                    if (!escaped) {\r\n                        rawValue = rawValue + char;\r\n                    }\r\n                    break;\r\n                case '#':\r\n                    if (escaped) {\r\n                        for (let j = i + 1; j < value.length; j++) {\r\n                            switch (value.charAt(j)) {\r\n                                case '\\r':\r\n                                    j++;\r\n                                case '\\n':\r\n                                    i = j;\r\n                                    continue rawLoop;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        rawValue = rawValue + char;\r\n                    }\r\n                    break;\r\n                default:\r\n                    rawValue = rawValue + char;\r\n                    escaped = false;\r\n                    break;\r\n            }\r\n        }\r\n        return rawValue;\r\n    }\r\n    static getNameRange(document, arg) {\r\n        let index = arg.getValue().indexOf('=');\r\n        if (index !== -1) {\r\n            return vscode_languageserver_types_1.Range.create(arg.getRange().start, document.positionAt(document.offsetAt(arg.getRange().start) + index));\r\n        }\r\n        // no '=' found, just defined the ARG's name\r\n        return arg.getRange();\r\n    }\r\n    static getValueRange(document, arg) {\r\n        let argValue = arg.getValue();\r\n        let index = argValue.indexOf('=');\r\n        if (index === -1) {\r\n            // no value declared if no '=' found\r\n            return null;\r\n        }\r\n        return vscode_languageserver_types_1.Range.create(document.positionAt(document.offsetAt(arg.getRange().start) + index + 1), document.positionAt(document.offsetAt(arg.getRange().end)));\r\n    }\r\n    /**\r\n     * Returns the actual value of this instruction's declared\r\n     * variable. The value will have its escape characters removed if\r\n     * applicable. If the value spans multiple lines and there are\r\n     * comments nested within the lines, they too will be removed.\r\n     *\r\n     * @return the value that this ARG instruction's declared\r\n     *         variable will resolve to, may be null if no value is\r\n     *         defined, may be the empty string if the value only\r\n     *         consists of whitespace\r\n     */\r\n    static getValue(value, escapeChar) {\r\n        let escaped = false;\r\n        const skip = util_1.Util.findLeadingNonWhitespace(value, escapeChar);\r\n        if (skip !== 0 && value.charAt(skip) === '#') {\r\n            // need to skip over comments\r\n            escaped = true;\r\n        }\r\n        value = value.substring(skip);\r\n        let first = value.charAt(0);\r\n        let last = value.charAt(value.length - 1);\r\n        let literal = first === '\\'' || first === '\"';\r\n        let inSingle = (first === '\\'' && last === '\\'');\r\n        let inDouble = false;\r\n        if (first === '\"') {\r\n            for (let i = 1; i < value.length; i++) {\r\n                if (value.charAt(i) === escapeChar) {\r\n                    i++;\r\n                }\r\n                else if (value.charAt(i) === '\"' && i === value.length - 1) {\r\n                    inDouble = true;\r\n                }\r\n            }\r\n        }\r\n        if (inSingle || inDouble) {\r\n            value = value.substring(1, value.length - 1);\r\n        }\r\n        let commentCheck = -1;\r\n        let escapedValue = \"\";\r\n        let start = 0;\r\n        parseValue: for (let i = 0; i < value.length; i++) {\r\n            let char = value.charAt(i);\r\n            switch (char) {\r\n                case escapeChar:\r\n                    if (i + 1 === value.length) {\r\n                        escapedValue = escapedValue + escapeChar;\r\n                        break parseValue;\r\n                    }\r\n                    char = value.charAt(i + 1);\r\n                    if (char === ' ' || char === '\\t') {\r\n                        whitespaceCheck: for (let j = i + 2; j < value.length; j++) {\r\n                            let char2 = value.charAt(j);\r\n                            switch (char2) {\r\n                                case ' ':\r\n                                case '\\t':\r\n                                    break;\r\n                                case '\\r':\r\n                                    j++;\r\n                                case '\\n':\r\n                                    escaped = true;\r\n                                    i = j;\r\n                                    continue parseValue;\r\n                                default:\r\n                                    if (!inDouble && !inSingle && !literal) {\r\n                                        if (char2 === escapeChar) {\r\n                                            // add the escaped character\r\n                                            escapedValue = escapedValue + char;\r\n                                            // now start parsing from the next escape character\r\n                                            i = i + 1;\r\n                                        }\r\n                                        else {\r\n                                            // the expectation is that this j = i + 2 here\r\n                                            escapedValue = escapedValue + char + char2;\r\n                                            i = j;\r\n                                        }\r\n                                        continue parseValue;\r\n                                    }\r\n                                    break whitespaceCheck;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inDouble) {\r\n                        if (char === '\\r') {\r\n                            escaped = true;\r\n                            i = i + 2;\r\n                        }\r\n                        else if (char === '\\n') {\r\n                            escaped = true;\r\n                            i++;\r\n                        }\r\n                        else if (char !== '\"') {\r\n                            if (char === escapeChar) {\r\n                                i++;\r\n                            }\r\n                            escapedValue = escapedValue + escapeChar;\r\n                        }\r\n                        continue parseValue;\r\n                    }\r\n                    else if (inSingle || literal) {\r\n                        if (char === '\\r') {\r\n                            escaped = true;\r\n                            i = i + 2;\r\n                        }\r\n                        else if (char === '\\n') {\r\n                            escaped = true;\r\n                            i++;\r\n                        }\r\n                        else {\r\n                            escapedValue = escapedValue + escapeChar;\r\n                        }\r\n                        continue parseValue;\r\n                    }\r\n                    else if (char === escapeChar) {\r\n                        // double escape, append one and move on\r\n                        escapedValue = escapedValue + escapeChar;\r\n                        i++;\r\n                    }\r\n                    else if (char === '\\r') {\r\n                        escaped = true;\r\n                        // offset one more for \\r\\n\r\n                        i = i + 2;\r\n                    }\r\n                    else if (char === '\\n') {\r\n                        escaped = true;\r\n                        i++;\r\n                        start = i;\r\n                    }\r\n                    else {\r\n                        // any other escapes are simply ignored\r\n                        escapedValue = escapedValue + char;\r\n                        i++;\r\n                    }\r\n                    break;\r\n                case ' ':\r\n                case '\\t':\r\n                    if (escaped && commentCheck === -1) {\r\n                        commentCheck = i;\r\n                    }\r\n                    escapedValue = escapedValue + char;\r\n                    break;\r\n                case '\\r':\r\n                    i++;\r\n                case '\\n':\r\n                    if (escaped && commentCheck !== -1) {\r\n                        // rollback and remove the whitespace that was previously appended\r\n                        escapedValue = escapedValue.substring(0, escapedValue.length - (i - commentCheck - 1));\r\n                        commentCheck = -1;\r\n                    }\r\n                    break;\r\n                case '#':\r\n                    // a newline was escaped and now there's a comment\r\n                    if (escaped) {\r\n                        if (commentCheck !== -1) {\r\n                            // rollback and remove the whitespace that was previously appended\r\n                            escapedValue = escapedValue.substring(0, escapedValue.length - (i - commentCheck));\r\n                            commentCheck = -1;\r\n                        }\r\n                        newlineCheck: for (let j = i + 1; j < value.length; j++) {\r\n                            switch (value.charAt(j)) {\r\n                                case '\\r':\r\n                                    j++;\r\n                                case '\\n':\r\n                                    i = j;\r\n                                    break newlineCheck;\r\n                            }\r\n                        }\r\n                        continue parseValue;\r\n                    }\r\n                default:\r\n                    if (escaped) {\r\n                        escaped = false;\r\n                        commentCheck = -1;\r\n                    }\r\n                    escapedValue = escapedValue + char;\r\n                    break;\r\n            }\r\n        }\r\n        return escapedValue;\r\n    }\r\n}\r\nexports.Property = Property;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/property.js\n// module id = 48\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2017 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar services_1 = require(\"vscode-base-languageclient/lib/services\");\nexports.Disposable = services_1.Disposable;\nvar DisposableCollection = /** @class */ (function () {\n    function DisposableCollection() {\n        this.disposables = [];\n    }\n    DisposableCollection.prototype.dispose = function () {\n        while (this.disposables.length !== 0) {\n            this.disposables.pop().dispose();\n        }\n    };\n    DisposableCollection.prototype.push = function (disposable) {\n        var disposables = this.disposables;\n        disposables.push(disposable);\n        return {\n            dispose: function () {\n                var index = disposables.indexOf(disposable);\n                if (index !== -1) {\n                    disposables.splice(index, 1);\n                }\n            }\n        };\n    };\n    return DisposableCollection;\n}());\nexports.DisposableCollection = DisposableCollection;\n//# sourceMappingURL=disposable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/monaco-languageclient/lib/disposable.js\n// module id = 49\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nvar docker_1 = require(\"./docker\");\r\nvar dockerfile_ast_1 = require(\"dockerfile-ast\");\r\nvar DockerDefinition = /** @class */ (function () {\r\n    function DockerDefinition() {\r\n    }\r\n    DockerDefinition.prototype.computeBuildStageDefinition = function (uri, dockerfile, position) {\r\n        var source = undefined;\r\n        for (var _i = 0, _a = dockerfile.getCOPYs(); _i < _a.length; _i++) {\r\n            var instruction = _a[_i];\r\n            var flag = instruction.getFromFlag();\r\n            if (flag) {\r\n                var range = flag.getValueRange();\r\n                if (range && range.start.line === position.line && range.start.character <= position.character && position.character <= range.end.character) {\r\n                    source = flag.getValue();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for (var _b = 0, _c = dockerfile.getFROMs(); _b < _c.length; _b++) {\r\n            var instruction = _c[_b];\r\n            var range = instruction.getBuildStageRange();\r\n            if (range &&\r\n                ((range.start.line === position.line && range.start.character <= position.character && position.character <= range.end.character) || (instruction.getBuildStage() === source))) {\r\n                return vscode_languageserver_types_1.Location.create(uri, range);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    DockerDefinition.computeVariableDefinition = function (image, position) {\r\n        var variableName = null;\r\n        for (var _i = 0, _a = image.getARGs(); _i < _a.length; _i++) {\r\n            var arg = _a[_i];\r\n            var property = arg.getProperty();\r\n            // might be an ARG with no arguments\r\n            if (property) {\r\n                // is the caret inside the definition itself\r\n                if (docker_1.Util.isInsideRange(position, property.getNameRange())) {\r\n                    variableName = property.getName();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (variableName === null) {\r\n            variableCheck: for (var _b = 0, _c = image.getENVs(); _b < _c.length; _b++) {\r\n                var env = _c[_b];\r\n                var properties = env.getProperties();\r\n                for (var _d = 0, properties_1 = properties; _d < properties_1.length; _d++) {\r\n                    var property = properties_1[_d];\r\n                    // is the caret inside the definition itself\r\n                    if (docker_1.Util.isInsideRange(position, property.getNameRange())) {\r\n                        variableName = property.getName();\r\n                        break variableCheck;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (variableName === null) {\r\n            variableCheck: for (var _e = 0, _f = image.getInstructions(); _e < _f.length; _e++) {\r\n                var instruction = _f[_e];\r\n                for (var _g = 0, _h = instruction.getVariables(); _g < _h.length; _g++) {\r\n                    var variable = _h[_g];\r\n                    if (docker_1.Util.isInsideRange(position, variable.getNameRange())) {\r\n                        variableName = variable.getName();\r\n                        break variableCheck;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (var _j = 0, _k = image.getInstructions(); _j < _k.length; _j++) {\r\n            var instruction = _k[_j];\r\n            if (instruction instanceof dockerfile_ast_1.Arg) {\r\n                var property = instruction.getProperty();\r\n                // might be an ARG with no arguments\r\n                if (property && property.getName() === variableName) {\r\n                    return property;\r\n                }\r\n            }\r\n            else if (instruction instanceof dockerfile_ast_1.Env) {\r\n                var properties = instruction.getProperties();\r\n                for (var _l = 0, properties_2 = properties; _l < properties_2.length; _l++) {\r\n                    var property = properties_2[_l];\r\n                    if (property.getName() === variableName) {\r\n                        return property;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    DockerDefinition.findDefinition = function (dockerfile, position) {\r\n        for (var _i = 0, _a = dockerfile.getFROMs(); _i < _a.length; _i++) {\r\n            var from = _a[_i];\r\n            for (var _b = 0, _c = from.getVariables(); _b < _c.length; _b++) {\r\n                var variable = _c[_b];\r\n                if (docker_1.Util.isInsideRange(position, variable.getNameRange())) {\r\n                    for (var _d = 0, _e = dockerfile.getInitialARGs(); _d < _e.length; _d++) {\r\n                        var arg = _e[_d];\r\n                        var property = arg.getProperty();\r\n                        if (property && property.getName() === variable.getName()) {\r\n                            return property;\r\n                        }\r\n                    }\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        var image = dockerfile.getContainingImage(position);\r\n        return DockerDefinition.computeVariableDefinition(image, position);\r\n    };\r\n    DockerDefinition.prototype.computeVariableDefinition = function (uri, dockerfile, position) {\r\n        var property = DockerDefinition.findDefinition(dockerfile, position);\r\n        return property ? vscode_languageserver_types_1.Location.create(uri, property.getNameRange()) : null;\r\n    };\r\n    DockerDefinition.prototype.computeDefinition = function (textDocument, content, position) {\r\n        var dockerfile = dockerfile_ast_1.DockerfileParser.parse(content);\r\n        var definition = this.computeBuildStageDefinition(textDocument.uri, dockerfile, position);\r\n        if (definition !== null) {\r\n            return definition;\r\n        }\r\n        definition = this.computeVariableDefinition(textDocument.uri, dockerfile, position);\r\n        if (definition !== null) {\r\n            return definition;\r\n        }\r\n        return null;\r\n    };\r\n    return DockerDefinition;\r\n}());\r\nexports.DockerDefinition = DockerDefinition;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerDefinition.js\n// module id = 51\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2017 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nexports.Disposable = vscode_jsonrpc_1.Disposable;\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\nexports.Event = vscode_jsonrpc_1.Event;\nexports.Emitter = vscode_jsonrpc_1.Emitter;\n__export(require(\"./protocol\"));\n__export(require(\"vscode-languageserver-types\"));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-base-languageclient/lib/services.js\n// module id = 52\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"./thenable.ts\" />\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Is = require(\"./is\");\r\nvar messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nvar messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nvar messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nvar events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nvar cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nvar linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nexports.NullLogger = Object.freeze({\r\n    error: function () { },\r\n    warn: function () { },\r\n    info: function () { },\r\n    log: function () { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nvar ConnectionError = /** @class */ (function (_super) {\r\n    __extends(ConnectionError, _super);\r\n    function ConnectionError(code, message) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = code;\r\n        Object.setPrototypeOf(_this, ConnectionError.prototype);\r\n        return _this;\r\n    }\r\n    return ConnectionError;\r\n}(Error));\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    var sequenceNumber = 0;\r\n    var notificationSquenceNumber = 0;\r\n    var unknownResponseSquenceNumber = 0;\r\n    var version = '2.0';\r\n    var starRequestHandler = undefined;\r\n    var requestHandlers = Object.create(null);\r\n    var starNotificationHandler = undefined;\r\n    var notificationHandlers = Object.create(null);\r\n    var timer;\r\n    var messageQueue = new linkedMap_1.LinkedMap();\r\n    var responsePromises = Object.create(null);\r\n    var requestTokens = Object.create(null);\r\n    var trace = Trace.Off;\r\n    var tracer;\r\n    var state = ConnectionState.New;\r\n    var errorEmitter = new events_1.Emitter();\r\n    var closeEmitter = new events_1.Emitter();\r\n    var unhandledNotificationEmitter = new events_1.Emitter();\r\n    var disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    ;\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(function () {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        var message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    var callback = function (message) {\r\n        try {\r\n            // We have recevied a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                var key = createRequestQueueKey(message.params.id);\r\n                var toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    var response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            var message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            var message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            var message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        var element = requestHandlers[requestMessage.method];\r\n        var type;\r\n        var requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        var startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            var cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            var tokenKey_1 = String(requestMessage.id);\r\n            requestTokens[tokenKey_1] = cancellationSource;\r\n            try {\r\n                var handlerResult = void 0;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler.apply(void 0, requestMessage.params.concat([cancellationSource.token])) : starRequestHandler.apply(void 0, [requestMessage.method].concat(requestMessage.params, [cancellationSource.token]));\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                var promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey_1];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then(function (resultOrError) {\r\n                        delete requestTokens[tokenKey_1];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, function (error) {\r\n                        delete requestTokens[tokenKey_1];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed with message: \" + error.message), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed unexpectedly without providing any details.\"), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey_1];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey_1];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed with message: \" + error.message), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, \"Request \" + requestMessage.method + \" failed unexpectedly without providing any details.\"), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, \"Unhandled method \" + requestMessage.method), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(\"Received response message without id: Error is: \\n\" + JSON.stringify(responseMessage.error, undefined, 4));\r\n            }\r\n            else {\r\n                logger.error(\"Received response message without id. No further error information provided.\");\r\n            }\r\n        }\r\n        else {\r\n            var key = String(responseMessage.id);\r\n            var responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        var error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(\"Response handler '\" + responsePromise.method + \"' failed with message: \" + error.message);\r\n                    }\r\n                    else {\r\n                        logger.error(\"Response handler '\" + responsePromise.method + \"' failed unexpectedly.\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        var type = undefined;\r\n        var notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = function (params) {\r\n                var id = params.id;\r\n                var source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            var element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler.apply(void 0, message.params) : starNotificationHandler.apply(void 0, [message.method].concat(message.params));\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(\"Notification handler '\" + message.method + \"' failed with message: \" + error.message);\r\n                }\r\n                else {\r\n                    logger.error(\"Notification handler '\" + message.method + \"' failed unexpectedly.\");\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(\"Received message which is neither a response nor a notification message:\\n\" + JSON.stringify(message, null, 4));\r\n        // Test whether we find an id to reject the promise\r\n        var responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            var key = String(responseMessage.id);\r\n            var responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose && message.params) {\r\n            data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n        }\r\n        tracer.log(\"Sending request '\" + message.method + \" - (\" + message.id + \")'.\", data);\r\n    }\r\n    function traceSendNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.params) {\r\n                data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                data = 'No parameters provided.\\n\\n';\r\n            }\r\n        }\r\n        tracer.log(\"Sending notification '\" + message.method + \"'.\", data);\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.error && message.error.data) {\r\n                data = \"Error data: \" + JSON.stringify(message.error.data, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                if (message.result) {\r\n                    data = \"Result: \" + JSON.stringify(message.result, null, 4) + \"\\n\\n\";\r\n                }\r\n                else if (message.error === void 0) {\r\n                    data = 'No result returned.\\n\\n';\r\n                }\r\n            }\r\n        }\r\n        tracer.log(\"Sending response '\" + method + \" - (\" + message.id + \")'. Processing request took \" + (Date.now() - startTime) + \"ms\", data);\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose && message.params) {\r\n            data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n        }\r\n        tracer.log(\"Received request '\" + message.method + \" - (\" + message.id + \")'.\", data);\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.params) {\r\n                data = \"Params: \" + JSON.stringify(message.params, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                data = 'No parameters provided.\\n\\n';\r\n            }\r\n        }\r\n        tracer.log(\"Received notification '\" + message.method + \"'.\", data);\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        var data = undefined;\r\n        if (trace === Trace.Verbose) {\r\n            if (message.error && message.error.data) {\r\n                data = \"Error data: \" + JSON.stringify(message.error.data, null, 4) + \"\\n\\n\";\r\n            }\r\n            else {\r\n                if (message.result) {\r\n                    data = \"Result: \" + JSON.stringify(message.result, null, 4) + \"\\n\\n\";\r\n                }\r\n                else if (message.error === void 0) {\r\n                    data = 'No result returned.\\n\\n';\r\n                }\r\n            }\r\n        }\r\n        if (responsePromise) {\r\n            var error = message.error ? \" Request failed: \" + message.error.message + \" (\" + message.error.code + \").\" : '';\r\n            tracer.log(\"Received response '\" + responsePromise.method + \" - (\" + message.id + \")' in \" + (Date.now() - responsePromise.timerStart) + \"ms.\" + error, data);\r\n        }\r\n        else {\r\n            tracer.log(\"Received response \" + message.id + \" without active response promise.\", data);\r\n        }\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        var result;\r\n        var numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (var i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (var i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    var connection = {\r\n        sendNotification: function (type) {\r\n            var params = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                params[_i - 1] = arguments[_i];\r\n            }\r\n            throwIfClosedOrDisposed();\r\n            var method;\r\n            var messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            var notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: function (type, handler) {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler: handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type: type, handler: handler };\r\n                }\r\n            }\r\n        },\r\n        sendRequest: function (type) {\r\n            var params = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                params[_i - 1] = arguments[_i];\r\n            }\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            var method;\r\n            var messageParams;\r\n            var token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        var last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(function (value) { return undefinedToNull(value); });\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(function (value) { return undefinedToNull(value); });\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                var numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            var id = sequenceNumber++;\r\n            var result = new Promise(function (resolve, reject) {\r\n                var requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                var responsePromise = { method: method, timerStart: Date.now(), resolve: resolve, reject: reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(function () {\r\n                    connection.sendNotification(CancelNotification.type, { id: id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: function (type, handler) {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler: handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type: type, handler: handler };\r\n                }\r\n            }\r\n        },\r\n        trace: function (_value, _tracer, sendNotification) {\r\n            if (sendNotification === void 0) { sendNotification = false; }\r\n            trace = _value;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: function () {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            var error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach(function (key) {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: function () {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: function () {\r\n            console.log(\"inspect\");\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, function (params) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    var reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    var writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-jsonrpc/lib/main.js\n// module id = 53\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nvar Is = require(\"./is\");\r\nvar DefaultSize = 8192;\r\nvar CR = new Buffer('\\r', 'ascii')[0];\r\nvar LF = new Buffer('\\n', 'ascii')[0];\r\nvar CRLF = '\\r\\n';\r\nvar MessageBuffer = /** @class */ (function () {\r\n    function MessageBuffer(encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = new Buffer(DefaultSize);\r\n    }\r\n    MessageBuffer.prototype.append = function (chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) == 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = new Buffer(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = new Buffer(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    };\r\n    MessageBuffer.prototype.tryReadHeaders = function () {\r\n        var result = undefined;\r\n        var current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        var headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach(function (header) {\r\n            var index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            var key = header.substr(0, index);\r\n            var value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        var nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    };\r\n    MessageBuffer.prototype.tryReadContent = function (length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        var result = this.buffer.toString(this.encoding, 0, length);\r\n        var nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    };\r\n    Object.defineProperty(MessageBuffer.prototype, \"numberOfBytes\", {\r\n        get: function () {\r\n            return this.index;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return MessageBuffer;\r\n}());\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nvar AbstractMessageReader = /** @class */ (function () {\r\n    function AbstractMessageReader() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    AbstractMessageReader.prototype.dispose = function () {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    };\r\n    Object.defineProperty(AbstractMessageReader.prototype, \"onError\", {\r\n        get: function () {\r\n            return this.errorEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageReader.prototype.fireError = function (error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    };\r\n    Object.defineProperty(AbstractMessageReader.prototype, \"onClose\", {\r\n        get: function () {\r\n            return this.closeEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageReader.prototype.fireClose = function () {\r\n        this.closeEmitter.fire(undefined);\r\n    };\r\n    Object.defineProperty(AbstractMessageReader.prototype, \"onPartialMessage\", {\r\n        get: function () {\r\n            return this.partialMessageEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageReader.prototype.firePartialMessage = function (info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    };\r\n    AbstractMessageReader.prototype.asError = function (error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(\"Reader recevied error. Reason: \" + (Is.string(error.message) ? error.message : 'unknown'));\r\n        }\r\n    };\r\n    return AbstractMessageReader;\r\n}());\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nvar StreamMessageReader = /** @class */ (function (_super) {\r\n    __extends(StreamMessageReader, _super);\r\n    function StreamMessageReader(readable, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        var _this = _super.call(this) || this;\r\n        _this.readable = readable;\r\n        _this.buffer = new MessageBuffer(encoding);\r\n        _this._partialMessageTimeout = 10000;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StreamMessageReader.prototype, \"partialMessageTimeout\", {\r\n        get: function () {\r\n            return this._partialMessageTimeout;\r\n        },\r\n        set: function (timeout) {\r\n            this._partialMessageTimeout = timeout;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StreamMessageReader.prototype.listen = function (callback) {\r\n        var _this = this;\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', function (data) {\r\n            _this.onData(data);\r\n        });\r\n        this.readable.on('error', function (error) { return _this.fireError(error); });\r\n        this.readable.on('close', function () { return _this.fireClose(); });\r\n    };\r\n    StreamMessageReader.prototype.onData = function (data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                var headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                var contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                var length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't recevied the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    };\r\n    StreamMessageReader.prototype.clearPartialMessageTimer = function () {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    };\r\n    StreamMessageReader.prototype.setPartialMessageTimer = function () {\r\n        var _this = this;\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout(function (token, timeout) {\r\n            _this.partialMessageTimer = undefined;\r\n            if (token === _this.messageToken) {\r\n                _this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                _this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    };\r\n    return StreamMessageReader;\r\n}(AbstractMessageReader));\r\nexports.StreamMessageReader = StreamMessageReader;\r\nvar IPCMessageReader = /** @class */ (function (_super) {\r\n    __extends(IPCMessageReader, _super);\r\n    function IPCMessageReader(process) {\r\n        var _this = _super.call(this) || this;\r\n        _this.process = process;\r\n        var eventEmitter = _this.process;\r\n        eventEmitter.on('error', function (error) { return _this.fireError(error); });\r\n        eventEmitter.on('close', function () { return _this.fireClose(); });\r\n        return _this;\r\n    }\r\n    IPCMessageReader.prototype.listen = function (callback) {\r\n        this.process.on('message', callback);\r\n    };\r\n    return IPCMessageReader;\r\n}(AbstractMessageReader));\r\nexports.IPCMessageReader = IPCMessageReader;\r\nvar SocketMessageReader = /** @class */ (function (_super) {\r\n    __extends(SocketMessageReader, _super);\r\n    function SocketMessageReader(socket, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf-8'; }\r\n        return _super.call(this, socket, encoding) || this;\r\n    }\r\n    return SocketMessageReader;\r\n}(StreamMessageReader));\r\nexports.SocketMessageReader = SocketMessageReader;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-jsonrpc/lib/messageReader.js\n// module id = 54\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nvar Is = require(\"./is\");\r\nvar ContentLength = 'Content-Length: ';\r\nvar CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nvar AbstractMessageWriter = /** @class */ (function () {\r\n    function AbstractMessageWriter() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    AbstractMessageWriter.prototype.dispose = function () {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    };\r\n    Object.defineProperty(AbstractMessageWriter.prototype, \"onError\", {\r\n        get: function () {\r\n            return this.errorEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageWriter.prototype.fireError = function (error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    };\r\n    Object.defineProperty(AbstractMessageWriter.prototype, \"onClose\", {\r\n        get: function () {\r\n            return this.closeEmitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AbstractMessageWriter.prototype.fireClose = function () {\r\n        this.closeEmitter.fire(undefined);\r\n    };\r\n    AbstractMessageWriter.prototype.asError = function (error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(\"Writer recevied error. Reason: \" + (Is.string(error.message) ? error.message : 'unknown'));\r\n        }\r\n    };\r\n    return AbstractMessageWriter;\r\n}());\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nvar StreamMessageWriter = /** @class */ (function (_super) {\r\n    __extends(StreamMessageWriter, _super);\r\n    function StreamMessageWriter(writable, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        var _this = _super.call(this) || this;\r\n        _this.writable = writable;\r\n        _this.encoding = encoding;\r\n        _this.errorCount = 0;\r\n        _this.writable.on('error', function (error) { return _this.fireError(error); });\r\n        _this.writable.on('close', function () { return _this.fireClose(); });\r\n        return _this;\r\n    }\r\n    StreamMessageWriter.prototype.write = function (msg) {\r\n        var json = JSON.stringify(msg);\r\n        var contentLength = Buffer.byteLength(json, this.encoding);\r\n        var headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    };\r\n    return StreamMessageWriter;\r\n}(AbstractMessageWriter));\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nvar IPCMessageWriter = /** @class */ (function (_super) {\r\n    __extends(IPCMessageWriter, _super);\r\n    function IPCMessageWriter(process) {\r\n        var _this = _super.call(this) || this;\r\n        _this.process = process;\r\n        _this.errorCount = 0;\r\n        _this.queue = [];\r\n        _this.sending = false;\r\n        var eventEmitter = _this.process;\r\n        eventEmitter.on('error', function (error) { return _this.fireError(error); });\r\n        eventEmitter.on('close', function () { return _this.fireClose; });\r\n        return _this;\r\n    }\r\n    IPCMessageWriter.prototype.write = function (msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    };\r\n    IPCMessageWriter.prototype.doWriteMessage = function (msg) {\r\n        var _this = this;\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, function (error) {\r\n                    _this.sending = false;\r\n                    if (error) {\r\n                        _this.errorCount++;\r\n                        _this.fireError(error, msg, _this.errorCount);\r\n                    }\r\n                    else {\r\n                        _this.errorCount = 0;\r\n                    }\r\n                    if (_this.queue.length > 0) {\r\n                        _this.doWriteMessage(_this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    };\r\n    return IPCMessageWriter;\r\n}(AbstractMessageWriter));\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nvar SocketMessageWriter = /** @class */ (function (_super) {\r\n    __extends(SocketMessageWriter, _super);\r\n    function SocketMessageWriter(socket, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        var _this = _super.call(this) || this;\r\n        _this.socket = socket;\r\n        _this.queue = [];\r\n        _this.sending = false;\r\n        _this.encoding = encoding;\r\n        _this.errorCount = 0;\r\n        _this.socket.on('error', function (error) { return _this.fireError(error); });\r\n        _this.socket.on('close', function () { return _this.fireClose(); });\r\n        return _this;\r\n    }\r\n    SocketMessageWriter.prototype.write = function (msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    };\r\n    SocketMessageWriter.prototype.doWriteMessage = function (msg) {\r\n        var _this = this;\r\n        var json = JSON.stringify(msg);\r\n        var contentLength = Buffer.byteLength(json, this.encoding);\r\n        var headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', function (error) {\r\n                if (error) {\r\n                    _this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    _this.socket.write(json, _this.encoding, function (error) {\r\n                        _this.sending = false;\r\n                        if (error) {\r\n                            _this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            _this.errorCount = 0;\r\n                        }\r\n                        if (_this.queue.length > 0) {\r\n                            _this.doWriteMessage(_this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    _this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    };\r\n    SocketMessageWriter.prototype.handleError = function (error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    };\r\n    return SocketMessageWriter;\r\n}(AbstractMessageWriter));\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-jsonrpc/lib/messageWriter.js\n// module id = 55\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst line_1 = require(\"./line\");\r\nconst util_1 = require(\"./util\");\r\nclass Comment extends line_1.Line {\r\n    constructor(document, range) {\r\n        super(document, range);\r\n    }\r\n    /**\r\n     * Returns the content of this comment. This excludes leading and\r\n     * trailing whitespace as well as the # symbol. If the comment only\r\n     * consists of whitespace, the empty string will be returned.\r\n     */\r\n    getContent() {\r\n        let range = this.getContentRange();\r\n        if (range === null) {\r\n            return \"\";\r\n        }\r\n        return this.document.getText().substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\r\n    }\r\n    /**\r\n     * Returns a range that includes the content of the comment\r\n     * excluding any leading and trailing whitespace as well as the #\r\n     * symbol. May return null if the comment only consists of whitespace\r\n     * characters.\r\n     */\r\n    getContentRange() {\r\n        let range = this.getRange();\r\n        const startOffset = this.document.offsetAt(range.start);\r\n        let raw = this.document.getText().substring(startOffset, this.document.offsetAt(range.end));\r\n        let start = -1;\r\n        let end = -1;\r\n        // skip the first # symbol\r\n        for (let i = 1; i < raw.length; i++) {\r\n            if (!util_1.Util.isWhitespace(raw.charAt(i))) {\r\n                start = i;\r\n                break;\r\n            }\r\n        }\r\n        if (start === -1) {\r\n            return null;\r\n        }\r\n        // go backwards up to the first # symbol\r\n        for (let i = raw.length - 1; i >= 1; i--) {\r\n            if (!util_1.Util.isWhitespace(raw.charAt(i))) {\r\n                end = i + 1;\r\n                break;\r\n            }\r\n        }\r\n        return vscode_languageserver_types_1.Range.create(this.document.positionAt(startOffset + start), this.document.positionAt(startOffset + end));\r\n    }\r\n}\r\nexports.Comment = Comment;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/comment.js\n// module id = 56\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Flag {\r\n    constructor(range, name, nameRange, value, valueRange) {\r\n        this.range = range;\r\n        this.name = name;\r\n        this.nameRange = nameRange;\r\n        this.value = value;\r\n        this.valueRange = valueRange;\r\n    }\r\n    toString() {\r\n        if (this.valueRange) {\r\n            return \"--\" + this.name + \"=\" + this.value;\r\n        }\r\n        return \"--\" + this.name;\r\n    }\r\n    /**\r\n     * Returns the range that encompasses this entire flag. This includes the\r\n     * -- prefix in the beginning to the last character of the flag's value (if\r\n     * it has been defined).\r\n     *\r\n     * @return the entire range of this flag\r\n     */\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    /**\r\n     * Returns the name of this flag. The name does not include the -- prefix.\r\n     * Thus, for HEALTHCHECK's --interval flag, interval is the flag's name and\r\n     * not --interval.\r\n     *\r\n     * @return this flag's name\r\n     */\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    /**\r\n     * Returns the range that encompasses the flag's name\r\n     *\r\n     * @return the range containing the flag's name\r\n     */\r\n    getNameRange() {\r\n        return this.nameRange;\r\n    }\r\n    /**\r\n     * Returns the value that has been set to this flag. May be null if the\r\n     * flag is invalid and has no value set like a --start-period. If the flag\r\n     * is instead a --start-period= with an equals sign then the flag's value\r\n     * is the empty string.\r\n     *\r\n     * @return this flag's value if it has been defined, null otherwise\r\n     */\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n    /**\r\n     * Returns the range that encompasses this flag's value. If no value has\r\n     * been set then null will be returned.\r\n     *\r\n     * @return the range containing this flag's value, or null if the flag\r\n     *         has no value defined\r\n     */\r\n    getValueRange() {\r\n        return this.valueRange;\r\n    }\r\n}\r\nexports.Flag = Flag;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/flag.js\n// module id = 57\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\r\nclass Add extends jsonInstruction_1.JSONInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    stopSearchingForFlags(argument) {\r\n        return argument.indexOf(\"--\") === -1;\r\n    }\r\n}\r\nexports.Add = Add;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/add.js\n// module id = 58\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst propertyInstruction_1 = require(\"../propertyInstruction\");\r\nconst util_1 = require(\"../util\");\r\nclass Label extends propertyInstruction_1.PropertyInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    getVariables() {\r\n        const variables = super.getVariables();\r\n        const properties = this.getProperties();\r\n        // iterate over all of this LABEL's properties\r\n        for (const property of properties) {\r\n            const value = property.getRawValue();\r\n            // check if the value is contained in single quotes,\r\n            // single quotes would indicate a literal value\r\n            if (value.length > 2 && value.charAt(0) === '\\'' && value.charAt(value.length - 1) === '\\'') {\r\n                const range = property.getValueRange();\r\n                for (let i = 0; i < variables.length; i++) {\r\n                    // if a variable is in a single quote, remove it from the list\r\n                    if (util_1.Util.isInsideRange(variables[i].getRange().start, range)) {\r\n                        variables.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n    getProperties() {\r\n        return super.getProperties();\r\n    }\r\n}\r\nexports.Label = Label;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/label.js\n// module id = 59\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\r\nclass Shell extends jsonInstruction_1.JSONInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.Shell = Shell;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/shell.js\n// module id = 60\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst instruction_1 = require(\"../instruction\");\r\nclass Stopsignal extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.Stopsignal = Stopsignal;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/stopsignal.js\n// module id = 61\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst instruction_1 = require(\"../instruction\");\r\nclass User extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.User = User;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/user.js\n// module id = 62\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\r\nclass Volume extends jsonInstruction_1.JSONInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.Volume = Volume;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/volume.js\n// module id = 63\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst instruction_1 = require(\"../instruction\");\r\nclass Workdir extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.Workdir = Workdir;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/instructions/workdir.js\n// module id = 64\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst comment_1 = require(\"./comment\");\r\nconst parserDirective_1 = require(\"./parserDirective\");\r\nconst instruction_1 = require(\"./instruction\");\r\nconst jsonInstruction_1 = require(\"./jsonInstruction\");\r\nconst add_1 = require(\"./instructions/add\");\r\nconst arg_1 = require(\"./instructions/arg\");\r\nconst cmd_1 = require(\"./instructions/cmd\");\r\nconst copy_1 = require(\"./instructions/copy\");\r\nconst env_1 = require(\"./instructions/env\");\r\nconst entrypoint_1 = require(\"./instructions/entrypoint\");\r\nconst from_1 = require(\"./instructions/from\");\r\nconst healthcheck_1 = require(\"./instructions/healthcheck\");\r\nconst label_1 = require(\"./instructions/label\");\r\nconst onbuild_1 = require(\"./instructions/onbuild\");\r\nconst shell_1 = require(\"./instructions/shell\");\r\nconst stopsignal_1 = require(\"./instructions/stopsignal\");\r\nconst workdir_1 = require(\"./instructions/workdir\");\r\nconst user_1 = require(\"./instructions/user\");\r\nconst volume_1 = require(\"./instructions/volume\");\r\nconst dockerfile_1 = require(\"./dockerfile\");\r\nconst main_1 = require(\"./main\");\r\nclass Parser {\r\n    static createInstruction(document, dockerfile, escapeChar, lineRange, instruction, instructionRange) {\r\n        switch (instruction.toUpperCase()) {\r\n            case \"ADD\":\r\n                return new add_1.Add(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"ARG\":\r\n                return new arg_1.Arg(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"CMD\":\r\n                return new cmd_1.Cmd(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"COPY\":\r\n                return new copy_1.Copy(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"ENTRYPOINT\":\r\n                return new entrypoint_1.Entrypoint(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"ENV\":\r\n                return new env_1.Env(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"FROM\":\r\n                return new from_1.From(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"HEALTHCHECK\":\r\n                return new healthcheck_1.Healthcheck(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"LABEL\":\r\n                return new label_1.Label(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"ONBUILD\":\r\n                return new onbuild_1.Onbuild(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"RUN\":\r\n                return new jsonInstruction_1.JSONInstruction(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"SHELL\":\r\n                return new shell_1.Shell(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"STOPSIGNAL\":\r\n                return new stopsignal_1.Stopsignal(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"WORKDIR\":\r\n                return new workdir_1.Workdir(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"USER\":\r\n                return new user_1.User(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"VOLUME\":\r\n                return new volume_1.Volume(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n        }\r\n        return new instruction_1.Instruction(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    getDirectiveSymbol(document, buffer) {\r\n        // reset the escape directive in between runs\r\n        this.escapeChar = '';\r\n        directiveCheck: for (let i = 0; i < buffer.length; i++) {\r\n            switch (buffer.charAt(i)) {\r\n                case ' ':\r\n                case '\\t':\r\n                    break;\r\n                case '\\r':\r\n                case '\\n':\r\n                    // parser directives must be at the top of the Dockerfile\r\n                    break directiveCheck;\r\n                case '#':\r\n                    let commentStart = i;\r\n                    let directiveStart = -1;\r\n                    let directiveEnd = -1;\r\n                    for (let j = i + 1; j < buffer.length; j++) {\r\n                        let char = buffer.charAt(j);\r\n                        switch (char) {\r\n                            case ' ':\r\n                            case '\\t':\r\n                                if (directiveStart !== -1 && directiveEnd === -1) {\r\n                                    directiveEnd = j;\r\n                                }\r\n                                break;\r\n                            case '\\r':\r\n                            case '\\n':\r\n                                return new comment_1.Comment(document, vscode_languageserver_types_1.Range.create(document.positionAt(commentStart), document.positionAt(j)));\r\n                            case '=':\r\n                                let valueStart = -1;\r\n                                let valueEnd = -1;\r\n                                if (directiveEnd === -1) {\r\n                                    directiveEnd = j;\r\n                                }\r\n                                // assume the line ends with the file\r\n                                let lineEnd = buffer.length;\r\n                                directiveValue: for (let k = j + 1; k < buffer.length; k++) {\r\n                                    char = buffer.charAt(k);\r\n                                    switch (char) {\r\n                                        case '\\r':\r\n                                        case '\\n':\r\n                                            if (valueStart !== -1 && valueEnd === -1) {\r\n                                                valueEnd = k;\r\n                                            }\r\n                                            // line break found, reset\r\n                                            lineEnd = k;\r\n                                            break directiveValue;\r\n                                        case '\\t':\r\n                                        case ' ':\r\n                                            if (valueStart !== -1 && valueEnd === -1) {\r\n                                                valueEnd = k;\r\n                                            }\r\n                                            continue;\r\n                                        default:\r\n                                            if (valueStart === -1) {\r\n                                                valueStart = k;\r\n                                            }\r\n                                            break;\r\n                                    }\r\n                                }\r\n                                let lineRange = vscode_languageserver_types_1.Range.create(document.positionAt(commentStart), document.positionAt(lineEnd));\r\n                                if (directiveStart === -1) {\r\n                                    // no directive, it's a regular comment\r\n                                    return new comment_1.Comment(document, lineRange);\r\n                                }\r\n                                if (valueStart === -1) {\r\n                                    // no non-whitespace characters found, highlight all the characters then\r\n                                    valueStart = j + 1;\r\n                                    valueEnd = lineEnd;\r\n                                }\r\n                                else if (valueEnd === -1) {\r\n                                    // reached EOF\r\n                                    valueEnd = buffer.length;\r\n                                }\r\n                                let nameRange = vscode_languageserver_types_1.Range.create(document.positionAt(directiveStart), document.positionAt(directiveEnd));\r\n                                let valueRange = vscode_languageserver_types_1.Range.create(document.positionAt(valueStart), document.positionAt(valueEnd));\r\n                                return new parserDirective_1.ParserDirective(document, lineRange, nameRange, valueRange);\r\n                            default:\r\n                                if (directiveStart === -1) {\r\n                                    directiveStart = j;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    break directiveCheck;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    parse(buffer) {\r\n        let document = vscode_languageserver_types_1.TextDocument.create(\"\", \"\", 0, buffer);\r\n        let dockerfile = new dockerfile_1.Dockerfile(document);\r\n        let line = this.getDirectiveSymbol(document, buffer);\r\n        let offset = 0;\r\n        this.escapeChar = '\\\\';\r\n        if (line instanceof parserDirective_1.ParserDirective) {\r\n            let directive = line;\r\n            dockerfile.setDirective(directive);\r\n            if (main_1.Directive.escape === directive.getDirective()) {\r\n                let value = directive.getValue();\r\n                if (value === '`' || value === '\\\\') {\r\n                    this.escapeChar = value;\r\n                }\r\n            }\r\n            offset = document.offsetAt(line.getRange().end);\r\n        }\r\n        else if (line instanceof comment_1.Comment) {\r\n            dockerfile.addComment(line);\r\n            // skip the first line\r\n            offset = document.offsetAt(vscode_languageserver_types_1.Position.create(1, 0));\r\n        }\r\n        lineCheck: for (let i = offset; i < buffer.length; i++) {\r\n            let char = buffer.charAt(i);\r\n            switch (char) {\r\n                case ' ':\r\n                case '\\t':\r\n                case '\\r':\r\n                case '\\n':\r\n                    break;\r\n                case '#':\r\n                    for (let j = i + 1; j < buffer.length; j++) {\r\n                        char = buffer.charAt(j);\r\n                        switch (char) {\r\n                            case '\\r':\r\n                                dockerfile.addComment(new comment_1.Comment(document, vscode_languageserver_types_1.Range.create(document.positionAt(i), document.positionAt(j))));\r\n                                // offset one more for \\r\\n\r\n                                i = j + 1;\r\n                                continue lineCheck;\r\n                            case '\\n':\r\n                                dockerfile.addComment(new comment_1.Comment(document, vscode_languageserver_types_1.Range.create(document.positionAt(i), document.positionAt(j))));\r\n                                i = j;\r\n                                continue lineCheck;\r\n                        }\r\n                    }\r\n                    // reached EOF\r\n                    let range = vscode_languageserver_types_1.Range.create(document.positionAt(i), document.positionAt(buffer.length));\r\n                    dockerfile.addComment(new comment_1.Comment(document, range));\r\n                    break lineCheck;\r\n                default:\r\n                    let instruction = char;\r\n                    let instructionStart = i;\r\n                    let instructionEnd = -1;\r\n                    let lineRange = null;\r\n                    let instructionRange = null;\r\n                    instructionCheck: for (let j = i + 1; j < buffer.length; j++) {\r\n                        char = buffer.charAt(j);\r\n                        switch (char) {\r\n                            case this.escapeChar:\r\n                                char = buffer.charAt(j + 1);\r\n                                if (char === '\\r') {\r\n                                    // skip two for \\r\\n\r\n                                    j += 2;\r\n                                }\r\n                                else if (char === '\\n') {\r\n                                    j++;\r\n                                }\r\n                                else if (char === ' ' || char === '\\t') {\r\n                                    for (let k = j + 2; k < buffer.length; k++) {\r\n                                        switch (buffer.charAt(k)) {\r\n                                            case ' ':\r\n                                            case '\\t':\r\n                                                break;\r\n                                            case '\\r':\r\n                                                // skip another for \\r\\n\r\n                                                j = k + 1;\r\n                                                continue instructionCheck;\r\n                                            case '\\n':\r\n                                                j = k;\r\n                                                continue instructionCheck;\r\n                                            default:\r\n                                                instructionEnd = j + 1;\r\n                                                instruction = instruction + this.escapeChar;\r\n                                                j = k - 2;\r\n                                                continue instructionCheck;\r\n                                        }\r\n                                    }\r\n                                    instructionEnd = j + 1;\r\n                                    instruction = instruction + this.escapeChar;\r\n                                    break instructionCheck;\r\n                                }\r\n                                else {\r\n                                    instructionEnd = j + 1;\r\n                                    instruction = instruction + this.escapeChar;\r\n                                }\r\n                                break;\r\n                            case ' ':\r\n                            case '\\t':\r\n                                if (instructionEnd === -1) {\r\n                                    instructionEnd = j;\r\n                                }\r\n                                let escaped = false;\r\n                                argumentsCheck: for (let k = j + 1; k < buffer.length; k++) {\r\n                                    switch (buffer.charAt(k)) {\r\n                                        case '\\r':\r\n                                        case '\\n':\r\n                                            if (escaped) {\r\n                                                continue;\r\n                                            }\r\n                                            i = k;\r\n                                            lineRange = vscode_languageserver_types_1.Range.create(document.positionAt(instructionStart), document.positionAt(k));\r\n                                            instructionRange = vscode_languageserver_types_1.Range.create(document.positionAt(instructionStart), document.positionAt(instructionEnd));\r\n                                            dockerfile.addInstruction(Parser.createInstruction(document, dockerfile, this.escapeChar, lineRange, instruction, instructionRange));\r\n                                            continue lineCheck;\r\n                                        case this.escapeChar:\r\n                                            let next = buffer.charAt(k + 1);\r\n                                            if (next === '\\n') {\r\n                                                escaped = true;\r\n                                                k++;\r\n                                            }\r\n                                            else if (next === '\\r') {\r\n                                                escaped = true;\r\n                                                // skip two chars for \\r\\n\r\n                                                k = k + 2;\r\n                                            }\r\n                                            else if (next === ' ' || next === '\\t') {\r\n                                                escapeCheck: for (let l = k + 2; l < buffer.length; l++) {\r\n                                                    switch (buffer.charAt(l)) {\r\n                                                        case ' ':\r\n                                                        case '\\t':\r\n                                                            break;\r\n                                                        case '\\r':\r\n                                                            // skip another char for \\r\\n\r\n                                                            escaped = true;\r\n                                                            k = l + 1;\r\n                                                            break escapeCheck;\r\n                                                        case '\\n':\r\n                                                            escaped = true;\r\n                                                            k = l;\r\n                                                            break escapeCheck;\r\n                                                        default:\r\n                                                            k = l;\r\n                                                            break escapeCheck;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            continue;\r\n                                        case '#':\r\n                                            if (escaped) {\r\n                                                for (let l = k + 1; l < buffer.length; l++) {\r\n                                                    switch (buffer.charAt(l)) {\r\n                                                        case '\\r':\r\n                                                            dockerfile.addComment(new comment_1.Comment(document, vscode_languageserver_types_1.Range.create(document.positionAt(k), document.positionAt(l))));\r\n                                                            // offset one more for \\r\\n\r\n                                                            k = l + 1;\r\n                                                            continue argumentsCheck;\r\n                                                        case '\\n':\r\n                                                            let range = vscode_languageserver_types_1.Range.create(document.positionAt(k), document.positionAt(l));\r\n                                                            dockerfile.addComment(new comment_1.Comment(document, range));\r\n                                                            k = l;\r\n                                                            continue argumentsCheck;\r\n                                                    }\r\n                                                }\r\n                                                let range = vscode_languageserver_types_1.Range.create(document.positionAt(k), document.positionAt(buffer.length));\r\n                                                dockerfile.addComment(new comment_1.Comment(document, range));\r\n                                                break argumentsCheck;\r\n                                            }\r\n                                            break;\r\n                                        case ' ':\r\n                                        case '\\t':\r\n                                            break;\r\n                                        default:\r\n                                            if (escaped) {\r\n                                                escaped = false;\r\n                                            }\r\n                                            break;\r\n                                    }\r\n                                }\r\n                                // reached EOF\r\n                                lineRange = vscode_languageserver_types_1.Range.create(document.positionAt(instructionStart), document.positionAt(buffer.length));\r\n                                instructionRange = vscode_languageserver_types_1.Range.create(document.positionAt(instructionStart), document.positionAt(instructionEnd));\r\n                                dockerfile.addInstruction(Parser.createInstruction(document, dockerfile, this.escapeChar, lineRange, instruction, instructionRange));\r\n                                break lineCheck;\r\n                            case '\\r':\r\n                                if (instructionEnd === -1) {\r\n                                    instructionEnd = j;\r\n                                }\r\n                                // skip for \\r\\n\r\n                                j++;\r\n                            case '\\n':\r\n                                if (instructionEnd === -1) {\r\n                                    instructionEnd = j;\r\n                                }\r\n                                lineRange = vscode_languageserver_types_1.Range.create(document.positionAt(instructionStart), document.positionAt(instructionEnd));\r\n                                dockerfile.addInstruction(Parser.createInstruction(document, dockerfile, this.escapeChar, lineRange, instruction, lineRange));\r\n                                i = j;\r\n                                continue lineCheck;\r\n                            default:\r\n                                instructionEnd = j + 1;\r\n                                instruction = instruction + char;\r\n                                break;\r\n                        }\r\n                    }\r\n                    // reached EOF\r\n                    if (instructionEnd === -1) {\r\n                        instructionEnd = buffer.length;\r\n                    }\r\n                    lineRange = vscode_languageserver_types_1.Range.create(document.positionAt(instructionStart), document.positionAt(instructionEnd));\r\n                    dockerfile.addInstruction(Parser.createInstruction(document, dockerfile, this.escapeChar, lineRange, instruction, lineRange));\r\n                    break lineCheck;\r\n            }\r\n        }\r\n        return dockerfile;\r\n    }\r\n}\r\nexports.Parser = Parser;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/parser.js\n// module id = 65\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst main_1 = require(\"./main\");\r\nconst line_1 = require(\"./line\");\r\nclass ParserDirective extends line_1.Line {\r\n    constructor(document, range, nameRange, valueRange) {\r\n        super(document, range);\r\n        this.nameRange = nameRange;\r\n        this.valueRange = valueRange;\r\n    }\r\n    getNameRange() {\r\n        return this.nameRange;\r\n    }\r\n    getValueRange() {\r\n        return this.valueRange;\r\n    }\r\n    getName() {\r\n        return this.document.getText().substring(this.document.offsetAt(this.nameRange.start), this.document.offsetAt(this.nameRange.end));\r\n    }\r\n    getValue() {\r\n        return this.document.getText().substring(this.document.offsetAt(this.valueRange.start), this.document.offsetAt(this.valueRange.end));\r\n    }\r\n    getDirective() {\r\n        return main_1.Directive[this.getName().toLowerCase()];\r\n    }\r\n}\r\nexports.ParserDirective = ParserDirective;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/parserDirective.js\n// module id = 66\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Variable {\r\n    constructor(name, nameRange, range, defined, buildVariable) {\r\n        this.name = name;\r\n        this.nameRange = nameRange;\r\n        this.range = range;\r\n        this.defined = defined;\r\n        this.buildVariable = buildVariable;\r\n    }\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    getNameRange() {\r\n        return this.nameRange;\r\n    }\r\n    /**\r\n     * Returns the range of the entire variable. This includes the symbols for\r\n     * the declaration of the variable such as the $, {, and } symbols.\r\n     *\r\n     * @return the range in the document that this variable encompasses in its\r\n     *         entirety\r\n     */\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    /**\r\n     * Returns whether this variable has been defined or not.\r\n     *\r\n     * @return true if this variable has been defined, false otherwise\r\n     */\r\n    isDefined() {\r\n        return this.buildVariable !== undefined;\r\n    }\r\n    isBuildVariable() {\r\n        return this.buildVariable === true;\r\n    }\r\n    isEnvironmentVariable() {\r\n        return this.buildVariable === false;\r\n    }\r\n}\r\nexports.Variable = Variable;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/variable.js\n// module id = 67\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst line_1 = require(\"./line\");\r\nconst util_1 = require(\"./util\");\r\nclass Comment extends line_1.Line {\r\n    constructor(document, range) {\r\n        super(document, range);\r\n    }\r\n    /**\r\n     * Returns the content of this comment. This excludes leading and\r\n     * trailing whitespace as well as the # symbol. If the comment only\r\n     * consists of whitespace, the empty string will be returned.\r\n     */\r\n    getContent() {\r\n        let range = this.getContentRange();\r\n        if (range === null) {\r\n            return \"\";\r\n        }\r\n        return this.document.getText().substring(this.document.offsetAt(range.start), this.document.offsetAt(range.end));\r\n    }\r\n    /**\r\n     * Returns a range that includes the content of the comment\r\n     * excluding any leading and trailing whitespace as well as the #\r\n     * symbol. May return null if the comment only consists of whitespace\r\n     * characters.\r\n     */\r\n    getContentRange() {\r\n        let range = this.getRange();\r\n        const startOffset = this.document.offsetAt(range.start);\r\n        let raw = this.document.getText().substring(startOffset, this.document.offsetAt(range.end));\r\n        let start = -1;\r\n        let end = -1;\r\n        // skip the first # symbol\r\n        for (let i = 1; i < raw.length; i++) {\r\n            if (!util_1.Util.isWhitespace(raw.charAt(i))) {\r\n                start = i;\r\n                break;\r\n            }\r\n        }\r\n        if (start === -1) {\r\n            return null;\r\n        }\r\n        // go backwards up to the first # symbol\r\n        for (let i = raw.length - 1; i >= 1; i--) {\r\n            if (!util_1.Util.isWhitespace(raw.charAt(i))) {\r\n                end = i + 1;\r\n                break;\r\n            }\r\n        }\r\n        return vscode_languageserver_types_1.Range.create(this.document.positionAt(startOffset + start), this.document.positionAt(startOffset + end));\r\n    }\r\n}\r\nexports.Comment = Comment;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/comment.js\n// module id = 68\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Flag {\r\n    constructor(range, name, nameRange, value, valueRange) {\r\n        this.range = range;\r\n        this.name = name;\r\n        this.nameRange = nameRange;\r\n        this.value = value;\r\n        this.valueRange = valueRange;\r\n    }\r\n    toString() {\r\n        if (this.valueRange) {\r\n            return \"--\" + this.name + \"=\" + this.value;\r\n        }\r\n        return \"--\" + this.name;\r\n    }\r\n    /**\r\n     * Returns the range that encompasses this entire flag. This includes the\r\n     * -- prefix in the beginning to the last character of the flag's value (if\r\n     * it has been defined).\r\n     *\r\n     * @return the entire range of this flag\r\n     */\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    /**\r\n     * Returns the name of this flag. The name does not include the -- prefix.\r\n     * Thus, for HEALTHCHECK's --interval flag, interval is the flag's name and\r\n     * not --interval.\r\n     *\r\n     * @return this flag's name\r\n     */\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    /**\r\n     * Returns the range that encompasses the flag's name\r\n     *\r\n     * @return the range containing the flag's name\r\n     */\r\n    getNameRange() {\r\n        return this.nameRange;\r\n    }\r\n    /**\r\n     * Returns the value that has been set to this flag. May be null if the\r\n     * flag is invalid and has no value set like a --start-period. If the flag\r\n     * is instead a --start-period= with an equals sign then the flag's value\r\n     * is the empty string.\r\n     *\r\n     * @return this flag's value if it has been defined, null otherwise\r\n     */\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n    /**\r\n     * Returns the range that encompasses this flag's value. If no value has\r\n     * been set then null will be returned.\r\n     *\r\n     * @return the range containing this flag's value, or null if the flag\r\n     *         has no value defined\r\n     */\r\n    getValueRange() {\r\n        return this.valueRange;\r\n    }\r\n}\r\nexports.Flag = Flag;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/flag.js\n// module id = 69\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\r\nclass Add extends jsonInstruction_1.JSONInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    stopSearchingForFlags(argument) {\r\n        return argument.indexOf(\"--\") === -1;\r\n    }\r\n}\r\nexports.Add = Add;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/add.js\n// module id = 70\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst propertyInstruction_1 = require(\"../propertyInstruction\");\r\nconst util_1 = require(\"../util\");\r\nclass Label extends propertyInstruction_1.PropertyInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    getVariables() {\r\n        const variables = super.getVariables();\r\n        const properties = this.getProperties();\r\n        // iterate over all of this LABEL's properties\r\n        for (const property of properties) {\r\n            const value = property.getRawValue();\r\n            // check if the value is contained in single quotes,\r\n            // single quotes would indicate a literal value\r\n            if (value.length > 2 && value.charAt(0) === '\\'' && value.charAt(value.length - 1) === '\\'') {\r\n                const range = property.getValueRange();\r\n                for (let i = 0; i < variables.length; i++) {\r\n                    // if a variable is in a single quote, remove it from the list\r\n                    if (util_1.Util.isInsideRange(variables[i].getRange().start, range)) {\r\n                        variables.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n    getProperties() {\r\n        return super.getProperties();\r\n    }\r\n}\r\nexports.Label = Label;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/label.js\n// module id = 71\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\r\nclass Shell extends jsonInstruction_1.JSONInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.Shell = Shell;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/shell.js\n// module id = 72\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst instruction_1 = require(\"../instruction\");\r\nclass Stopsignal extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.Stopsignal = Stopsignal;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/stopsignal.js\n// module id = 73\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst instruction_1 = require(\"../instruction\");\r\nclass User extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.User = User;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/user.js\n// module id = 74\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst jsonInstruction_1 = require(\"../jsonInstruction\");\r\nclass Volume extends jsonInstruction_1.JSONInstruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.Volume = Volume;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/volume.js\n// module id = 75\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst instruction_1 = require(\"../instruction\");\r\nclass Workdir extends instruction_1.Instruction {\r\n    constructor(document, range, dockerfile, escapeChar, instruction, instructionRange) {\r\n        super(document, range, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n}\r\nexports.Workdir = Workdir;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/instructions/workdir.js\n// module id = 76\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst comment_1 = require(\"./comment\");\r\nconst parserDirective_1 = require(\"./parserDirective\");\r\nconst instruction_1 = require(\"./instruction\");\r\nconst jsonInstruction_1 = require(\"./jsonInstruction\");\r\nconst add_1 = require(\"./instructions/add\");\r\nconst arg_1 = require(\"./instructions/arg\");\r\nconst cmd_1 = require(\"./instructions/cmd\");\r\nconst copy_1 = require(\"./instructions/copy\");\r\nconst env_1 = require(\"./instructions/env\");\r\nconst entrypoint_1 = require(\"./instructions/entrypoint\");\r\nconst from_1 = require(\"./instructions/from\");\r\nconst healthcheck_1 = require(\"./instructions/healthcheck\");\r\nconst label_1 = require(\"./instructions/label\");\r\nconst onbuild_1 = require(\"./instructions/onbuild\");\r\nconst shell_1 = require(\"./instructions/shell\");\r\nconst stopsignal_1 = require(\"./instructions/stopsignal\");\r\nconst workdir_1 = require(\"./instructions/workdir\");\r\nconst user_1 = require(\"./instructions/user\");\r\nconst volume_1 = require(\"./instructions/volume\");\r\nconst dockerfile_1 = require(\"./dockerfile\");\r\nconst main_1 = require(\"./main\");\r\nclass Parser {\r\n    static createInstruction(document, dockerfile, escapeChar, lineRange, instruction, instructionRange) {\r\n        switch (instruction.toUpperCase()) {\r\n            case \"ADD\":\r\n                return new add_1.Add(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"ARG\":\r\n                return new arg_1.Arg(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"CMD\":\r\n                return new cmd_1.Cmd(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"COPY\":\r\n                return new copy_1.Copy(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"ENTRYPOINT\":\r\n                return new entrypoint_1.Entrypoint(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"ENV\":\r\n                return new env_1.Env(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"FROM\":\r\n                return new from_1.From(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"HEALTHCHECK\":\r\n                return new healthcheck_1.Healthcheck(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"LABEL\":\r\n                return new label_1.Label(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"ONBUILD\":\r\n                return new onbuild_1.Onbuild(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"RUN\":\r\n                return new jsonInstruction_1.JSONInstruction(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"SHELL\":\r\n                return new shell_1.Shell(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"STOPSIGNAL\":\r\n                return new stopsignal_1.Stopsignal(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"WORKDIR\":\r\n                return new workdir_1.Workdir(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"USER\":\r\n                return new user_1.User(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n            case \"VOLUME\":\r\n                return new volume_1.Volume(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n        }\r\n        return new instruction_1.Instruction(document, lineRange, dockerfile, escapeChar, instruction, instructionRange);\r\n    }\r\n    getDirectiveSymbol(document, buffer) {\r\n        // reset the escape directive in between runs\r\n        this.escapeChar = '';\r\n        directiveCheck: for (let i = 0; i < buffer.length; i++) {\r\n            switch (buffer.charAt(i)) {\r\n                case ' ':\r\n                case '\\t':\r\n                    break;\r\n                case '\\r':\r\n                case '\\n':\r\n                    // parser directives must be at the top of the Dockerfile\r\n                    break directiveCheck;\r\n                case '#':\r\n                    let commentStart = i;\r\n                    let directiveStart = -1;\r\n                    let directiveEnd = -1;\r\n                    for (let j = i + 1; j < buffer.length; j++) {\r\n                        let char = buffer.charAt(j);\r\n                        switch (char) {\r\n                            case ' ':\r\n                            case '\\t':\r\n                                if (directiveStart !== -1 && directiveEnd === -1) {\r\n                                    directiveEnd = j;\r\n                                }\r\n                                break;\r\n                            case '\\r':\r\n                            case '\\n':\r\n                                return new comment_1.Comment(document, vscode_languageserver_types_1.Range.create(document.positionAt(commentStart), document.positionAt(j)));\r\n                            case '=':\r\n                                let valueStart = -1;\r\n                                let valueEnd = -1;\r\n                                if (directiveEnd === -1) {\r\n                                    directiveEnd = j;\r\n                                }\r\n                                // assume the line ends with the file\r\n                                let lineEnd = buffer.length;\r\n                                directiveValue: for (let k = j + 1; k < buffer.length; k++) {\r\n                                    char = buffer.charAt(k);\r\n                                    switch (char) {\r\n                                        case '\\r':\r\n                                        case '\\n':\r\n                                            if (valueStart !== -1 && valueEnd === -1) {\r\n                                                valueEnd = k;\r\n                                            }\r\n                                            // line break found, reset\r\n                                            lineEnd = k;\r\n                                            break directiveValue;\r\n                                        case '\\t':\r\n                                        case ' ':\r\n                                            if (valueStart !== -1 && valueEnd === -1) {\r\n                                                valueEnd = k;\r\n                                            }\r\n                                            continue;\r\n                                        default:\r\n                                            if (valueStart === -1) {\r\n                                                valueStart = k;\r\n                                            }\r\n                                            break;\r\n                                    }\r\n                                }\r\n                                let lineRange = vscode_languageserver_types_1.Range.create(document.positionAt(commentStart), document.positionAt(lineEnd));\r\n                                if (directiveStart === -1) {\r\n                                    // no directive, it's a regular comment\r\n                                    return new comment_1.Comment(document, lineRange);\r\n                                }\r\n                                if (valueStart === -1) {\r\n                                    // no non-whitespace characters found, highlight all the characters then\r\n                                    valueStart = j + 1;\r\n                                    valueEnd = lineEnd;\r\n                                }\r\n                                else if (valueEnd === -1) {\r\n                                    // reached EOF\r\n                                    valueEnd = buffer.length;\r\n                                }\r\n                                let nameRange = vscode_languageserver_types_1.Range.create(document.positionAt(directiveStart), document.positionAt(directiveEnd));\r\n                                let valueRange = vscode_languageserver_types_1.Range.create(document.positionAt(valueStart), document.positionAt(valueEnd));\r\n                                return new parserDirective_1.ParserDirective(document, lineRange, nameRange, valueRange);\r\n                            default:\r\n                                if (directiveStart === -1) {\r\n                                    directiveStart = j;\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    break directiveCheck;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    parse(buffer) {\r\n        let document = vscode_languageserver_types_1.TextDocument.create(\"\", \"\", 0, buffer);\r\n        let dockerfile = new dockerfile_1.Dockerfile(document);\r\n        let line = this.getDirectiveSymbol(document, buffer);\r\n        let offset = 0;\r\n        this.escapeChar = '\\\\';\r\n        if (line instanceof parserDirective_1.ParserDirective) {\r\n            let directive = line;\r\n            dockerfile.setDirective(directive);\r\n            if (main_1.Directive.escape === directive.getDirective()) {\r\n                let value = directive.getValue();\r\n                if (value === '`' || value === '\\\\') {\r\n                    this.escapeChar = value;\r\n                }\r\n            }\r\n            offset = document.offsetAt(line.getRange().end);\r\n        }\r\n        else if (line instanceof comment_1.Comment) {\r\n            dockerfile.addComment(line);\r\n            // skip the first line\r\n            offset = document.offsetAt(vscode_languageserver_types_1.Position.create(1, 0));\r\n        }\r\n        lineCheck: for (let i = offset; i < buffer.length; i++) {\r\n            let char = buffer.charAt(i);\r\n            switch (char) {\r\n                case ' ':\r\n                case '\\t':\r\n                case '\\r':\r\n                case '\\n':\r\n                    break;\r\n                case '#':\r\n                    for (let j = i + 1; j < buffer.length; j++) {\r\n                        char = buffer.charAt(j);\r\n                        switch (char) {\r\n                            case '\\r':\r\n                                dockerfile.addComment(new comment_1.Comment(document, vscode_languageserver_types_1.Range.create(document.positionAt(i), document.positionAt(j))));\r\n                                // offset one more for \\r\\n\r\n                                i = j + 1;\r\n                                continue lineCheck;\r\n                            case '\\n':\r\n                                dockerfile.addComment(new comment_1.Comment(document, vscode_languageserver_types_1.Range.create(document.positionAt(i), document.positionAt(j))));\r\n                                i = j;\r\n                                continue lineCheck;\r\n                        }\r\n                    }\r\n                    // reached EOF\r\n                    let range = vscode_languageserver_types_1.Range.create(document.positionAt(i), document.positionAt(buffer.length));\r\n                    dockerfile.addComment(new comment_1.Comment(document, range));\r\n                    break lineCheck;\r\n                default:\r\n                    let instruction = char;\r\n                    let instructionStart = i;\r\n                    let instructionEnd = -1;\r\n                    let lineRange = null;\r\n                    let instructionRange = null;\r\n                    instructionCheck: for (let j = i + 1; j < buffer.length; j++) {\r\n                        char = buffer.charAt(j);\r\n                        switch (char) {\r\n                            case this.escapeChar:\r\n                                char = buffer.charAt(j + 1);\r\n                                if (char === '\\r') {\r\n                                    // skip two for \\r\\n\r\n                                    j += 2;\r\n                                }\r\n                                else if (char === '\\n') {\r\n                                    j++;\r\n                                }\r\n                                else if (char === ' ' || char === '\\t') {\r\n                                    for (let k = j + 2; k < buffer.length; k++) {\r\n                                        switch (buffer.charAt(k)) {\r\n                                            case ' ':\r\n                                            case '\\t':\r\n                                                break;\r\n                                            case '\\r':\r\n                                                // skip another for \\r\\n\r\n                                                j = k + 1;\r\n                                                continue instructionCheck;\r\n                                            case '\\n':\r\n                                                j = k;\r\n                                                continue instructionCheck;\r\n                                            default:\r\n                                                instructionEnd = j + 1;\r\n                                                instruction = instruction + this.escapeChar;\r\n                                                j = k - 2;\r\n                                                continue instructionCheck;\r\n                                        }\r\n                                    }\r\n                                    instructionEnd = j + 1;\r\n                                    instruction = instruction + this.escapeChar;\r\n                                    break instructionCheck;\r\n                                }\r\n                                else {\r\n                                    instructionEnd = j + 1;\r\n                                    instruction = instruction + this.escapeChar;\r\n                                }\r\n                                break;\r\n                            case ' ':\r\n                            case '\\t':\r\n                                if (instructionEnd === -1) {\r\n                                    instructionEnd = j;\r\n                                }\r\n                                let escaped = false;\r\n                                argumentsCheck: for (let k = j + 1; k < buffer.length; k++) {\r\n                                    switch (buffer.charAt(k)) {\r\n                                        case '\\r':\r\n                                        case '\\n':\r\n                                            if (escaped) {\r\n                                                continue;\r\n                                            }\r\n                                            i = k;\r\n                                            lineRange = vscode_languageserver_types_1.Range.create(document.positionAt(instructionStart), document.positionAt(k));\r\n                                            instructionRange = vscode_languageserver_types_1.Range.create(document.positionAt(instructionStart), document.positionAt(instructionEnd));\r\n                                            dockerfile.addInstruction(Parser.createInstruction(document, dockerfile, this.escapeChar, lineRange, instruction, instructionRange));\r\n                                            continue lineCheck;\r\n                                        case this.escapeChar:\r\n                                            let next = buffer.charAt(k + 1);\r\n                                            if (next === '\\n') {\r\n                                                escaped = true;\r\n                                                k++;\r\n                                            }\r\n                                            else if (next === '\\r') {\r\n                                                escaped = true;\r\n                                                // skip two chars for \\r\\n\r\n                                                k = k + 2;\r\n                                            }\r\n                                            else if (next === ' ' || next === '\\t') {\r\n                                                escapeCheck: for (let l = k + 2; l < buffer.length; l++) {\r\n                                                    switch (buffer.charAt(l)) {\r\n                                                        case ' ':\r\n                                                        case '\\t':\r\n                                                            break;\r\n                                                        case '\\r':\r\n                                                            // skip another char for \\r\\n\r\n                                                            escaped = true;\r\n                                                            k = l + 1;\r\n                                                            break escapeCheck;\r\n                                                        case '\\n':\r\n                                                            escaped = true;\r\n                                                            k = l;\r\n                                                            break escapeCheck;\r\n                                                        default:\r\n                                                            k = l;\r\n                                                            break escapeCheck;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            continue;\r\n                                        case '#':\r\n                                            if (escaped) {\r\n                                                for (let l = k + 1; l < buffer.length; l++) {\r\n                                                    switch (buffer.charAt(l)) {\r\n                                                        case '\\r':\r\n                                                            dockerfile.addComment(new comment_1.Comment(document, vscode_languageserver_types_1.Range.create(document.positionAt(k), document.positionAt(l))));\r\n                                                            // offset one more for \\r\\n\r\n                                                            k = l + 1;\r\n                                                            continue argumentsCheck;\r\n                                                        case '\\n':\r\n                                                            let range = vscode_languageserver_types_1.Range.create(document.positionAt(k), document.positionAt(l));\r\n                                                            dockerfile.addComment(new comment_1.Comment(document, range));\r\n                                                            k = l;\r\n                                                            continue argumentsCheck;\r\n                                                    }\r\n                                                }\r\n                                                let range = vscode_languageserver_types_1.Range.create(document.positionAt(k), document.positionAt(buffer.length));\r\n                                                dockerfile.addComment(new comment_1.Comment(document, range));\r\n                                                break argumentsCheck;\r\n                                            }\r\n                                            break;\r\n                                        case ' ':\r\n                                        case '\\t':\r\n                                            break;\r\n                                        default:\r\n                                            if (escaped) {\r\n                                                escaped = false;\r\n                                            }\r\n                                            break;\r\n                                    }\r\n                                }\r\n                                // reached EOF\r\n                                lineRange = vscode_languageserver_types_1.Range.create(document.positionAt(instructionStart), document.positionAt(buffer.length));\r\n                                instructionRange = vscode_languageserver_types_1.Range.create(document.positionAt(instructionStart), document.positionAt(instructionEnd));\r\n                                dockerfile.addInstruction(Parser.createInstruction(document, dockerfile, this.escapeChar, lineRange, instruction, instructionRange));\r\n                                break lineCheck;\r\n                            case '\\r':\r\n                                if (instructionEnd === -1) {\r\n                                    instructionEnd = j;\r\n                                }\r\n                                // skip for \\r\\n\r\n                                j++;\r\n                            case '\\n':\r\n                                if (instructionEnd === -1) {\r\n                                    instructionEnd = j;\r\n                                }\r\n                                lineRange = vscode_languageserver_types_1.Range.create(document.positionAt(instructionStart), document.positionAt(instructionEnd));\r\n                                dockerfile.addInstruction(Parser.createInstruction(document, dockerfile, this.escapeChar, lineRange, instruction, lineRange));\r\n                                i = j;\r\n                                continue lineCheck;\r\n                            default:\r\n                                instructionEnd = j + 1;\r\n                                instruction = instruction + char;\r\n                                break;\r\n                        }\r\n                    }\r\n                    // reached EOF\r\n                    if (instructionEnd === -1) {\r\n                        instructionEnd = buffer.length;\r\n                    }\r\n                    lineRange = vscode_languageserver_types_1.Range.create(document.positionAt(instructionStart), document.positionAt(instructionEnd));\r\n                    dockerfile.addInstruction(Parser.createInstruction(document, dockerfile, this.escapeChar, lineRange, instruction, lineRange));\r\n                    break lineCheck;\r\n            }\r\n        }\r\n        return dockerfile;\r\n    }\r\n}\r\nexports.Parser = Parser;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/parser.js\n// module id = 77\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst main_1 = require(\"./main\");\r\nconst line_1 = require(\"./line\");\r\nclass ParserDirective extends line_1.Line {\r\n    constructor(document, range, nameRange, valueRange) {\r\n        super(document, range);\r\n        this.nameRange = nameRange;\r\n        this.valueRange = valueRange;\r\n    }\r\n    getNameRange() {\r\n        return this.nameRange;\r\n    }\r\n    getValueRange() {\r\n        return this.valueRange;\r\n    }\r\n    getName() {\r\n        return this.document.getText().substring(this.document.offsetAt(this.nameRange.start), this.document.offsetAt(this.nameRange.end));\r\n    }\r\n    getValue() {\r\n        return this.document.getText().substring(this.document.offsetAt(this.valueRange.start), this.document.offsetAt(this.valueRange.end));\r\n    }\r\n    getDirective() {\r\n        return main_1.Directive[this.getName().toLowerCase()];\r\n    }\r\n}\r\nexports.ParserDirective = ParserDirective;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/parserDirective.js\n// module id = 78\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Variable {\r\n    constructor(name, nameRange, range, defined, buildVariable) {\r\n        this.name = name;\r\n        this.nameRange = nameRange;\r\n        this.range = range;\r\n        this.defined = defined;\r\n        this.buildVariable = buildVariable;\r\n    }\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    getNameRange() {\r\n        return this.nameRange;\r\n    }\r\n    /**\r\n     * Returns the range of the entire variable. This includes the symbols for\r\n     * the declaration of the variable such as the $, {, and } symbols.\r\n     *\r\n     * @return the range in the document that this variable encompasses in its\r\n     *         entirety\r\n     */\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    /**\r\n     * Returns whether this variable has been defined or not.\r\n     *\r\n     * @return true if this variable has been defined, false otherwise\r\n     */\r\n    isDefined() {\r\n        return this.buildVariable !== undefined;\r\n    }\r\n    isBuildVariable() {\r\n        return this.buildVariable === true;\r\n    }\r\n    isEnvironmentVariable() {\r\n        return this.buildVariable === false;\r\n    }\r\n}\r\nexports.Variable = Variable;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/variable.js\n// module id = 79\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 80\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 81\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MonacoCommands = /** @class */ (function () {\n    function MonacoCommands(editor) {\n        this.editor = editor;\n    }\n    MonacoCommands.prototype.registerCommand = function (command, callback, thisArg) {\n        return this.editor._commandService.addCommand(command, {\n            handler: function (_accessor) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                return callback.apply(void 0, args);\n            }\n        });\n    };\n    return MonacoCommands;\n}());\nexports.MonacoCommands = MonacoCommands;\n//# sourceMappingURL=commands.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/monaco-languageclient/lib/commands.js\n// module id = 82\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2017 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar protocol_1 = require(\"vscode-base-languageclient/lib/protocol\");\nvar ConsoleWindow = /** @class */ (function () {\n    function ConsoleWindow() {\n        this.channels = new Map();\n    }\n    ConsoleWindow.prototype.showMessage = function (type, message) {\n        var actions = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            actions[_i - 2] = arguments[_i];\n        }\n        if (type === protocol_1.MessageType.Error) {\n            console.error(message);\n        }\n        if (type === protocol_1.MessageType.Warning) {\n            console.warn(message);\n        }\n        if (type === protocol_1.MessageType.Info) {\n            console.info(message);\n        }\n        if (type === protocol_1.MessageType.Log) {\n            console.log(message);\n        }\n        return Promise.resolve(undefined);\n    };\n    ConsoleWindow.prototype.createOutputChannel = function (name) {\n        var existing = this.channels.get(name);\n        if (existing) {\n            return existing;\n        }\n        var channel = {\n            append: function (value) {\n                console.log(name + ': ' + value);\n            },\n            appendLine: function (line) {\n                console.log(name + ': ' + line);\n            },\n            show: function () {\n                // no-op\n            }\n        };\n        this.channels.set(name, channel);\n        return channel;\n    };\n    return ConsoleWindow;\n}());\nexports.ConsoleWindow = ConsoleWindow;\n//# sourceMappingURL=console-window.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/monaco-languageclient/lib/console-window.js\n// module id = 83\n// module chunks = 0","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2017 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar is = require(\"vscode-base-languageclient/lib/utils/is\");\nvar base_1 = require(\"vscode-base-languageclient/lib/base\");\nvar ProtocolCodeLens;\n(function (ProtocolCodeLens) {\n    function is(item) {\n        return !!item && 'data' in item;\n    }\n    ProtocolCodeLens.is = is;\n})(ProtocolCodeLens = exports.ProtocolCodeLens || (exports.ProtocolCodeLens = {}));\nvar ProtocolCompletionItem;\n(function (ProtocolCompletionItem) {\n    function is(item) {\n        return !!item && 'data' in item;\n    }\n    ProtocolCompletionItem.is = is;\n})(ProtocolCompletionItem = exports.ProtocolCompletionItem || (exports.ProtocolCompletionItem = {}));\nvar MonacoToProtocolConverter = /** @class */ (function () {\n    function MonacoToProtocolConverter() {\n    }\n    MonacoToProtocolConverter.prototype.asPosition = function (lineNumber, column) {\n        var line = lineNumber === undefined || lineNumber === null ? undefined : lineNumber - 1;\n        var character = column === undefined || column === null ? undefined : column - 1;\n        return {\n            line: line, character: character\n        };\n    };\n    MonacoToProtocolConverter.prototype.asRange = function (range) {\n        if (range === undefined) {\n            return undefined;\n        }\n        if (range === null) {\n            return null;\n        }\n        var start = this.asPosition(range.startLineNumber, range.startColumn);\n        var end = this.asPosition(range.endLineNumber, range.endColumn);\n        return {\n            start: start, end: end\n        };\n    };\n    MonacoToProtocolConverter.prototype.asTextDocumentIdentifier = function (model) {\n        return {\n            uri: model.uri.toString()\n        };\n    };\n    MonacoToProtocolConverter.prototype.asTextDocumentPositionParams = function (model, position) {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            position: this.asPosition(position.lineNumber, position.column)\n        };\n    };\n    MonacoToProtocolConverter.prototype.asCompletionItem = function (item) {\n        var result = { label: item.label };\n        if (item.detail) {\n            result.detail = item.detail;\n        }\n        if (item.documentation) {\n            result.documentation = item.documentation;\n        }\n        if (item.filterText) {\n            result.filterText = item.filterText;\n        }\n        this.fillPrimaryInsertText(result, item);\n        // Protocol item kind is 1 based, codes item kind is zero based.\n        if (is.number(item.kind)) {\n            if (monaco.languages.CompletionItemKind.Text <= item.kind && item.kind <= monaco.languages.CompletionItemKind.Reference) {\n                result.kind = (item.kind + 1);\n            }\n            else {\n                result.kind = base_1.CompletionItemKind.Text;\n            }\n        }\n        if (item.sortText) {\n            result.sortText = item.sortText;\n        }\n        // TODO: if (item.additionalTextEdits) { result.additionalTextEdits = asTextEdits(item.additionalTextEdits); }\n        // TODO: if (item.command) { result.command = asCommand(item.command); }\n        if (ProtocolCompletionItem.is(item)) {\n            result.data = item.data;\n        }\n        return result;\n    };\n    MonacoToProtocolConverter.prototype.fillPrimaryInsertText = function (target, source) {\n        var format = base_1.InsertTextFormat.PlainText;\n        var text;\n        var range;\n        if (source.textEdit) {\n            text = source.textEdit.text;\n            range = this.asRange(source.textEdit.range);\n        }\n        else if (typeof source.insertText === 'string') {\n            text = source.insertText;\n        }\n        else if (source.insertText) {\n            format = base_1.InsertTextFormat.Snippet;\n            text = source.insertText.value;\n        }\n        if (source.range) {\n            range = this.asRange(source.range);\n        }\n        target.insertTextFormat = format;\n        if (source.fromEdit && text && range) {\n            target.textEdit = { newText: text, range: range };\n        }\n        else {\n            target.insertText = text;\n        }\n    };\n    MonacoToProtocolConverter.prototype.asReferenceParams = function (model, position, options) {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            position: this.asPosition(position.lineNumber, position.column),\n            context: { includeDeclaration: options.includeDeclaration }\n        };\n    };\n    MonacoToProtocolConverter.prototype.asDocumentSymbolParams = function (model) {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model)\n        };\n    };\n    MonacoToProtocolConverter.prototype.asCodeLensParams = function (model) {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model)\n        };\n    };\n    MonacoToProtocolConverter.prototype.asDiagnosticSeverity = function (value) {\n        switch (value) {\n            case monaco.Severity.Error:\n                return base_1.DiagnosticSeverity.Error;\n            case monaco.Severity.Warning:\n                return base_1.DiagnosticSeverity.Warning;\n            case monaco.Severity.Info:\n                return base_1.DiagnosticSeverity.Information;\n        }\n        return undefined;\n    };\n    MonacoToProtocolConverter.prototype.asDiagnostic = function (marker) {\n        var range = this.asRange(new monaco.Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn));\n        var severity = this.asDiagnosticSeverity(marker.severity);\n        return base_1.Diagnostic.create(range, marker.message, severity, marker.code, marker.source);\n    };\n    MonacoToProtocolConverter.prototype.asDiagnostics = function (markers) {\n        var _this = this;\n        if (markers === void 0 || markers === null) {\n            return markers;\n        }\n        return markers.map(function (marker) { return _this.asDiagnostic(marker); });\n    };\n    MonacoToProtocolConverter.prototype.asCodeActionContext = function (context) {\n        if (context === void 0 || context === null) {\n            return context;\n        }\n        var diagnostics = this.asDiagnostics(context.markers);\n        return {\n            diagnostics: diagnostics\n        };\n    };\n    MonacoToProtocolConverter.prototype.asCodeActionParams = function (model, range, context) {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            range: this.asRange(range),\n            context: this.asCodeActionContext(context)\n        };\n    };\n    MonacoToProtocolConverter.prototype.asCommand = function (item) {\n        if (item) {\n            var args = item.arguments || [];\n            return base_1.Command.create.apply(base_1.Command, [item.title, item.id].concat(args));\n        }\n        return undefined;\n    };\n    MonacoToProtocolConverter.prototype.asCodeLens = function (item) {\n        var range = this.asRange(item.range);\n        var data = ProtocolCodeLens.is(item) ? item.data : undefined;\n        var command = this.asCommand(item.command);\n        return {\n            range: range, data: data, command: command\n        };\n    };\n    MonacoToProtocolConverter.prototype.asFormattingOptions = function (options) {\n        return { tabSize: options.tabSize, insertSpaces: options.insertSpaces };\n    };\n    MonacoToProtocolConverter.prototype.asDocumentFormattingParams = function (model, options) {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            options: this.asFormattingOptions(options)\n        };\n    };\n    MonacoToProtocolConverter.prototype.asDocumentRangeFormattingParams = function (model, range, options) {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            range: this.asRange(range),\n            options: this.asFormattingOptions(options)\n        };\n    };\n    MonacoToProtocolConverter.prototype.asDocumentOnTypeFormattingParams = function (model, position, ch, options) {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            position: this.asPosition(position.lineNumber, position.column),\n            ch: ch,\n            options: this.asFormattingOptions(options)\n        };\n    };\n    MonacoToProtocolConverter.prototype.asRenameParams = function (model, position, newName) {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            position: this.asPosition(position.lineNumber, position.column),\n            newName: newName\n        };\n    };\n    MonacoToProtocolConverter.prototype.asDocumentLinkParams = function (model) {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model)\n        };\n    };\n    MonacoToProtocolConverter.prototype.asDocumentLink = function (link) {\n        return {\n            range: this.asRange(link.range),\n            target: link.url\n        };\n    };\n    return MonacoToProtocolConverter;\n}());\nexports.MonacoToProtocolConverter = MonacoToProtocolConverter;\nvar ProtocolToMonacoConverter = /** @class */ (function () {\n    function ProtocolToMonacoConverter() {\n    }\n    ProtocolToMonacoConverter.prototype.asResourceEdits = function (resource, edits) {\n        var _this = this;\n        return edits.map(function (edit) {\n            var range = _this.asRange(edit.range);\n            return {\n                resource: resource,\n                range: range,\n                newText: edit.newText\n            };\n        });\n    };\n    ProtocolToMonacoConverter.prototype.asWorkspaceEdit = function (item) {\n        if (!item) {\n            return undefined;\n        }\n        var edits = [];\n        if (item.documentChanges) {\n            for (var _i = 0, _a = item.documentChanges; _i < _a.length; _i++) {\n                var change = _a[_i];\n                var resource = monaco.Uri.parse(change.textDocument.uri);\n                edits.push.apply(edits, this.asResourceEdits(resource, change.edits));\n            }\n        }\n        else if (item.changes) {\n            for (var _b = 0, _c = Object.keys(item.changes); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var resource = monaco.Uri.parse(key);\n                edits.push.apply(edits, this.asResourceEdits(resource, item.changes[key]));\n            }\n        }\n        return {\n            edits: edits\n        };\n    };\n    ProtocolToMonacoConverter.prototype.asTextEdit = function (edit) {\n        var range = this.asRange(edit.range);\n        return {\n            range: range,\n            text: edit.newText\n        };\n    };\n    ProtocolToMonacoConverter.prototype.asTextEdits = function (items) {\n        var _this = this;\n        if (!items) {\n            return undefined;\n        }\n        return items.map(function (item) { return _this.asTextEdit(item); });\n    };\n    ProtocolToMonacoConverter.prototype.asCodeLens = function (item) {\n        if (!item) {\n            return undefined;\n        }\n        var range = this.asRange(item.range);\n        var result = { range: range };\n        if (item.command) {\n            result.command = this.asCommand(item.command);\n        }\n        if (item.data !== void 0 && item.data !== null) {\n            result.data = item.data;\n        }\n        return result;\n    };\n    ProtocolToMonacoConverter.prototype.asCodeLenses = function (items) {\n        var _this = this;\n        if (!items) {\n            return undefined;\n        }\n        return items.map(function (codeLens) { return _this.asCodeLens(codeLens); });\n    };\n    ProtocolToMonacoConverter.prototype.asCommand = function (command) {\n        return {\n            id: command.command,\n            title: command.title,\n            arguments: command.arguments\n        };\n    };\n    ProtocolToMonacoConverter.prototype.asCommands = function (commands) {\n        var _this = this;\n        return commands.map(function (command) { return _this.asCommand(command); });\n    };\n    ProtocolToMonacoConverter.prototype.asSymbolInformations = function (values, uri) {\n        var _this = this;\n        if (!values) {\n            return undefined;\n        }\n        return values.map(function (information) { return _this.asSymbolInformation(information, uri); });\n    };\n    ProtocolToMonacoConverter.prototype.asSymbolInformation = function (item, uri) {\n        // Symbol kind is one based in the protocol and zero based in code.\n        return {\n            name: item.name,\n            containerName: item.containerName,\n            kind: item.kind - 1,\n            location: this.asLocation(uri ? __assign({}, item.location, { uri: uri.toString() }) : item.location)\n        };\n    };\n    ProtocolToMonacoConverter.prototype.asDocumentHighlights = function (values) {\n        var _this = this;\n        if (!values) {\n            return undefined;\n        }\n        return values.map(function (item) { return _this.asDocumentHighlight(item); });\n    };\n    ProtocolToMonacoConverter.prototype.asDocumentHighlight = function (item) {\n        var range = this.asRange(item.range);\n        var kind = is.number(item.kind) ? this.asDocumentHighlightKind(item.kind) : undefined;\n        return { range: range, kind: kind };\n    };\n    ProtocolToMonacoConverter.prototype.asDocumentHighlightKind = function (item) {\n        switch (item) {\n            case base_1.DocumentHighlightKind.Text:\n                return monaco.languages.DocumentHighlightKind.Text;\n            case base_1.DocumentHighlightKind.Read:\n                return monaco.languages.DocumentHighlightKind.Read;\n            case base_1.DocumentHighlightKind.Write:\n                return monaco.languages.DocumentHighlightKind.Write;\n        }\n        return monaco.languages.DocumentHighlightKind.Text;\n    };\n    ProtocolToMonacoConverter.prototype.asReferences = function (values) {\n        var _this = this;\n        if (!values) {\n            return undefined;\n        }\n        return values.map(function (location) { return _this.asLocation(location); });\n    };\n    ProtocolToMonacoConverter.prototype.asDefinitionResult = function (item) {\n        var _this = this;\n        if (!item) {\n            return undefined;\n        }\n        if (is.array(item)) {\n            return item.map(function (location) { return _this.asLocation(location); });\n        }\n        else {\n            return this.asLocation(item);\n        }\n    };\n    ProtocolToMonacoConverter.prototype.asLocation = function (item) {\n        if (!item) {\n            return undefined;\n        }\n        var uri = monaco.Uri.parse(item.uri);\n        var range = this.asRange(item.range);\n        return {\n            uri: uri, range: range\n        };\n    };\n    ProtocolToMonacoConverter.prototype.asSignatureHelp = function (item) {\n        if (!item) {\n            return undefined;\n        }\n        var result = {};\n        if (is.number(item.activeSignature)) {\n            result.activeSignature = item.activeSignature;\n        }\n        else {\n            // activeSignature was optional in the past\n            result.activeSignature = 0;\n        }\n        if (is.number(item.activeParameter)) {\n            result.activeParameter = item.activeParameter;\n        }\n        else {\n            // activeParameter was optional in the past\n            result.activeParameter = 0;\n        }\n        if (item.signatures) {\n            result.signatures = this.asSignatureInformations(item.signatures);\n        }\n        return result;\n    };\n    ProtocolToMonacoConverter.prototype.asSignatureInformations = function (items) {\n        var _this = this;\n        return items.map(function (item) { return _this.asSignatureInformation(item); });\n    };\n    ProtocolToMonacoConverter.prototype.asSignatureInformation = function (item) {\n        var result = { label: item.label };\n        if (item.documentation) {\n            result.documentation = item.documentation;\n        }\n        if (item.parameters) {\n            result.parameters = this.asParameterInformations(item.parameters);\n        }\n        return result;\n    };\n    ProtocolToMonacoConverter.prototype.asParameterInformations = function (item) {\n        var _this = this;\n        return item.map(function (item) { return _this.asParameterInformation(item); });\n    };\n    ProtocolToMonacoConverter.prototype.asParameterInformation = function (item) {\n        var result = { label: item.label };\n        if (item.documentation) {\n            result.documentation = item.documentation;\n        }\n        ;\n        return result;\n    };\n    ProtocolToMonacoConverter.prototype.asHover = function (hover) {\n        if (!hover) {\n            return undefined;\n        }\n        var contents = Array.isArray(hover.contents) ? hover.contents : [hover.contents];\n        var range = this.asRange(hover.range);\n        return {\n            contents: contents, range: range\n        };\n    };\n    ProtocolToMonacoConverter.prototype.asSeverity = function (severity) {\n        if (severity === 1) {\n            return monaco.Severity.Error;\n        }\n        if (severity === 2) {\n            return monaco.Severity.Warning;\n        }\n        if (severity === 3) {\n            return monaco.Severity.Info;\n        }\n        return monaco.Severity.Ignore;\n    };\n    ProtocolToMonacoConverter.prototype.asMarker = function (diagnostic) {\n        return {\n            code: typeof diagnostic.code === \"number\" ? diagnostic.code.toString() : diagnostic.code,\n            severity: this.asSeverity(diagnostic.severity),\n            message: diagnostic.message,\n            source: diagnostic.source,\n            startLineNumber: diagnostic.range.start.line + 1,\n            startColumn: diagnostic.range.start.character + 1,\n            endLineNumber: diagnostic.range.end.line + 1,\n            endColumn: diagnostic.range.end.character + 1\n        };\n    };\n    ProtocolToMonacoConverter.prototype.asCompletionResult = function (result) {\n        var _this = this;\n        if (!result) {\n            return undefined;\n        }\n        if (Array.isArray(result)) {\n            return result.map(function (item) { return _this.asCompletionItem(item); });\n        }\n        return {\n            isIncomplete: result.isIncomplete,\n            items: result.items.map(this.asCompletionItem.bind(this))\n        };\n    };\n    ProtocolToMonacoConverter.prototype.asCompletionItem = function (item) {\n        var result = { label: item.label };\n        if (item.detail) {\n            result.detail = item.detail;\n        }\n        if (item.documentation) {\n            result.documentation = item.documentation;\n        }\n        ;\n        if (item.filterText) {\n            result.filterText = item.filterText;\n        }\n        var insertText = this.asCompletionInsertText(item);\n        if (insertText) {\n            result.insertText = insertText.text;\n            result.range = insertText.range;\n            result.fromEdit = insertText.fromEdit;\n        }\n        // Protocol item kind is 1 based, codes item kind is zero based.\n        if (is.number(item.kind) && item.kind > 0) {\n            result.kind = item.kind - 1;\n        }\n        if (item.sortText) {\n            result.sortText = item.sortText;\n        }\n        // TODO: if (item.additionalTextEdits) { result.additionalTextEdits = asTextEdits(item.additionalTextEdits); }\n        // TODO: if (item.command) { result.command = asCommand(item.command); }\n        if (item.data !== void 0 && item.data !== null) {\n            result.data = item.data;\n        }\n        return result;\n    };\n    ProtocolToMonacoConverter.prototype.asCompletionInsertText = function (item) {\n        if (item.textEdit) {\n            var range = this.asRange(item.textEdit.range);\n            var value = item.textEdit.newText;\n            var text = item.insertTextFormat === base_1.InsertTextFormat.Snippet ? { value: value } : value;\n            return {\n                text: text, range: range, fromEdit: true\n            };\n        }\n        if (item.insertText) {\n            var value = item.insertText;\n            var text = item.insertTextFormat === base_1.InsertTextFormat.Snippet ? { value: value } : value;\n            return { text: text, fromEdit: false };\n        }\n        return undefined;\n    };\n    ProtocolToMonacoConverter.prototype.asILinks = function (documentLinks) {\n        var links = [];\n        for (var _i = 0, documentLinks_1 = documentLinks; _i < documentLinks_1.length; _i++) {\n            var documentLink = documentLinks_1[_i];\n            links.push(this.asILink(documentLink));\n        }\n        return links;\n    };\n    ProtocolToMonacoConverter.prototype.asILink = function (documentLink) {\n        // a DocumentLink's target is optional but ILink's url is not\n        // so we cast to any to get around the compiler's error\n        return {\n            range: this.asRange(documentLink.range),\n            url: documentLink.target\n        };\n    };\n    ProtocolToMonacoConverter.prototype.asRange = function (range) {\n        if (range === undefined) {\n            return undefined;\n        }\n        if (range === null) {\n            return null;\n        }\n        var start = this.asPosition(range.start);\n        var end = this.asPosition(range.end);\n        if (start instanceof monaco.Position && end instanceof monaco.Position) {\n            return new monaco.Range(start.lineNumber, start.column, end.lineNumber, end.column);\n        }\n        var startLineNumber = !start || start.lineNumber === undefined ? undefined : start.lineNumber;\n        var startColumn = !start || start.column === undefined ? undefined : start.column;\n        var endLineNumber = !end || end.lineNumber === undefined ? undefined : end.lineNumber;\n        var endColumn = !end || end.column === undefined ? undefined : end.column;\n        return { startLineNumber: startLineNumber, startColumn: startColumn, endLineNumber: endLineNumber, endColumn: endColumn };\n    };\n    ProtocolToMonacoConverter.prototype.asPosition = function (position) {\n        if (position === undefined) {\n            return undefined;\n        }\n        if (position === null) {\n            return null;\n        }\n        var line = position.line, character = position.character;\n        var lineNumber = line === undefined ? undefined : line + 1;\n        var column = character === undefined ? undefined : character + 1;\n        if (lineNumber !== undefined && column !== undefined) {\n            return new monaco.Position(lineNumber, column);\n        }\n        return { lineNumber: lineNumber, column: column };\n    };\n    return ProtocolToMonacoConverter;\n}());\nexports.ProtocolToMonacoConverter = ProtocolToMonacoConverter;\n//# sourceMappingURL=converter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/monaco-languageclient/lib/converter.js\n// module id = 84\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar globToRegExp = require(\"glob-to-regexp\");\nvar services_1 = require(\"vscode-base-languageclient/lib/services\");\nvar diagnostic_collection_1 = require(\"./diagnostic-collection\");\nvar disposable_1 = require(\"./disposable\");\nvar MonacoModelIdentifier;\n(function (MonacoModelIdentifier) {\n    function fromDocument(document) {\n        return {\n            uri: monaco.Uri.parse(document.uri),\n            languageId: document.languageId\n        };\n    }\n    MonacoModelIdentifier.fromDocument = fromDocument;\n    function fromModel(model) {\n        return {\n            uri: model.uri,\n            languageId: model.getModeId()\n        };\n    }\n    MonacoModelIdentifier.fromModel = fromModel;\n})(MonacoModelIdentifier = exports.MonacoModelIdentifier || (exports.MonacoModelIdentifier = {}));\nfunction testGlob(pattern, value) {\n    var regExp = globToRegExp(pattern, {\n        extended: true,\n        globstar: true\n    });\n    return regExp.test(value);\n}\nexports.testGlob = testGlob;\nfunction getLanguages() {\n    var languages = [];\n    for (var _i = 0, _a = monaco.languages.getLanguages().map(function (l) { return l.id; }); _i < _a.length; _i++) {\n        var language = _a[_i];\n        if (languages.indexOf(language) === -1) {\n            languages.push(language);\n        }\n    }\n    return languages;\n}\nexports.getLanguages = getLanguages;\nvar MonacoLanguages = /** @class */ (function () {\n    function MonacoLanguages(p2m, m2p) {\n        this.p2m = p2m;\n        this.m2p = m2p;\n        this.completion = {\n            completionItem: {\n                snippetSupport: true\n            }\n        };\n    }\n    MonacoLanguages.prototype.match = function (selector, document) {\n        return this.matchModel(selector, MonacoModelIdentifier.fromDocument(document));\n    };\n    MonacoLanguages.prototype.createDiagnosticCollection = function (name) {\n        return new diagnostic_collection_1.MonacoDiagnosticCollection(name || 'default', this.p2m);\n    };\n    MonacoLanguages.prototype.registerCompletionItemProvider = function (selector, provider) {\n        var triggerCharacters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            triggerCharacters[_i - 2] = arguments[_i];\n        }\n        var completionProvider = this.createCompletionProvider.apply(this, [selector, provider].concat(triggerCharacters));\n        var providers = new disposable_1.DisposableCollection();\n        for (var _a = 0, _b = getLanguages(); _a < _b.length; _a++) {\n            var language = _b[_a];\n            providers.push(monaco.languages.registerCompletionItemProvider(language, completionProvider));\n        }\n        ;\n        return providers;\n    };\n    MonacoLanguages.prototype.createCompletionProvider = function (selector, provider) {\n        var _this = this;\n        var triggerCharacters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            triggerCharacters[_i - 2] = arguments[_i];\n        }\n        return {\n            triggerCharacters: triggerCharacters,\n            provideCompletionItems: function (model, position, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                var params = _this.m2p.asTextDocumentPositionParams(model, position);\n                return provider.provideCompletionItems(params, token).then(function (result) { return _this.p2m.asCompletionResult(result); });\n            },\n            resolveCompletionItem: provider.resolveCompletionItem ? function (item, token) {\n                var protocolItem = _this.m2p.asCompletionItem(item);\n                return provider.resolveCompletionItem(protocolItem, token).then(function (item) { return _this.p2m.asCompletionItem(item); });\n            } : undefined\n        };\n    };\n    MonacoLanguages.prototype.registerHoverProvider = function (selector, provider) {\n        var hoverProvider = this.createHoverProvider(selector, provider);\n        var providers = new disposable_1.DisposableCollection();\n        for (var _i = 0, _a = getLanguages(); _i < _a.length; _i++) {\n            var language = _a[_i];\n            providers.push(monaco.languages.registerHoverProvider(language, hoverProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createHoverProvider = function (selector, provider) {\n        var _this = this;\n        return {\n            provideHover: function (model, position, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined;\n                }\n                var params = _this.m2p.asTextDocumentPositionParams(model, position);\n                return provider.provideHover(params, token).then(function (hover) { return _this.p2m.asHover(hover); });\n            }\n        };\n    };\n    MonacoLanguages.prototype.registerSignatureHelpProvider = function (selector, provider) {\n        var triggerCharacters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            triggerCharacters[_i - 2] = arguments[_i];\n        }\n        var signatureHelpProvider = this.createSignatureHelpProvider.apply(this, [selector, provider].concat(triggerCharacters));\n        var providers = new disposable_1.DisposableCollection();\n        for (var _a = 0, _b = getLanguages(); _a < _b.length; _a++) {\n            var language = _b[_a];\n            providers.push(monaco.languages.registerSignatureHelpProvider(language, signatureHelpProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createSignatureHelpProvider = function (selector, provider) {\n        var _this = this;\n        var triggerCharacters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            triggerCharacters[_i - 2] = arguments[_i];\n        }\n        var signatureHelpTriggerCharacters = triggerCharacters;\n        return {\n            signatureHelpTriggerCharacters: signatureHelpTriggerCharacters,\n            provideSignatureHelp: function (model, position, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined;\n                }\n                var params = _this.m2p.asTextDocumentPositionParams(model, position);\n                return provider.provideSignatureHelp(params, token).then(function (signatureHelp) { return _this.p2m.asSignatureHelp(signatureHelp); });\n            }\n        };\n    };\n    MonacoLanguages.prototype.registerDefinitionProvider = function (selector, provider) {\n        var definitionProvider = this.createDefinitionProvider(selector, provider);\n        var providers = new disposable_1.DisposableCollection();\n        for (var _i = 0, _a = getLanguages(); _i < _a.length; _i++) {\n            var language = _a[_i];\n            providers.push(monaco.languages.registerDefinitionProvider(language, definitionProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createDefinitionProvider = function (selector, provider) {\n        var _this = this;\n        return {\n            provideDefinition: function (model, position, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined;\n                }\n                var params = _this.m2p.asTextDocumentPositionParams(model, position);\n                return provider.provideDefinition(params, token).then(function (result) { return _this.p2m.asDefinitionResult(result); });\n            }\n        };\n    };\n    MonacoLanguages.prototype.registerReferenceProvider = function (selector, provider) {\n        var referenceProvider = this.createReferenceProvider(selector, provider);\n        var providers = new disposable_1.DisposableCollection();\n        for (var _i = 0, _a = getLanguages(); _i < _a.length; _i++) {\n            var language = _a[_i];\n            providers.push(monaco.languages.registerReferenceProvider(language, referenceProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createReferenceProvider = function (selector, provider) {\n        var _this = this;\n        return {\n            provideReferences: function (model, position, context, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                var params = _this.m2p.asReferenceParams(model, position, context);\n                return provider.provideReferences(params, token).then(function (result) { return _this.p2m.asReferences(result); });\n            }\n        };\n    };\n    MonacoLanguages.prototype.registerDocumentHighlightProvider = function (selector, provider) {\n        var documentHighlightProvider = this.createDocumentHighlightProvider(selector, provider);\n        var providers = new disposable_1.DisposableCollection();\n        for (var _i = 0, _a = getLanguages(); _i < _a.length; _i++) {\n            var language = _a[_i];\n            providers.push(monaco.languages.registerDocumentHighlightProvider(language, documentHighlightProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createDocumentHighlightProvider = function (selector, provider) {\n        var _this = this;\n        return {\n            provideDocumentHighlights: function (model, position, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                var params = _this.m2p.asTextDocumentPositionParams(model, position);\n                return provider.provideDocumentHighlights(params, token).then(function (result) { return _this.p2m.asDocumentHighlights(result); });\n            }\n        };\n    };\n    MonacoLanguages.prototype.registerDocumentSymbolProvider = function (selector, provider) {\n        var documentSymbolProvider = this.createDocumentSymbolProvider(selector, provider);\n        var providers = new disposable_1.DisposableCollection();\n        for (var _i = 0, _a = getLanguages(); _i < _a.length; _i++) {\n            var language = _a[_i];\n            providers.push(monaco.languages.registerDocumentSymbolProvider(language, documentSymbolProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createDocumentSymbolProvider = function (selector, provider) {\n        var _this = this;\n        return {\n            provideDocumentSymbols: function (model, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                var params = _this.m2p.asDocumentSymbolParams(model);\n                return provider.provideDocumentSymbols(params, token).then(function (result) { return _this.p2m.asSymbolInformations(result); });\n            }\n        };\n    };\n    MonacoLanguages.prototype.registerCodeActionsProvider = function (selector, provider) {\n        var codeActionProvider = this.createCodeActionProvider(selector, provider);\n        var providers = new disposable_1.DisposableCollection();\n        for (var _i = 0, _a = getLanguages(); _i < _a.length; _i++) {\n            var language = _a[_i];\n            providers.push(monaco.languages.registerCodeActionProvider(language, codeActionProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createCodeActionProvider = function (selector, provider) {\n        var _this = this;\n        return {\n            provideCodeActions: function (model, range, context, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                var params = _this.m2p.asCodeActionParams(model, range, context);\n                return provider.provideCodeActions(params, token).then(function (result) { return _this.p2m.asCommands(result); });\n            }\n        };\n    };\n    MonacoLanguages.prototype.registerCodeLensProvider = function (selector, provider) {\n        var codeLensProvider = this.createCodeLensProvider(selector, provider);\n        var providers = new disposable_1.DisposableCollection();\n        for (var _i = 0, _a = getLanguages(); _i < _a.length; _i++) {\n            var language = _a[_i];\n            providers.push(monaco.languages.registerCodeLensProvider(language, codeLensProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createCodeLensProvider = function (selector, provider) {\n        var _this = this;\n        return {\n            provideCodeLenses: function (model, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                var params = _this.m2p.asCodeLensParams(model);\n                return provider.provideCodeLenses(params, token).then(function (result) { return _this.p2m.asCodeLenses(result); });\n            },\n            resolveCodeLens: provider.resolveCodeLens ? function (model, codeLens, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return codeLens;\n                }\n                var protocolCodeLens = _this.m2p.asCodeLens(codeLens);\n                return provider.resolveCodeLens(protocolCodeLens, token).then(function (result) { return _this.p2m.asCodeLens(result); });\n            } : (function (m, codeLens, t) { return codeLens; })\n        };\n    };\n    MonacoLanguages.prototype.registerDocumentFormattingEditProvider = function (selector, provider) {\n        var documentFormattingEditProvider = this.createDocumentFormattingEditProvider(selector, provider);\n        var providers = new disposable_1.DisposableCollection();\n        for (var _i = 0, _a = getLanguages(); _i < _a.length; _i++) {\n            var language = _a[_i];\n            providers.push(monaco.languages.registerDocumentFormattingEditProvider(language, documentFormattingEditProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createDocumentFormattingEditProvider = function (selector, provider) {\n        var _this = this;\n        return {\n            provideDocumentFormattingEdits: function (model, options, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                var params = _this.m2p.asDocumentFormattingParams(model, options);\n                return provider.provideDocumentFormattingEdits(params, token).then(function (result) { return _this.p2m.asTextEdits(result); });\n            }\n        };\n    };\n    MonacoLanguages.prototype.registerDocumentRangeFormattingEditProvider = function (selector, provider) {\n        var documentRangeFormattingEditProvider = this.createDocumentRangeFormattingEditProvider(selector, provider);\n        var providers = new disposable_1.DisposableCollection();\n        for (var _i = 0, _a = getLanguages(); _i < _a.length; _i++) {\n            var language = _a[_i];\n            providers.push(monaco.languages.registerDocumentRangeFormattingEditProvider(language, documentRangeFormattingEditProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createDocumentRangeFormattingEditProvider = function (selector, provider) {\n        var _this = this;\n        return {\n            provideDocumentRangeFormattingEdits: function (model, range, options, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                var params = _this.m2p.asDocumentRangeFormattingParams(model, range, options);\n                return provider.provideDocumentRangeFormattingEdits(params, token).then(function (result) { return _this.p2m.asTextEdits(result); });\n            }\n        };\n    };\n    MonacoLanguages.prototype.registerOnTypeFormattingEditProvider = function (selector, provider, firstTriggerCharacter) {\n        var moreTriggerCharacter = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            moreTriggerCharacter[_i - 3] = arguments[_i];\n        }\n        var onTypeFormattingEditProvider = this.createOnTypeFormattingEditProvider.apply(this, [selector, provider, firstTriggerCharacter].concat(moreTriggerCharacter));\n        var providers = new disposable_1.DisposableCollection();\n        for (var _a = 0, _b = getLanguages(); _a < _b.length; _a++) {\n            var language = _b[_a];\n            providers.push(monaco.languages.registerOnTypeFormattingEditProvider(language, onTypeFormattingEditProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createOnTypeFormattingEditProvider = function (selector, provider, firstTriggerCharacter) {\n        var _this = this;\n        var moreTriggerCharacter = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            moreTriggerCharacter[_i - 3] = arguments[_i];\n        }\n        var autoFormatTriggerCharacters = [firstTriggerCharacter].concat(moreTriggerCharacter);\n        return {\n            autoFormatTriggerCharacters: autoFormatTriggerCharacters,\n            provideOnTypeFormattingEdits: function (model, position, ch, options, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                var params = _this.m2p.asDocumentOnTypeFormattingParams(model, position, ch, options);\n                return provider.provideOnTypeFormattingEdits(params, token).then(function (result) { return _this.p2m.asTextEdits(result); });\n            }\n        };\n    };\n    MonacoLanguages.prototype.registerRenameProvider = function (selector, provider) {\n        var renameProvider = this.createRenameProvider(selector, provider);\n        var providers = new disposable_1.DisposableCollection();\n        for (var _i = 0, _a = getLanguages(); _i < _a.length; _i++) {\n            var language = _a[_i];\n            providers.push(monaco.languages.registerRenameProvider(language, renameProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createRenameProvider = function (selector, provider) {\n        var _this = this;\n        return {\n            provideRenameEdits: function (model, position, newName, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined;\n                }\n                var params = _this.m2p.asRenameParams(model, position, newName);\n                return provider.provideRenameEdits(params, token).then(function (result) { return _this.p2m.asWorkspaceEdit(result); });\n            }\n        };\n    };\n    MonacoLanguages.prototype.registerDocumentLinkProvider = function (selector, provider) {\n        var linkProvider = this.createDocumentLinkProvider(selector, provider);\n        var providers = new disposable_1.DisposableCollection();\n        for (var _i = 0, _a = getLanguages(); _i < _a.length; _i++) {\n            var language = _a[_i];\n            providers.push(monaco.languages.registerLinkProvider(language, linkProvider));\n        }\n        return providers;\n    };\n    MonacoLanguages.prototype.createDocumentLinkProvider = function (selector, provider) {\n        var _this = this;\n        return {\n            provideLinks: function (model, token) {\n                if (!_this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined;\n                }\n                var params = _this.m2p.asDocumentLinkParams(model);\n                return provider.provideDocumentLinks(params, token).then(function (result) { return _this.p2m.asILinks(result); });\n            },\n            resolveLink: function (link, token) {\n                // resolve the link if the provider supports it\n                // and the link doesn't have a url set\n                if (provider.resolveDocumentLink && (link.url === null || link.url === undefined)) {\n                    var documentLink = _this.m2p.asDocumentLink(link);\n                    return provider.resolveDocumentLink(documentLink, token).then(function (result) { return _this.p2m.asILink(result); });\n                }\n                return link;\n            }\n        };\n    };\n    MonacoLanguages.prototype.matchModel = function (selector, model) {\n        var _this = this;\n        if (Array.isArray(selector)) {\n            return selector.findIndex(function (filter) { return _this.matchModel(filter, model); }) !== -1;\n        }\n        if (services_1.DocumentFilter.is(selector)) {\n            if (!!selector.language && selector.language !== model.languageId) {\n                return false;\n            }\n            if (!!selector.scheme && selector.scheme !== model.uri.scheme) {\n                return false;\n            }\n            if (!!selector.pattern && !testGlob(selector.pattern, model.uri.path)) {\n                return false;\n            }\n            return true;\n        }\n        return selector === model.languageId;\n    };\n    return MonacoLanguages;\n}());\nexports.MonacoLanguages = MonacoLanguages;\n//# sourceMappingURL=languages.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/monaco-languageclient/lib/languages.js\n// module id = 85\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar services_1 = require(\"vscode-base-languageclient/lib/services\");\nvar MonacoWorkspace = /** @class */ (function () {\n    function MonacoWorkspace(p2m, m2p, _rootUri) {\n        if (_rootUri === void 0) { _rootUri = null; }\n        var _this = this;\n        this.p2m = p2m;\n        this.m2p = m2p;\n        this._rootUri = _rootUri;\n        this.capabilities = {\n            applyEdit: true,\n            workspaceEdit: {\n                documentChanges: true\n            }\n        };\n        this.documents = new Map();\n        this.onDidOpenTextDocumentEmitter = new services_1.Emitter();\n        this.onDidCloseTextDocumentEmitter = new services_1.Emitter();\n        this.onDidChangeTextDocumentEmitter = new services_1.Emitter();\n        for (var _i = 0, _a = monaco.editor.getModels(); _i < _a.length; _i++) {\n            var model = _a[_i];\n            this.addModel(model);\n        }\n        monaco.editor.onDidCreateModel(function (model) { return _this.addModel(model); });\n        monaco.editor.onWillDisposeModel(function (model) { return _this.removeModel(model); });\n    }\n    Object.defineProperty(MonacoWorkspace.prototype, \"rootUri\", {\n        get: function () {\n            return this._rootUri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoWorkspace.prototype.removeModel = function (model) {\n        var uri = model.uri.toString();\n        var document = this.documents.get(uri);\n        if (document) {\n            this.documents.delete(uri);\n            this.onDidCloseTextDocumentEmitter.fire(document);\n        }\n    };\n    MonacoWorkspace.prototype.addModel = function (model) {\n        var _this = this;\n        var uri = model.uri.toString();\n        var document = this.setModel(uri, model);\n        this.onDidOpenTextDocumentEmitter.fire(document);\n        model.onDidChangeContent(function (event) {\n            return _this.onDidChangeContent(uri, model, event);\n        });\n    };\n    MonacoWorkspace.prototype.onDidChangeContent = function (uri, model, event) {\n        var textDocument = this.setModel(uri, model);\n        var contentChanges = [];\n        for (var _i = 0, _a = event.changes; _i < _a.length; _i++) {\n            var change = _a[_i];\n            var range = this.m2p.asRange(change.range);\n            var rangeLength = change.rangeLength;\n            var text = change.text;\n            contentChanges.push({ range: range, rangeLength: rangeLength, text: text });\n        }\n        this.onDidChangeTextDocumentEmitter.fire({\n            textDocument: textDocument,\n            contentChanges: contentChanges\n        });\n    };\n    MonacoWorkspace.prototype.setModel = function (uri, model) {\n        var document = services_1.TextDocument.create(uri, model.getModeId(), model.getVersionId(), model.getValue());\n        this.documents.set(uri, document);\n        return document;\n    };\n    Object.defineProperty(MonacoWorkspace.prototype, \"textDocuments\", {\n        get: function () {\n            return Array.from(this.documents.values());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoWorkspace.prototype, \"onDidOpenTextDocument\", {\n        get: function () {\n            return this.onDidOpenTextDocumentEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoWorkspace.prototype, \"onDidCloseTextDocument\", {\n        get: function () {\n            return this.onDidCloseTextDocumentEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoWorkspace.prototype, \"onDidChangeTextDocument\", {\n        get: function () {\n            return this.onDidChangeTextDocumentEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoWorkspace.prototype.applyEdit = function (workspaceEdit) {\n        var edit = this.p2m.asWorkspaceEdit(workspaceEdit);\n        // Collect all referenced models\n        var models = edit.edits.reduce(function (acc, currentEdit) {\n            acc[currentEdit.resource.toString()] = monaco.editor.getModel(currentEdit.resource);\n            return acc;\n        }, {});\n        // If any of the models do not exist, refuse to apply the edit.\n        if (!Object.keys(models).map(function (uri) { return models[uri]; }).every(function (model) { return !!model; })) {\n            return Promise.resolve(false);\n        }\n        // Group edits by resource so we can batch them when applying\n        var editsByResource = edit.edits.reduce(function (acc, currentEdit) {\n            var uri = currentEdit.resource.toString();\n            if (!(uri in acc)) {\n                acc[uri] = [];\n            }\n            acc[uri].push(currentEdit);\n            return acc;\n        }, {});\n        // Apply edits for each resource\n        Object.keys(editsByResource).forEach(function (uri) {\n            models[uri].pushEditOperations([], // Do not try and preserve editor selections.\n            editsByResource[uri].map(function (resourceEdit) {\n                return {\n                    identifier: { major: 1, minor: 0 },\n                    range: monaco.Range.lift(resourceEdit.range),\n                    text: resourceEdit.newText,\n                    forceMoveMarkers: true,\n                };\n            }), function () { return []; });\n        });\n        return Promise.resolve(true);\n    };\n    return MonacoWorkspace;\n}());\nexports.MonacoWorkspace = MonacoWorkspace;\n//# sourceMappingURL=workspace.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/monaco-languageclient/lib/workspace.js\n// module id = 86\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args').nextTick;\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_readable.js\n// module id = 87\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_transform.js\n// module id = 88\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args').nextTick;\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    processNextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    processNextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      processNextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_writable.js\n// module id = 89\n// module chunks = 0","'use strict';\n\n/*<replacement>*/\n\nvar processNextTick = require('process-nextick-args').nextTick;\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      processNextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      processNextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/internal/streams/destroy.js\n// module id = 90\n// module chunks = 0","module.exports = require('events').EventEmitter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/internal/streams/stream-browser.js\n// module id = 91\n// module chunks = 0","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/readable-browser.js\n// module id = 92\n// module chunks = 0","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/lib/capability.js\n// module id = 93\n// module chunks = 0","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable)\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function(err) {\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/lib/response.js\n// module id = 94\n// module chunks = 0","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return -1;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// UTF-8 replacement characters ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd'.repeat(p);\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd'.repeat(p + 1);\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd'.repeat(p + 2);\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character for each buffered byte of a (partial)\n// character needs to be added to the output.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd'.repeat(this.lastTotal - this.lastNeed);\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/string_decoder/lib/string_decoder.js\n// module id = 95\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmeidate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 96\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nvar dockerfile_ast_1 = require(\"dockerfile-ast\");\r\nvar dockerDefinition_1 = require(\"./dockerDefinition\");\r\nvar docker_1 = require(\"./docker\");\r\nvar DockerHighlight = /** @class */ (function () {\r\n    function DockerHighlight() {\r\n    }\r\n    DockerHighlight.prototype.computeHighlightRanges = function (textDocument, content, position) {\r\n        var dockerfile = dockerfile_ast_1.DockerfileParser.parse(content);\r\n        var provider = new dockerDefinition_1.DockerDefinition();\r\n        var location = provider.computeDefinition(textDocument, content, position);\r\n        var image = location === null ? dockerfile.getContainingImage(position) : dockerfile.getContainingImage(location.range.start);\r\n        var highlights = [];\r\n        if (location === null) {\r\n            for (var _i = 0, _a = dockerfile.getCOPYs(); _i < _a.length; _i++) {\r\n                var instruction = _a[_i];\r\n                var flag = instruction.getFromFlag();\r\n                if (flag) {\r\n                    var range = flag.getValueRange();\r\n                    if (range && range.start.line === position.line && range.start.character <= position.character && position.character <= range.end.character) {\r\n                        var stage = flag.getValue();\r\n                        for (var _b = 0, _c = dockerfile.getCOPYs(); _b < _c.length; _b++) {\r\n                            var other = _c[_b];\r\n                            var otherFlag = other.getFromFlag();\r\n                            if (otherFlag && otherFlag.getValue() === stage) {\r\n                                highlights.push(vscode_languageserver_types_1.DocumentHighlight.create(otherFlag.getValueRange(), vscode_languageserver_types_1.DocumentHighlightKind.Read));\r\n                            }\r\n                        }\r\n                        return highlights;\r\n                    }\r\n                }\r\n            }\r\n            for (var _d = 0, _e = dockerfile.getFROMs(); _d < _e.length; _d++) {\r\n                var from = _e[_d];\r\n                for (var _f = 0, _g = from.getVariables(); _f < _g.length; _f++) {\r\n                    var variable = _g[_f];\r\n                    if (docker_1.Util.isInsideRange(position, variable.getNameRange())) {\r\n                        var name = variable.getName();\r\n                        for (var _h = 0, _j = dockerfile.getFROMs(); _h < _j.length; _h++) {\r\n                            var loopFrom = _j[_h];\r\n                            for (var _k = 0, _l = loopFrom.getVariables(); _k < _l.length; _k++) {\r\n                                var fromVariable = _l[_k];\r\n                                if (fromVariable.getName() === name) {\r\n                                    highlights.push(vscode_languageserver_types_1.DocumentHighlight.create(fromVariable.getNameRange(), vscode_languageserver_types_1.DocumentHighlightKind.Read));\r\n                                }\r\n                            }\r\n                        }\r\n                        return highlights;\r\n                    }\r\n                }\r\n            }\r\n            for (var _m = 0, _o = image.getInstructions(); _m < _o.length; _m++) {\r\n                var instruction = _o[_m];\r\n                for (var _p = 0, _q = instruction.getVariables(); _p < _q.length; _p++) {\r\n                    var variable = _q[_p];\r\n                    if (docker_1.Util.isInsideRange(position, variable.getNameRange())) {\r\n                        var name = variable.getName();\r\n                        for (var _r = 0, _s = image.getInstructions(); _r < _s.length; _r++) {\r\n                            var instruction_1 = _s[_r];\r\n                            if (!(instruction_1 instanceof dockerfile_ast_1.From)) {\r\n                                for (var _t = 0, _u = instruction_1.getVariables(); _t < _u.length; _t++) {\r\n                                    var variable_1 = _u[_t];\r\n                                    if (variable_1.getName() === name) {\r\n                                        highlights.push(vscode_languageserver_types_1.DocumentHighlight.create(variable_1.getNameRange(), vscode_languageserver_types_1.DocumentHighlightKind.Read));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return highlights;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var document = vscode_languageserver_types_1.TextDocument.create(textDocument.uri, \"\", 0, content);\r\n            var definition = document.getText().substring(document.offsetAt(location.range.start), document.offsetAt(location.range.end));\r\n            for (var _v = 0, _w = dockerfile.getFROMs(); _v < _w.length; _v++) {\r\n                var from = _w[_v];\r\n                var range = from.getBuildStageRange();\r\n                if (range && range.start.line === location.range.start.line) {\r\n                    highlights.push(vscode_languageserver_types_1.DocumentHighlight.create(location.range, vscode_languageserver_types_1.DocumentHighlightKind.Write));\r\n                    for (var _x = 0, _y = dockerfile.getCOPYs(); _x < _y.length; _x++) {\r\n                        var instruction = _y[_x];\r\n                        var flag = instruction.getFromFlag();\r\n                        if (flag) {\r\n                            if (flag.getValue() === definition) {\r\n                                highlights.push(vscode_languageserver_types_1.DocumentHighlight.create(flag.getValueRange(), vscode_languageserver_types_1.DocumentHighlightKind.Read));\r\n                            }\r\n                        }\r\n                    }\r\n                    return highlights;\r\n                }\r\n            }\r\n            for (var _z = 0, _0 = image.getARGs(); _z < _0.length; _z++) {\r\n                var arg = _0[_z];\r\n                var property = arg.getProperty();\r\n                // property may be null if it's an ARG with no arguments\r\n                if (property && property.getName() === definition) {\r\n                    highlights.push(vscode_languageserver_types_1.DocumentHighlight.create(property.getNameRange(), vscode_languageserver_types_1.DocumentHighlightKind.Write));\r\n                }\r\n            }\r\n            for (var _1 = 0, _2 = image.getENVs(); _1 < _2.length; _1++) {\r\n                var env = _2[_1];\r\n                for (var _3 = 0, _4 = env.getProperties(); _3 < _4.length; _3++) {\r\n                    var property = _4[_3];\r\n                    if (property.getName() === definition) {\r\n                        highlights.push(vscode_languageserver_types_1.DocumentHighlight.create(property.getNameRange(), vscode_languageserver_types_1.DocumentHighlightKind.Write));\r\n                    }\r\n                }\r\n            }\r\n            for (var _5 = 0, _6 = image.getInstructions(); _5 < _6.length; _5++) {\r\n                var instruction = _6[_5];\r\n                // only highlight variables in non-FROM instructions\r\n                if (!(instruction instanceof dockerfile_ast_1.From)) {\r\n                    for (var _7 = 0, _8 = instruction.getVariables(); _7 < _8.length; _7++) {\r\n                        var variable = _8[_7];\r\n                        if (variable.getName() === definition) {\r\n                            highlights.push(vscode_languageserver_types_1.DocumentHighlight.create(variable.getNameRange(), vscode_languageserver_types_1.DocumentHighlightKind.Read));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (var _9 = 0, _10 = dockerfile.getInitialARGs(); _9 < _10.length; _9++) {\r\n                var arg = _10[_9];\r\n                var property = arg.getProperty();\r\n                if (property && docker_1.Util.rangeEquals(property.getNameRange(), location.range)) {\r\n                    for (var _11 = 0, _12 = dockerfile.getFROMs(); _11 < _12.length; _11++) {\r\n                        var from = _12[_11];\r\n                        for (var _13 = 0, _14 = from.getVariables(); _13 < _14.length; _13++) {\r\n                            var variable = _14[_13];\r\n                            if (variable.getName() === definition) {\r\n                                highlights.push(vscode_languageserver_types_1.DocumentHighlight.create(variable.getNameRange(), vscode_languageserver_types_1.DocumentHighlightKind.Read));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return highlights;\r\n    };\r\n    return DockerHighlight;\r\n}());\r\nexports.DockerHighlight = DockerHighlight;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerHighlight.js\n// module id = 97\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n* Copyright (c) Remy Suen. All rights reserved.\r\n* Licensed under the MIT License. See License.txt in the project root for license information.\r\n* ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PlainTextDocumentation = /** @class */ (function () {\r\n    function PlainTextDocumentation() {\r\n        this.dockerMessages = {\r\n            \"hoverAdd\": \"Copy files, folders, or remote URLs from `source` to the `dest` path in the image's filesystem.\\n\\n\",\r\n            \"hoverArg\": \"Define a variable with an optional default value that users can override at build-time when using `docker build`.\\n\\n\",\r\n            \"hoverCmd\": \"Provide defaults for an executing container. If an executable is not specified, then ENTRYPOINT must be specified as well. There can only be one CMD instruction in a Dockerfile.\\n\\n\",\r\n            \"hoverCopy\": \"Copy files or folders from `source` to the `dest` path in the image's filesystem.\\n\\n\",\r\n            \"hoverEntrypoint\": \"Configures the container to be run as an executable.\\n\\n\",\r\n            \"hoverEnv\": \"Set the environment variable `key` to the value `value`.\\n\\n\",\r\n            \"hoverExpose\": \"Define the network `port`s that this container will listen on at runtime.\\n\\n\",\r\n            \"hoverFrom\": \"Set the `baseImage` to use for subsequent instructions. FROM must be the first instruction in a Dockerfile.\\n\\n\",\r\n            \"hoverHealthcheck\": \"Define how Docker should test the container to check that it is still working. Alternatively, disable the base image's HEALTHCHECK instruction. There can only be one HEALTHCHECK instruction in a Dockerfile.\\n\\nSince Docker 1.12\\n\\n\",\r\n            \"hoverLabel\": \"Adds metadata to an image.\\n\\nSince Docker 1.6\\n\\n\",\r\n            \"hoverMaintainer\": \"Set the Author field of the generated images. This instruction has been deprecated in favor of LABEL.\\n\\n\",\r\n            \"hoverOnbuild\": \"Add a trigger instruction to the image that will be executed when the image is used as a base image for another build.\\n\\n\",\r\n            \"hoverRun\": \"Execute any commands on top of the current image as a new layer and commit the results.\\n\\n\",\r\n            \"hoverShell\": \"Override the default shell used for the shell form of commands.\\n\\nSince Docker 1.12\\n\\n\",\r\n            \"hoverStopsignal\": \"Set the system call signal to use to send to the container to exit. Signals can be valid unsigned numbers or a signal name in the SIGNAME format such as SIGKILL.\\n\\nSince Docker 1.12\\n\\n\",\r\n            \"hoverUser\": \"Set the user name or UID to use when running the image in addition to any subsequent CMD, ENTRYPOINT, or RUN instructions that follow it in the Dockerfile.\\n\\n\",\r\n            \"hoverVolume\": \"Create a mount point with the specifid name and mark it as holding externally mounted volumes from the native host or from other containers.\\n\\n\",\r\n            \"hoverWorkdir\": \"Set the working directory for any subsequent ADD, COPY, CMD, ENTRYPOINT, or RUN` instructions that follow it in the `Dockerfile`.\\n\\n\",\r\n            \"hoverAddFlagChown\": \"The username, groupname, or UID/GID combination to own the added content.\",\r\n            \"hoverCopyFlagChown\": \"The username, groupname, or UID/GID combination to own the copied content.\",\r\n            \"hoverCopyFlagFrom\": \"The previous build stage to use as the source location instead of the build's context.\\n\\nSince Docker 17.05.0-ce.\",\r\n            \"hoverHealthcheckFlagInterval\": \"The seconds to wait for the health check to run after the container has started, and then again the number of seconds to wait before running again after the previous check has completed.\",\r\n            \"hoverHealthcheckFlagRetries\": \"The number of consecutive failures of this health check before the container is considered to be `unhealthy`.\",\r\n            \"hoverHealthcheckFlagStartPeriod\": \"The number of seconds to wait for the container to startup. Failures during this grace period will not count towards the maximum number of retries. However, should a health check succeed during this period then any subsequent failures will count towards the maximum number of retries.\\n\\nSince Docker 17.05.0-ce.\",\r\n            \"hoverHealthcheckFlagTimeout\": \"The number of seconds to wait for the check to complete before considering it to have failed.\",\r\n            \"hoverEscape\": \"Sets the character to use to escape characters and newlines in this Dockerfile. If unspecified, the default escape character is `\\\\`.\\n\\n\",\r\n            \"signatureEscape\": \"Sets this Dockerfile's escape character. If unspecified, the default escape character is `\\\\`.\",\r\n            \"signatureEscape_Param\": \"The character to use to escape characters and newlines in this Dockerfile.\",\r\n            \"signatureAdd_Signature0\": \"Copy new files, directories or remote URLs to the image's filesystem.\",\r\n            \"signatureAdd_Signature0_Param1\": \"The resource to copy or unpack if it is a local tar archive in a recognized compression format.\",\r\n            \"signatureAdd_Signature0_Param3\": \"The name of the destination file or folder.\",\r\n            \"signatureArg_Signature0\": \"Define a variable that users can pass a value to at build-time with `docker build`.\",\r\n            \"signatureArg_Signature0_Param\": \"The name of the variable.\",\r\n            \"signatureArg_Signature1\": \"Define a variable with an optional default value that users can override at build-time with `docker build`.\",\r\n            \"signatureArg_Signature1_Param1\": \"The default value of the variable.\",\r\n            \"signatureCmd_Signature0\": \"Set the default executable and parameters for this executing container.\",\r\n            \"signatureCmd_Signature0_Param0\": \"The default executable for this executing container.\",\r\n            \"signatureCmd_Signature0_Param1\": \"A parameter to the default executable.\",\r\n            \"signatureCmd_Signature1\": \"Set the default parameters for this executing container. An ENTRYPOINT instruction must also be specified.\",\r\n            \"signatureCmd_Signature1_Param0\": \"A parameter to the entrypoint executable.\",\r\n            \"signatureCopy_Signature0\": \"Copy new files and directories to the image's filesystem.\",\r\n            \"signatureCopy_Signature0_Param0\": \"Optional flags to configure this instruction.\",\r\n            \"signatureCopy_Signature0_Param1\": \"The resource to copy.\",\r\n            \"signatureCopyFlagFrom\": \"Set the build stage to use as the source location of this copy instruction instead of the build's context.\",\r\n            \"signatureCopyFlagFrom_Param\": \"The build stage or image name to use as the source. Also may be a numeric index.\",\r\n            \"signatureEntrypoint_Signature0\": \"Configure this container for running as an executable.\",\r\n            \"signatureEntrypoint_Signature0_Param1\": \"The container's main executable.\",\r\n            \"signatureEntrypoint_Signature0_Param2\": \"A parameter to the entrypoint executable.\",\r\n            \"signatureEnv_Signature0\": \"Set an environment variable to the specified value. The value will be in the environment of any descendent Dockerfiles\",\r\n            \"signatureEnv_Signature0_Param0\": \"The name of the environment variable.\",\r\n            \"signatureEnv_Signature0_Param1\": \"The value to set the environment variable to.\",\r\n            \"signatureExpose\": \"Define network ports for this container to listen on at runtime.\",\r\n            \"signatureExpose_Param0\": \"The port that this container should listen on.\",\r\n            \"signatureFrom_Signature0\": \"Set the base image to use for any subsequent instructions that follow.\",\r\n            \"signatureFrom_Signature0_Param\": \"The name of the base image to use.\",\r\n            \"signatureFrom_Signature1_Param1\": \"The tag of the base image to use.\",\r\n            \"signatureFrom_Signature2_Param1\": \"The digest of the base image to use.\",\r\n            \"signatureFrom_Signature3\": \"Set the base image to use for any subsequent instructions that follow and also give this build stage a name.\",\r\n            \"signatureFrom_Signature3_Param2\": \"The name of this build stage.\",\r\n            \"signatureFrom_Param2\": \"The name of this build stage.\",\r\n            \"signatureHealthcheck_Signature0\": \"Define how Docker should test the container to check that it is still working.\",\r\n            \"signatureHealthcheck_Signature1_Param2\": \"The parameters to the CMD instruction for the healthcheck.\",\r\n            \"signatureHealthcheck_Signature2\": \"Disable the inherited HEALTHCHECK instruction from the base image.\",\r\n            \"signatureLabel_Signature0\": \"Set metadata to an image.\",\r\n            \"signatureLabel_Signature0_Param0\": \"The name of the metadata.\",\r\n            \"signatureLabel_Signature0_Param1\": \"The value of the metadata.\",\r\n            \"signatureMaintainer\": \"Set the \\\"Author\\\" field of this image.\",\r\n            \"signatureMaintainer_Param\": \"The name of this image's maintainer.\",\r\n            \"signatureOnbuild\": \"Register a build instruction as a trigger to be executed when this image is used as a base image for another build.\",\r\n            \"signatureOnbuild_Param\": \"The build instruction to register as a trigger instruction.\",\r\n            \"signatureRun_Signature0\": \"Execute commands inside a shell.\",\r\n            \"signatureRun_Signature0_Param0\": \"The command to run.\",\r\n            \"signatureRun_Signature0_Param1\": \"A parameter to the command.\",\r\n            \"signatureRun_Signature1\": \"Execute commands without invoking a command shell.\",\r\n            \"signatureShell\": \"Override default shell used for the shell form of commands.\",\r\n            \"signatureShell_Param1\": \"The shell executable to use.\",\r\n            \"signatureShell_Param2\": \"The parameters to the shell executable.\",\r\n            \"signatureStopsignal\": \"Set the system call signal to use to send to the container to exit.\",\r\n            \"signatureStopsignal_Param\": \"The signal to send to the container to exit. This may be an valid unsigned number or a signal name in the SIGNAME format such as SIGKILL.\",\r\n            \"signatureUser_Signature0\": \"Set the user name to use for running any RUN, CMD, and ENTRYPOINT instructions that follow.\",\r\n            \"signatureUser_Signature0_Param\": \"The user name to use.\",\r\n            \"signatureUser_Signature1\": \"Set the user name and user group to use for running any RUN, CMD, and ENTRYPOINT instructions that follow.\",\r\n            \"signatureUser_Signature1_Param1\": \"The group name to use.\",\r\n            \"signatureUser_Signature2\": \"Set the UID to use for running any RUN, CMD, and ENTRYPOINT instructions that follow.\",\r\n            \"signatureUser_Signature2_Param\": \"The UID to use.\",\r\n            \"signatureUser_Signature3\": \"Set the UID and GID to use for running any RUN, CMD, and ENTRYPOINT instructions that follow.\",\r\n            \"signatureUser_Signature3_Param1\": \"The GID to use.\",\r\n            \"signatureVolume_Signature0\": \"Create mount points for holding externally mounted volumes from the native host or other containers.\",\r\n            \"signatureVolume_Signature0_Param0\": \"The name of the mount point.\",\r\n            \"signatureWorkdir\": \"Set the working directory for any ADD, COPY, CMD, ENTRYPOINT, or RUN instructions that follow.\",\r\n            \"signatureWorkdir_Param\": \"The absolute or relative path to use as the working directory. Will be created if it does not exist.\",\r\n            \"proposalArgNameOnly\": \"Define a variable that users can set at build-time when using `docker build`.\\n\\n\",\r\n            \"proposalArgDefaultValue\": \"Define a variable with the given default value that users can override at build-time when using `docker build`.\\n\\n\",\r\n            \"proposalHealthcheckExec\": \"Define how Docker should test the container to check that it is still working. There can only be one HEALTHCHECK instruction in a Dockerfile.\\n\\nSince Docker 1.12\\n\\n\",\r\n            \"proposalHealthcheckNone\": \"Disable the HEALTHCHECK instruction inherited from the base image if one exists. There can only be one HEALTHCHECK instruction in a Dockerfile.\\n\\nSince Docker 1.12\"\r\n        };\r\n        this.markdowns = {\r\n            ADD: this.dockerMessages[\"hoverAdd\"] +\r\n                \"ADD hello.txt /absolute/path\\n\" +\r\n                \"ADD hello.txt relative/to/workdir\",\r\n            ADD_FlagChown: this.dockerMessages[\"hoverAddFlagChown\"],\r\n            ARG: this.dockerMessages[\"hoverArg\"] +\r\n                \"ARG userName\\n\" +\r\n                \"ARG testOutputDir=test\",\r\n            ARG_NameOnly: this.dockerMessages[\"proposalArgNameOnly\"] +\r\n                \"ARG userName\",\r\n            ARG_DefaultValue: this.dockerMessages[\"proposalArgDefaultValue\"] +\r\n                \"ARG testOutputDir=test\",\r\n            CMD: this.dockerMessages[\"hoverCmd\"] +\r\n                \"CMD [ \\\"/bin/ls\\\", \\\"-l\\\" ]\",\r\n            COPY: this.dockerMessages[\"hoverCopy\"] +\r\n                \"COPY hello.txt /absolute/path\\n\" +\r\n                \"COPY hello.txt relative/to/workdir\",\r\n            COPY_FlagChown: this.dockerMessages[\"hoverCopyFlagChown\"],\r\n            COPY_FlagFrom: this.dockerMessages[\"hoverCopyFlagFrom\"],\r\n            ENTRYPOINT: this.dockerMessages[\"hoverEntrypoint\"] +\r\n                \"ENTRYPOINT [ \\\"/opt/app/run.sh\\\", \\\"--port\\\", \\\"8080\\\" ]\",\r\n            ENV: this.dockerMessages[\"hoverEnv\"] +\r\n                \"ENV buildTag=1.0\",\r\n            EXPOSE: this.dockerMessages[\"hoverExpose\"] +\r\n                \"EXPOSE 8080\\n\" +\r\n                \"EXPOSE 80 443 22\\n\" +\r\n                \"EXPOSE 7000-8000\",\r\n            FROM: this.dockerMessages[\"hoverFrom\"] +\r\n                \"FROM baseImage\\n\" +\r\n                \"FROM baseImage:tag\\n\" +\r\n                \"FROM baseImage@digest\",\r\n            HEALTHCHECK: this.dockerMessages[\"hoverHealthcheck\"] +\r\n                \"HEALTHCHECK --interval=10m --timeout=5s \\\\\\n\" +\r\n                \"    CMD curl -f http://localhost/ || exit 1\\n\" +\r\n                \"HEALTHCHECK NONE\",\r\n            HEALTHCHECK_CMD: this.dockerMessages[\"proposalHealthcheckExec\"] +\r\n                \"HEALTHCHECK --interval=10m --timeout=5s \\\\\\n\" +\r\n                \"    CMD curl -f http://localhost/ || exit 1\",\r\n            HEALTHCHECK_FlagInterval: this.dockerMessages[\"hoverHealthcheckFlagInterval\"],\r\n            HEALTHCHECK_FlagRetries: this.dockerMessages[\"hoverHealthcheckFlagRetries\"],\r\n            HEALTHCHECK_FlagStartPeriod: this.dockerMessages[\"hoverHealthcheckFlagStartPeriod\"],\r\n            HEALTHCHECK_FlagTimeout: this.dockerMessages[\"hoverHealthcheckFlagTimeout\"],\r\n            HEALTHCHECK_NONE: this.dockerMessages[\"proposalHealthcheckNone\"],\r\n            LABEL: this.dockerMessages[\"hoverLabel\"] +\r\n                \"LABEL version=\\\"1.0\\\"\",\r\n            MAINTAINER: this.dockerMessages[\"hoverMaintainer\"] +\r\n                \"MAINTAINER name\",\r\n            ONBUILD: this.dockerMessages[\"hoverOnbuild\"] +\r\n                \"ONBUILD ADD . /opt/app/src/extensions\\n\" +\r\n                \"ONBUILD RUN /usr/local/bin/build.sh /opt/app\",\r\n            RUN: this.dockerMessages[\"hoverRun\"] +\r\n                \"RUN apt-get update && apt-get install -y curl\",\r\n            SHELL: this.dockerMessages[\"hoverShell\"] +\r\n                \"SHELL [ \\\"powershell\\\", \\\"-command\\\" ]\",\r\n            STOPSIGNAL: this.dockerMessages[\"hoverStopsignal\"] +\r\n                \"STOPSIGNAL 9\",\r\n            USER: this.dockerMessages[\"hoverUser\"] +\r\n                \"USER daemon\",\r\n            VOLUME: this.dockerMessages[\"hoverVolume\"] +\r\n                \"VOLUME [ \\\"/var/db\\\" ]\",\r\n            WORKDIR: this.dockerMessages[\"hoverWorkdir\"] +\r\n                \"WORKDIR /path/to/workdir\\n\" +\r\n                \"WORKDIR relative/path\",\r\n            escape: this.dockerMessages[\"hoverEscape\"] +\r\n                \"# escape=`\",\r\n            signatureEscape: this.dockerMessages[\"signatureEscape\"],\r\n            signatureEscape_Param: this.dockerMessages[\"signatureEscape_Param\"],\r\n            signatureAdd_Signature0: this.dockerMessages[\"signatureAdd_Signature0\"],\r\n            signatureAdd_Signature0_Param0: this.dockerMessages[\"signatureCopy_Signature0_Param0\"],\r\n            signatureAdd_Signature0_Param1: this.dockerMessages[\"signatureAdd_Signature0_Param1\"],\r\n            signatureAdd_Signature0_Param2: this.dockerMessages[\"signatureAdd_Signature0_Param1\"],\r\n            signatureAdd_Signature0_Param3: this.dockerMessages[\"signatureAdd_Signature0_Param3\"],\r\n            signatureAdd_Signature1: this.dockerMessages[\"signatureAdd_Signature0\"],\r\n            signatureAdd_Signature1_Param0: this.dockerMessages[\"signatureCopy_Signature0_Param0\"],\r\n            signatureAdd_Signature1_Param2: this.dockerMessages[\"signatureAdd_Signature0_Param1\"],\r\n            signatureAdd_Signature1_Param3: this.dockerMessages[\"signatureAdd_Signature0_Param1\"],\r\n            signatureAdd_Signature1_Param4: this.dockerMessages[\"signatureAdd_Signature0_Param3\"],\r\n            signatureArg_Signature0: this.dockerMessages[\"signatureArg_Signature0\"],\r\n            signatureArg_Signature0_Param: this.dockerMessages[\"signatureArg_Signature0_Param\"],\r\n            signatureArg_Signature1: this.dockerMessages[\"signatureArg_Signature1\"],\r\n            signatureArg_Signature1_Param0: this.dockerMessages[\"signatureArg_Signature0_Param\"],\r\n            signatureArg_Signature1_Param1: this.dockerMessages[\"signatureArg_Signature1_Param1\"],\r\n            signatureCmd_Signature0: this.dockerMessages[\"signatureCmd_Signature0\"],\r\n            signatureCmd_Signature0_Param1: this.dockerMessages[\"signatureCmd_Signature0_Param0\"],\r\n            signatureCmd_Signature0_Param2: this.dockerMessages[\"signatureCmd_Signature0_Param1\"],\r\n            signatureCmd_Signature0_Param3: this.dockerMessages[\"signatureCmd_Signature0_Param1\"],\r\n            signatureCmd_Signature1: this.dockerMessages[\"signatureCmd_Signature1\"],\r\n            signatureCmd_Signature1_Param1: this.dockerMessages[\"signatureCmd_Signature1_Param0\"],\r\n            signatureCmd_Signature1_Param2: this.dockerMessages[\"signatureCmd_Signature1_Param0\"],\r\n            signatureCmd_Signature1_Param3: this.dockerMessages[\"signatureCmd_Signature1_Param0\"],\r\n            signatureCmd_Signature2: this.dockerMessages[\"signatureCmd_Signature0\"],\r\n            signatureCmd_Signature2_Param0: this.dockerMessages[\"signatureCmd_Signature0_Param0\"],\r\n            signatureCmd_Signature2_Param1: this.dockerMessages[\"signatureCmd_Signature0_Param1\"],\r\n            signatureCmd_Signature2_Param2: this.dockerMessages[\"signatureCmd_Signature0_Param1\"],\r\n            signatureCopy_Signature0: this.dockerMessages[\"signatureCopy_Signature0\"],\r\n            signatureCopy_Signature0_Param0: this.dockerMessages[\"signatureCopy_Signature0_Param0\"],\r\n            signatureCopy_Signature0_Param1: this.dockerMessages[\"signatureCopy_Signature0_Param1\"],\r\n            signatureCopy_Signature0_Param2: this.dockerMessages[\"signatureCopy_Signature0_Param1\"],\r\n            signatureCopy_Signature0_Param3: this.dockerMessages[\"signatureAdd_Signature0_Param3\"],\r\n            signatureCopy_Signature1: this.dockerMessages[\"signatureCopy_Signature0\"],\r\n            signatureCopy_Signature1_Param0: this.dockerMessages[\"signatureCopy_Signature0_Param0\"],\r\n            signatureCopy_Signature1_Param2: this.dockerMessages[\"signatureCopy_Signature0_Param1\"],\r\n            signatureCopy_Signature1_Param3: this.dockerMessages[\"signatureCopy_Signature0_Param1\"],\r\n            signatureCopy_Signature1_Param4: this.dockerMessages[\"signatureAdd_Signature0_Param3\"],\r\n            signatureCopyFlagFrom: this.dockerMessages[\"signatureCopyFlagFrom\"],\r\n            signatureCopyFlagFrom_Param: this.dockerMessages[\"signatureCopyFlagFrom_Param\"],\r\n            signatureEntrypoint_Signature0: this.dockerMessages[\"signatureEntrypoint_Signature0\"],\r\n            signatureEntrypoint_Signature0_Param1: this.dockerMessages[\"signatureEntrypoint_Signature0_Param1\"],\r\n            signatureEntrypoint_Signature0_Param2: this.dockerMessages[\"signatureEntrypoint_Signature0_Param2\"],\r\n            signatureEntrypoint_Signature0_Param3: this.dockerMessages[\"signatureEntrypoint_Signature0_Param2\"],\r\n            signatureEntrypoint_Signature1: this.dockerMessages[\"signatureEntrypoint_Signature0\"],\r\n            signatureEntrypoint_Signature1_Param0: this.dockerMessages[\"signatureEntrypoint_Signature0_Param1\"],\r\n            signatureEntrypoint_Signature1_Param1: this.dockerMessages[\"signatureEntrypoint_Signature0_Param2\"],\r\n            signatureEntrypoint_Signature1_Param2: this.dockerMessages[\"signatureEntrypoint_Signature0_Param2\"],\r\n            signatureEnv_Signature0: this.dockerMessages[\"signatureEnv_Signature0\"],\r\n            signatureEnv_Signature0_Param0: this.dockerMessages[\"signatureEnv_Signature0_Param0\"],\r\n            signatureEnv_Signature0_Param1: this.dockerMessages[\"signatureEnv_Signature0_Param1\"],\r\n            signatureEnv_Signature1: this.dockerMessages[\"signatureEnv_Signature0\"],\r\n            signatureEnv_Signature1_Param0: this.dockerMessages[\"signatureEnv_Signature0_Param0\"],\r\n            signatureEnv_Signature1_Param1: this.dockerMessages[\"signatureEnv_Signature0_Param1\"],\r\n            signatureEnv_Signature2: this.dockerMessages[\"signatureEnv_Signature0\"],\r\n            signatureEnv_Signature2_Param0: this.dockerMessages[\"signatureEnv_Signature0_Param0\"],\r\n            signatureEnv_Signature2_Param1: this.dockerMessages[\"signatureEnv_Signature0_Param1\"],\r\n            signatureEnv_Signature2_Param2: this.dockerMessages[\"signatureEnv_Signature0_Param0\"],\r\n            signatureEnv_Signature2_Param3: this.dockerMessages[\"signatureEnv_Signature0_Param1\"],\r\n            signatureExpose: this.dockerMessages[\"signatureExpose\"],\r\n            signatureExpose_Param0: this.dockerMessages[\"signatureExpose_Param0\"],\r\n            signatureExpose_Param1: this.dockerMessages[\"signatureExpose_Param0\"],\r\n            signatureFrom_Signature0: this.dockerMessages[\"signatureFrom_Signature0\"],\r\n            signatureFrom_Signature0_Param: this.dockerMessages[\"signatureFrom_Signature0_Param\"],\r\n            signatureFrom_Signature1: this.dockerMessages[\"signatureFrom_Signature0\"],\r\n            signatureFrom_Signature1_Param0: this.dockerMessages[\"signatureFrom_Signature0_Param\"],\r\n            signatureFrom_Signature1_Param1: this.dockerMessages[\"signatureFrom_Signature1_Param1\"],\r\n            signatureFrom_Signature2: this.dockerMessages[\"signatureFrom_Signature0\"],\r\n            signatureFrom_Signature2_Param0: this.dockerMessages[\"signatureFrom_Signature0_Param\"],\r\n            signatureFrom_Signature2_Param1: this.dockerMessages[\"signatureFrom_Signature2_Param1\"],\r\n            signatureFrom_Signature3: this.dockerMessages[\"signatureFrom_Signature3\"],\r\n            signatureFrom_Signature3_Param0: this.dockerMessages[\"signatureFrom_Signature0_Param\"],\r\n            signatureFrom_Signature3_Param2: this.dockerMessages[\"signatureFrom_Signature3_Param2\"],\r\n            signatureFrom_Signature4: this.dockerMessages[\"signatureFrom_Signature3\"],\r\n            signatureFrom_Signature4_Param0: this.dockerMessages[\"signatureFrom_Signature0_Param\"],\r\n            signatureFrom_Signature4_Param1: this.dockerMessages[\"signatureFrom_Signature1_Param1\"],\r\n            signatureFrom_Signature4_Param3: this.dockerMessages[\"signatureFrom_Signature3_Param2\"],\r\n            signatureFrom_Signature5: this.dockerMessages[\"signatureFrom_Signature3\"],\r\n            signatureFrom_Signature5_Param0: this.dockerMessages[\"signatureFrom_Signature0_Param\"],\r\n            signatureFrom_Signature5_Param1: this.dockerMessages[\"signatureFrom_Signature2_Param1\"],\r\n            signatureFrom_Signature5_Param3: this.dockerMessages[\"signatureFrom_Signature3_Param2\"],\r\n            signatureHealthcheck: this.dockerMessages[\"signatureHealthcheck_Signature0\"],\r\n            signatureHealthcheck_Signature0: this.dockerMessages[\"signatureHealthcheck_Signature0\"],\r\n            signatureHealthcheck_Signature1: this.dockerMessages[\"signatureHealthcheck_Signature0\"],\r\n            signatureHealthcheck_Signature1_Param0: this.dockerMessages[\"signatureCopy_Signature0_Param0\"],\r\n            signatureHealthcheck_Signature1_Param2: this.dockerMessages[\"signatureHealthcheck_Signature1_Param2\"],\r\n            signatureHealthcheck_Signature2: this.dockerMessages[\"signatureHealthcheck_Signature0\"],\r\n            signatureHealthcheckFlagInterval_Param: this.dockerMessages[\"hoverHealthcheckFlagInterval\"],\r\n            signatureHealthcheckFlagRetries_Param: this.dockerMessages[\"hoverHealthcheckFlagRetries\"],\r\n            signatureHealthcheckFlagStartPeriod_Param: this.dockerMessages[\"hoverHealthcheckFlagStartPeriod\"],\r\n            signatureHealthcheckFlagTimeout_Param: this.dockerMessages[\"hoverHealthcheckFlagTimeout\"],\r\n            signatureLabel_Signature0: this.dockerMessages[\"signatureLabel_Signature0\"],\r\n            signatureLabel_Signature0_Param0: this.dockerMessages[\"signatureLabel_Signature0_Param0\"],\r\n            signatureLabel_Signature0_Param1: this.dockerMessages[\"signatureLabel_Signature0_Param1\"],\r\n            signatureLabel_Signature1: this.dockerMessages[\"signatureLabel_Signature0\"],\r\n            signatureLabel_Signature1_Param0: this.dockerMessages[\"signatureLabel_Signature0_Param0\"],\r\n            signatureLabel_Signature1_Param1: this.dockerMessages[\"signatureLabel_Signature0_Param1\"],\r\n            signatureLabel_Signature2: this.dockerMessages[\"signatureLabel_Signature0\"],\r\n            signatureLabel_Signature2_Param0: this.dockerMessages[\"signatureLabel_Signature0_Param0\"],\r\n            signatureLabel_Signature2_Param1: this.dockerMessages[\"signatureLabel_Signature0_Param1\"],\r\n            signatureLabel_Signature2_Param2: this.dockerMessages[\"signatureLabel_Signature0_Param0\"],\r\n            signatureLabel_Signature2_Param3: this.dockerMessages[\"signatureLabel_Signature0_Param1\"],\r\n            signatureMaintainer: this.dockerMessages[\"signatureMaintainer\"],\r\n            signatureMaintainer_Param: this.dockerMessages[\"signatureMaintainer_Param\"],\r\n            signatureOnbuild: this.dockerMessages[\"signatureOnbuild\"],\r\n            signatureOnbuild_Param: this.dockerMessages[\"signatureOnbuild_Param\"],\r\n            signatureRun_Signature0: this.dockerMessages[\"signatureRun_Signature0\"],\r\n            signatureRun_Signature0_Param0: this.dockerMessages[\"signatureRun_Signature0_Param0\"],\r\n            signatureRun_Signature0_Param1: this.dockerMessages[\"signatureRun_Signature0_Param1\"],\r\n            signatureRun_Signature0_Param2: this.dockerMessages[\"signatureRun_Signature0_Param1\"],\r\n            signatureRun_Signature1: this.dockerMessages[\"signatureRun_Signature1\"],\r\n            signatureRun_Signature1_Param1: this.dockerMessages[\"signatureRun_Signature0_Param0\"],\r\n            signatureRun_Signature1_Param2: this.dockerMessages[\"signatureRun_Signature0_Param1\"],\r\n            signatureRun_Signature1_Param3: this.dockerMessages[\"signatureRun_Signature0_Param1\"],\r\n            signatureShell: this.dockerMessages[\"signatureShell\"],\r\n            signatureShell_Param1: this.dockerMessages[\"signatureShell_Param1\"],\r\n            signatureShell_Param2: this.dockerMessages[\"signatureShell_Param2\"],\r\n            signatureShell_Param3: this.dockerMessages[\"signatureShell_Param2\"],\r\n            signatureStopsignal: this.dockerMessages[\"signatureStopsignal\"],\r\n            signatureStopsignal_Param: this.dockerMessages[\"signatureStopsignal_Param\"],\r\n            signatureUser_Signature0: this.dockerMessages[\"signatureUser_Signature0\"],\r\n            signatureUser_Signature0_Param: this.dockerMessages[\"signatureUser_Signature0_Param\"],\r\n            signatureUser_Signature1: this.dockerMessages[\"signatureUser_Signature1\"],\r\n            signatureUser_Signature1_Param0: this.dockerMessages[\"signatureUser_Signature0\"],\r\n            signatureUser_Signature1_Param1: this.dockerMessages[\"signatureUser_Signature1_Param1\"],\r\n            signatureUser_Signature2: this.dockerMessages[\"signatureUser_Signature2\"],\r\n            signatureUser_Signature2_Param: this.dockerMessages[\"signatureUser_Signature2_Param\"],\r\n            signatureUser_Signature3: this.dockerMessages[\"signatureUser_Signature3\"],\r\n            signatureUser_Signature3_Param0: this.dockerMessages[\"signatureUser_Signature2_Param\"],\r\n            signatureUser_Signature3_Param1: this.dockerMessages[\"signatureUser_Signature3_Param1\"],\r\n            signatureVolume_Signature0: this.dockerMessages[\"signatureVolume_Signature0\"],\r\n            signatureVolume_Signature0_Param0: this.dockerMessages[\"signatureVolume_Signature0_Param0\"],\r\n            signatureVolume_Signature0_Param1: this.dockerMessages[\"signatureVolume_Signature0_Param0\"],\r\n            signatureVolume_Signature1: this.dockerMessages[\"signatureVolume_Signature0\"],\r\n            signatureVolume_Signature1_Param1: this.dockerMessages[\"signatureVolume_Signature0_Param0\"],\r\n            signatureVolume_Signature1_Param2: this.dockerMessages[\"signatureVolume_Signature0_Param0\"],\r\n            signatureWorkdir: this.dockerMessages[\"signatureWorkdir\"],\r\n            signatureWorkdir_Param: this.dockerMessages[\"signatureWorkdir_Param\"]\r\n        };\r\n    }\r\n    PlainTextDocumentation.prototype.getDocumentation = function (data) {\r\n        return this.markdowns[data];\r\n    };\r\n    return PlainTextDocumentation;\r\n}());\r\nexports.PlainTextDocumentation = PlainTextDocumentation;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerPlainText.js\n// module id = 98\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar languageService_1 = require(\"./languageService\");\r\nvar CommandIds;\r\n(function (CommandIds) {\r\n    CommandIds[\"LOWERCASE\"] = \"docker.command.convertToLowercase\";\r\n    CommandIds[\"UPPERCASE\"] = \"docker.command.convertToUppercase\";\r\n    CommandIds[\"EXTRA_ARGUMENT\"] = \"docker.command.removeExtraArgument\";\r\n    CommandIds[\"DIRECTIVE_TO_BACKTICK\"] = \"docker.command.directiveToBacktick\";\r\n    CommandIds[\"DIRECTIVE_TO_BACKSLASH\"] = \"docker.command.directiveToBackslash\";\r\n    CommandIds[\"FLAG_TO_CHOWN\"] = \"docker.command.flagToChown\";\r\n    CommandIds[\"FLAG_TO_COPY_FROM\"] = \"docker.command.flagToCopyFrom\";\r\n    CommandIds[\"FLAG_TO_HEALTHCHECK_INTERVAL\"] = \"docker.command.flagToHealthcheckInterval\";\r\n    CommandIds[\"FLAG_TO_HEALTHCHECK_RETRIES\"] = \"docker.command.flagToHealthcheckRetries\";\r\n    CommandIds[\"FLAG_TO_HEALTHCHECK_START_PERIOD\"] = \"docker.command.flagToHealthcheckStartPeriod\";\r\n    CommandIds[\"FLAG_TO_HEALTHCHECK_TIMEOUT\"] = \"docker.command.flagToHealthcheckTimeout\";\r\n    CommandIds[\"REMOVE_EMPTY_CONTINUATION_LINE\"] = \"docker.command.removeEmptyContinuationLine\";\r\n    CommandIds[\"CONVERT_TO_AS\"] = \"docker.command.convertToAS\";\r\n})(CommandIds = exports.CommandIds || (exports.CommandIds = {}));\r\nvar DockerfileLanguageServiceFactory;\r\n(function (DockerfileLanguageServiceFactory) {\r\n    function createLanguageService() {\r\n        return new languageService_1.LanguageService();\r\n    }\r\n    DockerfileLanguageServiceFactory.createLanguageService = createLanguageService;\r\n})(DockerfileLanguageServiceFactory = exports.DockerfileLanguageServiceFactory || (exports.DockerfileLanguageServiceFactory = {}));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/main.js\n// module id = 99\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/url.js\n// module id = 100\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\nexports.RequestType = vscode_jsonrpc_1.RequestType;\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\nconst protocol_1 = require(\"./protocol\");\nexports.InitializeError = protocol_1.InitializeError;\nconst is = require(\"./utils/is\");\nconst async_1 = require(\"./utils/async\");\nconst UUID = require(\"./utils/uuid\");\n__export(require(\"vscode-languageserver-types\"));\n__export(require(\"./protocol\"));\n/**\n * An action to be performed when the connection is producing errors.\n */\nvar ErrorAction;\n(function (ErrorAction) {\n    /**\n     * Continue running the server.\n     */\n    ErrorAction[ErrorAction[\"Continue\"] = 1] = \"Continue\";\n    /**\n     * Shutdown the server.\n     */\n    ErrorAction[ErrorAction[\"Shutdown\"] = 2] = \"Shutdown\";\n})(ErrorAction = exports.ErrorAction || (exports.ErrorAction = {}));\n/**\n * An action to be performed when the connection to a server got closed.\n */\nvar CloseAction;\n(function (CloseAction) {\n    /**\n     * Don't restart the server. The connection stays closed.\n     */\n    CloseAction[CloseAction[\"DoNotRestart\"] = 1] = \"DoNotRestart\";\n    /**\n     * Restart the server.\n     */\n    CloseAction[CloseAction[\"Restart\"] = 2] = \"Restart\";\n})(CloseAction = exports.CloseAction || (exports.CloseAction = {}));\nclass DefaultErrorHandler {\n    constructor(name, client) {\n        this.name = name;\n        this.client = client;\n        this.restarts = [];\n    }\n    error(_error, _message, count) {\n        if (count && count <= 3) {\n            return ErrorAction.Continue;\n        }\n        return ErrorAction.Shutdown;\n    }\n    closed() {\n        this.restarts.push(Date.now());\n        if (this.restarts.length < 5) {\n            return CloseAction.Restart;\n        }\n        else {\n            let diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\n            if (diff <= 3 * 60 * 1000) {\n                if (this.client.window) {\n                    this.client.window.showMessage(protocol_1.MessageType.Error, `The ${this.name} server crashed 5 times in the last 3 minutes. The server will not be restarted.`);\n                }\n                return CloseAction.DoNotRestart;\n            }\n            else {\n                this.restarts.shift();\n                return CloseAction.Restart;\n            }\n        }\n    }\n}\nvar RevealOutputChannelOn;\n(function (RevealOutputChannelOn) {\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Info\"] = 1] = \"Info\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Warn\"] = 2] = \"Warn\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Error\"] = 3] = \"Error\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Never\"] = 4] = \"Never\";\n})(RevealOutputChannelOn = exports.RevealOutputChannelOn || (exports.RevealOutputChannelOn = {}));\nvar State;\n(function (State) {\n    State[State[\"Stopped\"] = 1] = \"Stopped\";\n    State[State[\"Running\"] = 2] = \"Running\";\n})(State = exports.State || (exports.State = {}));\nvar ClientState;\n(function (ClientState) {\n    ClientState[ClientState[\"Initial\"] = 0] = \"Initial\";\n    ClientState[ClientState[\"Starting\"] = 1] = \"Starting\";\n    ClientState[ClientState[\"StartFailed\"] = 2] = \"StartFailed\";\n    ClientState[ClientState[\"Running\"] = 3] = \"Running\";\n    ClientState[ClientState[\"Stopping\"] = 4] = \"Stopping\";\n    ClientState[ClientState[\"Stopped\"] = 5] = \"Stopped\";\n})(ClientState || (ClientState = {}));\nclass DocumentNotifiactions {\n    constructor(_client, _event, _type, _createParams, _selectorFilter) {\n        this._client = _client;\n        this._event = _event;\n        this._type = _type;\n        this._createParams = _createParams;\n        this._selectorFilter = _selectorFilter;\n        this._selectors = new Map();\n    }\n    static textDocumentFilter(languages, selectors, textDocument) {\n        for (const selector of selectors) {\n            if (languages.match(selector, textDocument)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = this._event(this.callback, this);\n        }\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\n    }\n    callback(data) {\n        if (!this._selectorFilter || this._selectorFilter(this._selectors.values(), data)) {\n            this._client.sendNotification(this._type, this._createParams(data));\n            this.notificationSent(data);\n        }\n    }\n    notificationSent(_data) {\n    }\n    unregister(id) {\n        this._selectors.delete(id);\n        if (this._selectors.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    dispose() {\n        if (this._listener) {\n            this._listener.dispose();\n        }\n    }\n}\nclass DidOpenTextDocumentFeature extends DocumentNotifiactions {\n    constructor(client, _syncedDocuments) {\n        super(client, client.workspace.onDidOpenTextDocument, protocol_1.DidOpenTextDocumentNotification.type, (textDocument) => {\n            const { uri, languageId, version } = textDocument;\n            const text = textDocument.getText();\n            return {\n                textDocument: {\n                    uri, languageId, version, text\n                }\n            };\n        }, (selectors, data) => DocumentNotifiactions.textDocumentFilter(client.languages, selectors, data));\n        this._syncedDocuments = _syncedDocuments;\n    }\n    register(data) {\n        super.register(data);\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        let documentSelector = data.registerOptions.documentSelector;\n        this._client.workspace.textDocuments.forEach((textDocument) => {\n            let uri = textDocument.uri;\n            if (!textDocument || this._syncedDocuments.has(uri)) {\n                return;\n            }\n            if (this._client.languages.match(documentSelector, textDocument)) {\n                this._client.sendNotification(this._type, this._createParams(textDocument));\n                this._syncedDocuments.set(uri, textDocument);\n            }\n        });\n    }\n    notificationSent(textDocument) {\n        super.notificationSent(textDocument);\n        this._syncedDocuments.set(textDocument.uri, textDocument);\n    }\n}\nclass DidCloseTextDocumentFeature extends DocumentNotifiactions {\n    constructor(client, _syncedDocuments) {\n        super(client, client.workspace.onDidCloseTextDocument, protocol_1.DidCloseTextDocumentNotification.type, (textDocument) => {\n            return {\n                textDocument: {\n                    uri: textDocument.uri\n                }\n            };\n        }, (selectors, data) => DocumentNotifiactions.textDocumentFilter(client.languages, selectors, data));\n        this._syncedDocuments = _syncedDocuments;\n    }\n    notificationSent(textDocument) {\n        super.notificationSent(textDocument);\n        this._syncedDocuments.delete(textDocument.uri);\n    }\n    unregister(id) {\n        let selector = this._selectors.get(id);\n        super.unregister(id);\n        let selectors = this._selectors.values();\n        this._syncedDocuments.forEach((textDocument) => {\n            if (this._client.languages.match(selector, textDocument) && !this._selectorFilter(selectors, textDocument)) {\n                this._client.sendNotification(this._type, this._createParams(textDocument));\n                this._syncedDocuments.delete(textDocument.uri);\n            }\n        });\n    }\n}\nclass DidChangeTextDocumentFeature {\n    constructor(_client) {\n        this._client = _client;\n        this._changeData = new Map();\n        this._forcingDelivery = false;\n        this._workspace = _client.workspace;\n        this._languages = _client.languages;\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = this._workspace.onDidChangeTextDocument(this.callback, this);\n        }\n        this._changeData.set(data.id, {\n            documentSelector: data.registerOptions.documentSelector,\n            syncKind: data.registerOptions.syncKind\n        });\n    }\n    callback(event) {\n        for (const changeData of this._changeData.values()) {\n            if (this._languages.match(changeData.documentSelector, event.textDocument)) {\n                if (changeData.syncKind === protocol_1.TextDocumentSyncKind.Incremental) {\n                    this.sendDidChangeTextDocumentNotification(event.textDocument, event.contentChanges);\n                }\n                else if (changeData.syncKind === protocol_1.TextDocumentSyncKind.Full) {\n                    if (this._changeDelayer) {\n                        if (this._changeDelayer.uri !== event.textDocument.uri) {\n                            // Use this force delivery to track boolean state. Otherwise we might call two times.\n                            this.forceDelivery();\n                            this._changeDelayer.uri = event.textDocument.uri;\n                        }\n                        this._changeDelayer.delayer.trigger(() => {\n                            this.sendDidChangeTextDocumentNotification(event.textDocument);\n                        });\n                    }\n                    else {\n                        this._changeDelayer = {\n                            uri: event.textDocument.uri,\n                            delayer: new async_1.Delayer(200)\n                        };\n                        this._changeDelayer.delayer.trigger(() => {\n                            this.sendDidChangeTextDocumentNotification(event.textDocument);\n                        }, -1);\n                    }\n                }\n            }\n        }\n    }\n    sendDidChangeTextDocumentNotification(textDocument, contentChanges = [{ text: textDocument.getText() }]) {\n        this._client.sendNotification(protocol_1.DidChangeTextDocumentNotification.type, {\n            textDocument: {\n                uri: textDocument.uri,\n                version: textDocument.version\n            },\n            contentChanges\n        });\n    }\n    unregister(id) {\n        this._changeData.delete(id);\n        if (this._changeData.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    dispose() {\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    forceDelivery() {\n        if (this._forcingDelivery || !this._changeDelayer) {\n            return;\n        }\n        try {\n            this._forcingDelivery = true;\n            this._changeDelayer.delayer.forceDelivery();\n        }\n        finally {\n            this._forcingDelivery = false;\n        }\n    }\n}\nclass WillSaveWaitUntilFeature {\n    constructor(_client) {\n        this._client = _client;\n        this._selectors = new Map();\n        this.workspace = _client.workspace;\n        this.languages = _client.languages;\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = this.workspace.onWillSaveTextDocument(this.callback, this);\n        }\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\n    }\n    callback(event) {\n        if (DocumentNotifiactions.textDocumentFilter(this.languages, this._selectors.values(), event.textDocument)) {\n            event.waitUntil(this._client.sendRequest(protocol_1.WillSaveTextDocumentWaitUntilRequest.type, event));\n        }\n    }\n    unregister(id) {\n        this._selectors.delete(id);\n        if (this._selectors.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    dispose() {\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n}\nclass DidSaveTextDocumentFeature extends DocumentNotifiactions {\n    constructor(client) {\n        super(client, client.workspace.onDidSaveTextDocument, protocol_1.DidSaveTextDocumentNotification.type, (textDocument) => {\n            let result = {\n                textDocument: {\n                    uri: textDocument.uri,\n                    version: textDocument.version\n                }\n            };\n            if (this._includeText) {\n                result.text = textDocument.getText();\n            }\n            return result;\n        }, (selectors, data) => DocumentNotifiactions.textDocumentFilter(client.languages, selectors, data));\n    }\n    register(data) {\n        this._includeText = !!data.registerOptions.includeText;\n        super.register(data);\n    }\n}\nclass LanguageFeature {\n    constructor(_createProvider) {\n        this._createProvider = _createProvider;\n        this._providers = new Map();\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        let provider = this._createProvider(data.registerOptions);\n        if (provider) {\n            this._providers.set(data.id, provider);\n        }\n    }\n    unregister(id) {\n        let provider = this._providers.get(id);\n        if (provider) {\n            provider.dispose();\n        }\n    }\n    dispose() {\n        this._providers.forEach((value) => {\n            value.dispose();\n        });\n    }\n}\nclass ExecuteCommandFeature {\n    constructor(_client, _logger) {\n        this._client = _client;\n        this._logger = _logger;\n        this._commands = new Map();\n    }\n    register(data) {\n        if (data.registerOptions.commands) {\n            let disposeables = [];\n            for (const command of data.registerOptions.commands) {\n                disposeables.push(this._client.commands.registerCommand(command, (...args) => {\n                    let params = {\n                        command,\n                        arguments: args\n                    };\n                    this._client.sendRequest(protocol_1.ExecuteCommandRequest.type, params).then(undefined, (error) => { this._logger(protocol_1.ExecuteCommandRequest.type, error); });\n                }));\n            }\n            this._commands.set(data.id, disposeables);\n        }\n    }\n    unregister(id) {\n        let disposeables = this._commands.get(id);\n        if (disposeables) {\n            disposeables.forEach(disposable => disposable.dispose());\n        }\n    }\n    dispose() {\n        this._commands.forEach((value) => {\n            value.forEach(disposable => disposable.dispose());\n        });\n    }\n}\nclass BaseLanguageClient {\n    constructor(options) {\n        this._registeredHandlers = new Map();\n        this._name = options.name;\n        this._id = options.id || options.name.toLowerCase();\n        this.languages = options.services.languages;\n        this.workspace = options.services.workspace;\n        this.commands = options.services.commands;\n        this.window = options.services.window;\n        this.connectionProvider = options.connectionProvider;\n        const clientOptions = options.clientOptions;\n        this._clientOptions = Object.assign({}, clientOptions, { documentSelector: clientOptions.documentSelector || [], synchronize: clientOptions.synchronize || {}, outputChannelName: clientOptions.outputChannelName || this._name, revealOutputChannelOn: clientOptions.revealOutputChannelOn || RevealOutputChannelOn.Error, errorHandler: clientOptions.errorHandler || new DefaultErrorHandler(this._name, this) });\n        this._clientOptions.synchronize = this._clientOptions.synchronize || {};\n        this.state = ClientState.Initial;\n        this._connectionPromise = undefined;\n        this._resolvedConnection = undefined;\n        this._outputChannel = undefined;\n        this._listeners = undefined;\n        this._providers = undefined;\n        this._diagnostics = undefined;\n        this._fileEvents = [];\n        this._fileEventDelayer = new async_1.Delayer(250);\n        this._onReady = new Promise((resolve, reject) => {\n            this._onReadyCallbacks = { resolve, reject };\n        });\n        this._telemetryEmitter = new vscode_jsonrpc_1.Emitter();\n        this._stateChangeEmitter = new vscode_jsonrpc_1.Emitter();\n        this._tracer = {\n            log: (message, data) => {\n                this.logTrace(message, data);\n            }\n        };\n    }\n    get state() {\n        return this._state;\n    }\n    set state(value) {\n        let oldState = this.getPublicState();\n        this._state = value;\n        let newState = this.getPublicState();\n        if (newState !== oldState) {\n            this._stateChangeEmitter.fire({ oldState, newState });\n        }\n    }\n    getPublicState() {\n        if (this.state === ClientState.Running) {\n            return State.Running;\n        }\n        else {\n            return State.Stopped;\n        }\n    }\n    sendRequest(type, ...params) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        this.forceDocumentSync();\n        try {\n            return this._resolvedConnection.sendRequest(type, ...params);\n        }\n        catch (error) {\n            this.error(`Sending request ${is.string(type) ? type : type.method} failed.`, error);\n            throw error;\n        }\n    }\n    onRequest(type, handler) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        try {\n            this._resolvedConnection.onRequest(type, handler);\n        }\n        catch (error) {\n            this.error(`Registering request handler ${is.string(type) ? type : type.method} failed.`, error);\n            throw error;\n        }\n    }\n    sendNotification(type, params) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        this.forceDocumentSync();\n        try {\n            this._resolvedConnection.sendNotification(type, params);\n        }\n        catch (error) {\n            this.error(`Sending notification ${is.string(type) ? type : type.method} failed.`, error);\n            throw error;\n        }\n    }\n    onNotification(type, handler) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        try {\n            this._resolvedConnection.onNotification(type, handler);\n        }\n        catch (error) {\n            this.error(`Registering notification handler ${is.string(type) ? type : type.method} failed.`, error);\n            throw error;\n        }\n    }\n    get onTelemetry() {\n        return this._telemetryEmitter.event;\n    }\n    get onDidChangeState() {\n        return this._stateChangeEmitter.event;\n    }\n    get outputChannel() {\n        if (!this._outputChannel && this.window && this.window.createOutputChannel) {\n            this._outputChannel = this.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);\n        }\n        return this._outputChannel;\n    }\n    get diagnostics() {\n        return this._diagnostics;\n    }\n    createDefaultErrorHandler() {\n        return new DefaultErrorHandler(this._name, this);\n    }\n    set trace(value) {\n        this._trace = value;\n        this.onReady().then(() => {\n            this.resolveConnection().then((connection) => {\n                connection.trace(value, this._tracer);\n            });\n        }, () => {\n        });\n    }\n    data2String(data) {\n        if (data instanceof vscode_jsonrpc_1.ResponseError) {\n            const responseError = data;\n            return `  Message: ${responseError.message}\\n  Code: ${responseError.code} ${responseError.data ? '\\n' + responseError.data.toString() : ''}`;\n        }\n        if (data instanceof Error) {\n            if (is.string(data.stack)) {\n                return data.stack;\n            }\n            return data.message;\n        }\n        if (is.string(data)) {\n            return data;\n        }\n        return data.toString();\n    }\n    info(message, data) {\n        const outputChannel = this.outputChannel;\n        if (outputChannel) {\n            outputChannel.appendLine(`[Info  - ${(new Date().toLocaleTimeString())}] ${message}`);\n            if (data) {\n                outputChannel.appendLine(this.data2String(data));\n            }\n            if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Info) {\n                outputChannel.show(true);\n            }\n        }\n    }\n    warn(message, data) {\n        const outputChannel = this.outputChannel;\n        if (outputChannel) {\n            outputChannel.appendLine(`[Warn  - ${(new Date().toLocaleTimeString())}] ${message}`);\n            if (data) {\n                outputChannel.appendLine(this.data2String(data));\n            }\n            if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Warn) {\n                outputChannel.show(true);\n            }\n        }\n    }\n    error(message, data) {\n        const outputChannel = this.outputChannel;\n        if (outputChannel) {\n            outputChannel.appendLine(`[Error - ${(new Date().toLocaleTimeString())}] ${message}`);\n            if (data) {\n                outputChannel.appendLine(this.data2String(data));\n            }\n            if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Error) {\n                outputChannel.show(true);\n            }\n        }\n    }\n    logTrace(message, data) {\n        const outputChannel = this.outputChannel;\n        if (outputChannel) {\n            outputChannel.appendLine(`[Trace - ${(new Date().toLocaleTimeString())}] ${message}`);\n            if (data) {\n                outputChannel.appendLine(this.data2String(data));\n            }\n            outputChannel.show(true);\n        }\n    }\n    needsStart() {\n        return this.state === ClientState.Initial || this.state === ClientState.Stopping || this.state === ClientState.Stopped;\n    }\n    needsStop() {\n        return this.state === ClientState.Starting || this.state === ClientState.Running;\n    }\n    onReady() {\n        return this._onReady;\n    }\n    isConnectionActive() {\n        return this.state === ClientState.Running && !!this._resolvedConnection;\n    }\n    start() {\n        this._listeners = [];\n        this._providers = [];\n        // If we restart then the diagnostics collection is reused.\n        if (!this._diagnostics && this.languages.createDiagnosticCollection) {\n            this._diagnostics = this.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName);\n        }\n        this.state = ClientState.Starting;\n        this.resolveConnection().then((connection) => {\n            connection.onLogMessage((message) => {\n                switch (message.type) {\n                    case protocol_1.MessageType.Error:\n                        this.error(message.message);\n                        break;\n                    case protocol_1.MessageType.Warning:\n                        this.warn(message.message);\n                        break;\n                    case protocol_1.MessageType.Info:\n                        this.info(message.message);\n                        break;\n                    default: {\n                        if (this.outputChannel) {\n                            this.outputChannel.appendLine(message.message);\n                        }\n                    }\n                }\n            });\n            const window = this.window;\n            if (window) {\n                connection.onShowMessage((message) => window.showMessage(message.type, message.message));\n                connection.onRequest(protocol_1.ShowMessageRequest.type, (params) => {\n                    const actions = params.actions || [];\n                    return window.showMessage(params.type, params.message, ...actions);\n                });\n            }\n            connection.onTelemetry((data) => {\n                this._telemetryEmitter.fire(data);\n            });\n            this.initRegistrationHandlers(connection);\n            connection.listen();\n            // Error is handled in the intialize call.\n            this.initialize(connection).then(undefined, () => { });\n        }, (error) => {\n            this.state = ClientState.StartFailed;\n            this._onReadyCallbacks.reject(error);\n            this.error('Starting client failed', error);\n            if (this.window) {\n                this.window.showMessage(protocol_1.MessageType.Error, `Couldn't start client ${this._name}`);\n            }\n        });\n        return vscode_jsonrpc_1.Disposable.create(() => {\n            if (this.needsStop()) {\n                this.stop();\n            }\n        });\n    }\n    resolveConnection() {\n        if (!this._connectionPromise) {\n            this._connectionPromise = this.createConnection();\n        }\n        return this._connectionPromise;\n    }\n    createClientCapabilities() {\n        return {\n            workspace: Object.assign({}, this.workspace.capabilities, { didChangeConfiguration: {\n                    dynamicRegistration: false\n                }, didChangeWatchedFiles: {\n                    dynamicRegistration: false\n                }, symbol: {\n                    dynamicRegistration: true\n                }, executeCommand: {\n                    dynamicRegistration: true\n                } }),\n            textDocument: {\n                synchronization: Object.assign({}, this.workspace.synchronization, { dynamicRegistration: true }),\n                completion: Object.assign({}, this.languages.completion, { dynamicRegistration: true }),\n                hover: {\n                    dynamicRegistration: true\n                },\n                signatureHelp: {\n                    dynamicRegistration: true\n                },\n                references: {\n                    dynamicRegistration: true\n                },\n                documentHighlight: {\n                    dynamicRegistration: true\n                },\n                documentSymbol: {\n                    dynamicRegistration: true\n                },\n                formatting: {\n                    dynamicRegistration: true\n                },\n                rangeFormatting: {\n                    dynamicRegistration: true\n                },\n                onTypeFormatting: {\n                    dynamicRegistration: true\n                },\n                definition: {\n                    dynamicRegistration: true\n                },\n                codeAction: {\n                    dynamicRegistration: true\n                },\n                codeLens: {\n                    dynamicRegistration: true\n                },\n                documentLink: {\n                    dynamicRegistration: true\n                },\n                rename: {\n                    dynamicRegistration: true\n                }\n            }\n        };\n    }\n    initialize(connection) {\n        this.refreshTrace(connection, false);\n        let initOption = this._clientOptions.initializationOptions;\n        const rootPath = this.workspace && this.workspace.rootPath || null;\n        const rootUri = this.workspace && this.workspace.rootUri || null;\n        const clientCapabilities = this.createClientCapabilities();\n        let initParams = {\n            processId: process.pid,\n            rootPath, rootUri,\n            capabilities: clientCapabilities,\n            initializationOptions: is.func(initOption) ? initOption() : initOption,\n            trace: vscode_jsonrpc_1.Trace.toString(this._trace)\n        };\n        return connection.initialize(initParams).then((result) => {\n            this._resolvedConnection = connection;\n            this.state = ClientState.Running;\n            this._capabilites = result.capabilities;\n            connection.onDiagnostics(params => this.handleDiagnostics(params));\n            // backward compatibility\n            connection.onRequest('client/registerFeature', params => this.handleRegistrationRequest(params));\n            connection.onRequest(protocol_1.RegistrationRequest.type, params => this.handleRegistrationRequest(params));\n            // backward compatibility\n            connection.onRequest('client/unregisterFeature', params => this.handleUnregistrationRequest(params));\n            connection.onRequest(protocol_1.UnregistrationRequest.type, params => this.handleUnregistrationRequest(params));\n            connection.onRequest(protocol_1.ApplyWorkspaceEditRequest.type, params => this.handleApplyWorkspaceEdit(params));\n            connection.sendNotification(protocol_1.InitializedNotification.type, {});\n            this.hookFileEvents(connection);\n            this.hookConfigurationChanged(connection);\n            if (this._clientOptions.documentSelector) {\n                let selectorOptions = { documentSelector: this._clientOptions.documentSelector };\n                let textDocumentSyncOptions = undefined;\n                if (is.number(this._capabilites.textDocumentSync) && this._capabilites.textDocumentSync !== protocol_1.TextDocumentSyncKind.None) {\n                    textDocumentSyncOptions = {\n                        openClose: true,\n                        change: this._capabilites.textDocumentSync,\n                        save: {\n                            includeText: false\n                        }\n                    };\n                }\n                else if (this._capabilites.textDocumentSync !== void 0 && this._capabilites.textDocumentSync === null) {\n                    textDocumentSyncOptions = this._capabilites.textDocumentSync;\n                }\n                if (textDocumentSyncOptions) {\n                    if (textDocumentSyncOptions.openClose) {\n                        this.registerHandler(protocol_1.DidOpenTextDocumentNotification.type.method, { id: UUID.generateUuid(), registerOptions: selectorOptions });\n                        this.registerHandler(protocol_1.DidCloseTextDocumentNotification.type.method, { id: UUID.generateUuid(), registerOptions: selectorOptions });\n                    }\n                    if (textDocumentSyncOptions.change !== protocol_1.TextDocumentSyncKind.None) {\n                        this.registerHandler(protocol_1.DidChangeTextDocumentNotification.type.method, {\n                            id: UUID.generateUuid(),\n                            registerOptions: Object.assign({}, selectorOptions, { syncKind: textDocumentSyncOptions.change })\n                        });\n                    }\n                    if (textDocumentSyncOptions.willSave) {\n                        this.registerHandler(protocol_1.WillSaveTextDocumentNotification.type.method, { id: UUID.generateUuid(), registerOptions: selectorOptions });\n                    }\n                    if (textDocumentSyncOptions.willSaveWaitUntil) {\n                        this.registerHandler(protocol_1.WillSaveTextDocumentWaitUntilRequest.type.method, { id: UUID.generateUuid(), registerOptions: selectorOptions });\n                    }\n                    if (textDocumentSyncOptions.save) {\n                        this.registerHandler(protocol_1.DidSaveTextDocumentNotification.type.method, {\n                            id: UUID.generateUuid(),\n                            registerOptions: Object.assign({}, selectorOptions, { includeText: !!textDocumentSyncOptions.save.includeText })\n                        });\n                    }\n                }\n            }\n            this.hookCapabilities(connection);\n            this._onReadyCallbacks.resolve();\n            return result;\n        }, (error) => {\n            if (this._clientOptions.initializationFailedHandler) {\n                if (this._clientOptions.initializationFailedHandler(error)) {\n                    this.initialize(connection);\n                }\n                else {\n                    this.stop();\n                    this._onReadyCallbacks.reject(error);\n                }\n            }\n            else if (error instanceof vscode_jsonrpc_1.ResponseError && error.data && error.data.retry && this.window) {\n                this.window.showMessage(protocol_1.MessageType.Error, error.message, { title: 'Retry', id: \"retry\" }).then(item => {\n                    if (item && item.id === 'retry') {\n                        this.initialize(connection);\n                    }\n                    else {\n                        this.stop();\n                        this._onReadyCallbacks.reject(error);\n                    }\n                });\n            }\n            else {\n                if (error && error.message && this.window) {\n                    this.window.showMessage(protocol_1.MessageType.Error, error.message);\n                }\n                this.error('Server initialization failed.', error);\n                this.stop();\n                this._onReadyCallbacks.reject(error);\n            }\n        });\n    }\n    stop() {\n        if (!this._connectionPromise) {\n            this.state = ClientState.Stopped;\n            return Promise.resolve();\n        }\n        this.state = ClientState.Stopping;\n        this.cleanUp();\n        // unkook listeners\n        return this.resolveConnection().then(connection => {\n            return connection.shutdown().then(() => {\n                connection.exit();\n                connection.dispose();\n                this.state = ClientState.Stopped;\n                this._connectionPromise = undefined;\n                this._resolvedConnection = undefined;\n                // Remove all markers\n            });\n        });\n    }\n    cleanUp(diagnostics = true) {\n        if (this._listeners) {\n            this._listeners.forEach(listener => listener.dispose());\n            this._listeners = undefined;\n        }\n        if (this._providers) {\n            this._providers.forEach(provider => provider.dispose());\n            this._providers = undefined;\n        }\n        if (diagnostics && this._diagnostics) {\n            this._diagnostics.dispose();\n            this._diagnostics = undefined;\n        }\n        for (const handler of Array.from(this._registeredHandlers.values())) {\n            handler.dispose();\n        }\n        this._registeredHandlers.clear();\n    }\n    notifyFileEvent(event) {\n        this._fileEvents.push(event);\n        this._fileEventDelayer.trigger(() => {\n            this.onReady().then(() => {\n                this.resolveConnection().then(connection => {\n                    if (this.isConnectionActive()) {\n                        connection.didChangeWatchedFiles({ changes: this._fileEvents });\n                    }\n                    this._fileEvents = [];\n                });\n            }, (error) => {\n                this.error(`Notify file events failed.`, error);\n            });\n        });\n    }\n    forceDocumentSync() {\n        this._registeredHandlers.get(protocol_1.DidChangeTextDocumentNotification.type.method).forceDelivery();\n    }\n    handleDiagnostics(params) {\n        if (!this._diagnostics) {\n            return;\n        }\n        this._diagnostics.set(params.uri, params.diagnostics);\n    }\n    createConnection() {\n        const errorHandler = this.handleConnectionError.bind(this);\n        const closeHandler = this.handleConnectionClosed.bind(this);\n        return this.connectionProvider.get(errorHandler, closeHandler, this.outputChannel);\n    }\n    handleConnectionClosed() {\n        // Check whether this is a normal shutdown in progress or the client stopped normally.\n        if (this.state === ClientState.Stopping || this.state === ClientState.Stopped) {\n            return;\n        }\n        this._connectionPromise = undefined;\n        this._resolvedConnection = undefined;\n        let action = this._clientOptions.errorHandler.closed();\n        if (action === CloseAction.DoNotRestart) {\n            this.error('Connection to server got closed. Server will not be restarted.');\n            this.state = ClientState.Stopped;\n            this.cleanUp();\n        }\n        else if (action === CloseAction.Restart) {\n            this.info('Connection to server got closed. Server will restart.');\n            this.cleanUp(false);\n            this.state = ClientState.Initial;\n            this.start();\n        }\n    }\n    handleConnectionError(error, message, count) {\n        let action = this._clientOptions.errorHandler.error(error, message, count);\n        if (action === ErrorAction.Shutdown) {\n            this.error('Connection to server is erroring. Shutting down server.');\n            this.stop();\n        }\n    }\n    hookConfigurationChanged(connection) {\n        if (!this._clientOptions.synchronize.configurationSection || !this.workspace.configurations) {\n            return;\n        }\n        this.workspace.configurations.onDidChangeConfiguration(() => this.onDidChangeConfiguration(connection), this, this._listeners);\n        this.onDidChangeConfiguration(connection);\n    }\n    refreshTrace(connection, sendNotification = false) {\n        const configurations = this.workspace.configurations;\n        if (configurations) {\n            const config = configurations.getConfiguration(this._id);\n            this._trace = !!config ? vscode_jsonrpc_1.Trace.fromString(config.get('trace.server', 'off')) : vscode_jsonrpc_1.Trace.Off;\n            connection.trace(this._trace, this._tracer, sendNotification);\n        }\n    }\n    onDidChangeConfiguration(connection) {\n        this.refreshTrace(connection, true);\n        let keys;\n        let configurationSection = this._clientOptions.synchronize.configurationSection;\n        if (is.string(configurationSection)) {\n            keys = [configurationSection];\n        }\n        else if (is.stringArray(configurationSection)) {\n            keys = configurationSection;\n        }\n        if (keys) {\n            if (this.isConnectionActive()) {\n                connection.didChangeConfiguration({ settings: this.extractSettingsInformation(keys) });\n            }\n        }\n    }\n    extractSettingsInformation(keys) {\n        function ensurePath(config, path) {\n            let current = config;\n            for (let i = 0; i < path.length - 1; i++) {\n                let obj = current[path[i]];\n                if (!obj) {\n                    obj = Object.create(null);\n                    current[path[i]] = obj;\n                }\n                current = obj;\n            }\n            return current;\n        }\n        let result = Object.create(null);\n        for (let i = 0; i < keys.length; i++) {\n            let key = keys[i];\n            let index = key.indexOf('.');\n            let config = null;\n            if (index >= 0) {\n                config = this.workspace.configurations.getConfiguration(key.substr(0, index)).get(key.substr(index + 1));\n            }\n            else {\n                config = this.workspace.configurations.getConfiguration(key);\n            }\n            if (config) {\n                let path = keys[i].split('.');\n                ensurePath(result, path)[path[path.length - 1]] = config;\n            }\n        }\n        return result;\n    }\n    hookFileEvents(_connection) {\n        let fileEvents = this._clientOptions.synchronize.fileEvents;\n        if (!fileEvents) {\n            return;\n        }\n        let watchers;\n        if (is.array(fileEvents)) {\n            watchers = fileEvents;\n        }\n        else {\n            watchers = [fileEvents];\n        }\n        if (!watchers) {\n            return;\n        }\n        watchers.forEach(watcher => {\n            watcher.onFileEvent(event => this.notifyFileEvent(event), null, this._listeners);\n        });\n    }\n    initRegistrationHandlers(_connection) {\n        const syncedDocuments = new Map();\n        const logger = (type, error) => { this.logFailedRequest(type, error); };\n        this._registeredHandlers.set(protocol_1.DidOpenTextDocumentNotification.type.method, new DidOpenTextDocumentFeature(this, syncedDocuments));\n        this._registeredHandlers.set(protocol_1.DidChangeTextDocumentNotification.type.method, new DidChangeTextDocumentFeature(this));\n        if (this.workspace.onWillSaveTextDocument) {\n            this._registeredHandlers.set(protocol_1.WillSaveTextDocumentNotification.type.method, new DocumentNotifiactions(this, this.workspace.onWillSaveTextDocument, protocol_1.WillSaveTextDocumentNotification.type, event => event, (selectors, willSaveEvent) => DocumentNotifiactions.textDocumentFilter(this.languages, selectors, willSaveEvent.textDocument)));\n            if (!!this.workspace.synchronization && this.workspace.synchronization.willSaveWaitUntil) {\n                this._registeredHandlers.set(protocol_1.WillSaveTextDocumentWaitUntilRequest.type.method, new WillSaveWaitUntilFeature(this));\n            }\n        }\n        if (this.workspace.onDidSaveTextDocument) {\n            this._registeredHandlers.set(protocol_1.DidSaveTextDocumentNotification.type.method, new DidSaveTextDocumentFeature(this));\n        }\n        this._registeredHandlers.set(protocol_1.DidCloseTextDocumentNotification.type.method, new DidCloseTextDocumentFeature(this, syncedDocuments));\n        if (this.languages.registerCompletionItemProvider) {\n            this._registeredHandlers.set(protocol_1.CompletionRequest.type.method, new LanguageFeature((options) => this.createCompletionProvider(options)));\n        }\n        if (this.languages.registerHoverProvider) {\n            this._registeredHandlers.set(protocol_1.HoverRequest.type.method, new LanguageFeature((options) => this.createHoverProvider(options)));\n        }\n        if (this.languages.registerSignatureHelpProvider) {\n            this._registeredHandlers.set(protocol_1.SignatureHelpRequest.type.method, new LanguageFeature((options) => this.createSignatureHelpProvider(options)));\n        }\n        if (this.languages.registerDefinitionProvider) {\n            this._registeredHandlers.set(protocol_1.DefinitionRequest.type.method, new LanguageFeature((options) => this.createDefinitionProvider(options)));\n        }\n        if (this.languages.registerReferenceProvider) {\n            this._registeredHandlers.set(protocol_1.ReferencesRequest.type.method, new LanguageFeature((options) => this.createReferencesProvider(options)));\n        }\n        if (this.languages.registerDocumentHighlightProvider) {\n            this._registeredHandlers.set(protocol_1.DocumentHighlightRequest.type.method, new LanguageFeature((options) => this.createDocumentHighlightProvider(options)));\n        }\n        if (this.languages.registerDocumentSymbolProvider) {\n            this._registeredHandlers.set(protocol_1.DocumentSymbolRequest.type.method, new LanguageFeature((options) => this.createDocumentSymbolProvider(options)));\n        }\n        if (this.languages.registerWorkspaceSymbolProvider) {\n            this._registeredHandlers.set(protocol_1.WorkspaceSymbolRequest.type.method, new LanguageFeature((options) => this.createWorkspaceSymbolProvider(options)));\n        }\n        if (this.languages.registerCodeActionsProvider) {\n            this._registeredHandlers.set(protocol_1.CodeActionRequest.type.method, new LanguageFeature((options) => this.createCodeActionsProvider(options)));\n        }\n        if (this.languages.registerCodeLensProvider) {\n            this._registeredHandlers.set(protocol_1.CodeLensRequest.type.method, new LanguageFeature((options) => this.createCodeLensProvider(options)));\n        }\n        if (this.languages.registerDocumentFormattingEditProvider) {\n            this._registeredHandlers.set(protocol_1.DocumentFormattingRequest.type.method, new LanguageFeature((options) => this.createDocumentFormattingProvider(options)));\n        }\n        if (this.languages.registerDocumentRangeFormattingEditProvider) {\n            this._registeredHandlers.set(protocol_1.DocumentRangeFormattingRequest.type.method, new LanguageFeature((options) => this.createDocumentRangeFormattingProvider(options)));\n        }\n        if (this.languages.registerOnTypeFormattingEditProvider) {\n            this._registeredHandlers.set(protocol_1.DocumentOnTypeFormattingRequest.type.method, new LanguageFeature((options) => this.createDocumentOnTypeFormattingProvider(options)));\n        }\n        if (this.languages.registerRenameProvider) {\n            this._registeredHandlers.set(protocol_1.RenameRequest.type.method, new LanguageFeature((options) => this.createRenameProvider(options)));\n        }\n        if (this.languages.registerDocumentLinkProvider) {\n            this._registeredHandlers.set(protocol_1.DocumentLinkRequest.type.method, new LanguageFeature((options) => this.createDocumentLinkProvider(options)));\n        }\n        if (this.commands) {\n            this._registeredHandlers.set(protocol_1.ExecuteCommandRequest.type.method, new ExecuteCommandFeature(this, logger));\n        }\n    }\n    handleRegistrationRequest(params) {\n        return new Promise((resolve, _reject) => {\n            params.registrations.forEach((element) => {\n                const handler = this._registeredHandlers.get(element.method);\n                const options = element.registerOptions || {};\n                options.documentSelector = options.documentSelector || this._clientOptions.documentSelector;\n                const data = {\n                    id: element.id,\n                    registerOptions: options\n                };\n                if (handler) {\n                    handler.register(data);\n                }\n            });\n            resolve();\n        });\n    }\n    handleUnregistrationRequest(params) {\n        return new Promise((resolve, _reject) => {\n            params.unregisterations.forEach((element) => {\n                const handler = this._registeredHandlers.get(element.method);\n                if (handler) {\n                    handler.unregister(element.id);\n                }\n            });\n            resolve();\n        });\n    }\n    handleApplyWorkspaceEdit(params) {\n        if (!this.workspace.applyEdit) {\n            return Promise.resolve({ applied: false });\n        }\n        // This is some sort of workaround since the version check should be done by VS Code in the Workspace.applyEdit.\n        // However doing it here adds some safety since the server can lag more behind then an extension.\n        let workspaceEdit = params.edit;\n        let openTextDocuments = new Map();\n        this.workspace.textDocuments.forEach((document) => openTextDocuments.set(document.uri, document));\n        let versionMismatch = false;\n        if (workspaceEdit.documentChanges) {\n            for (const change of workspaceEdit.documentChanges) {\n                if (change.textDocument.version && change.textDocument.version >= 0) {\n                    let textDocument = openTextDocuments.get(change.textDocument.uri);\n                    if (textDocument && textDocument.version !== change.textDocument.version) {\n                        versionMismatch = true;\n                        break;\n                    }\n                }\n            }\n        }\n        if (versionMismatch) {\n            return Promise.resolve({ applied: false });\n        }\n        return this.workspace.applyEdit(params.edit).then(applied => { return { applied }; });\n    }\n    ;\n    registerHandler(method, data) {\n        const handler = this._registeredHandlers.get(method);\n        if (handler) {\n            handler.register(data);\n        }\n    }\n    hookCapabilities(_connection) {\n        let documentSelector = this._clientOptions.documentSelector;\n        if (!documentSelector) {\n            return;\n        }\n        let selectorOptions = { documentSelector: documentSelector };\n        if (this._capabilites.completionProvider) {\n            let options = Object.assign({}, selectorOptions, this._capabilites.completionProvider);\n            this.registerHandler(protocol_1.CompletionRequest.type.method, { id: UUID.generateUuid(), registerOptions: options });\n        }\n        if (this._capabilites.hoverProvider) {\n            this.registerHandler(protocol_1.HoverRequest.type.method, { id: UUID.generateUuid(), registerOptions: Object.assign({}, selectorOptions) });\n        }\n        if (this._capabilites.signatureHelpProvider) {\n            let options = Object.assign({}, selectorOptions, this._capabilites.signatureHelpProvider);\n            this.registerHandler(protocol_1.SignatureHelpRequest.type.method, { id: UUID.generateUuid(), registerOptions: options });\n        }\n        if (this._capabilites.definitionProvider) {\n            this.registerHandler(protocol_1.DefinitionRequest.type.method, { id: UUID.generateUuid(), registerOptions: Object.assign({}, selectorOptions) });\n        }\n        if (this._capabilites.referencesProvider) {\n            this.registerHandler(protocol_1.ReferencesRequest.type.method, { id: UUID.generateUuid(), registerOptions: Object.assign({}, selectorOptions) });\n        }\n        if (this._capabilites.documentHighlightProvider) {\n            this.registerHandler(protocol_1.DocumentHighlightRequest.type.method, { id: UUID.generateUuid(), registerOptions: Object.assign({}, selectorOptions) });\n        }\n        if (this._capabilites.documentSymbolProvider) {\n            this.registerHandler(protocol_1.DocumentSymbolRequest.type.method, { id: UUID.generateUuid(), registerOptions: Object.assign({}, selectorOptions) });\n        }\n        if (this._capabilites.workspaceSymbolProvider) {\n            this.registerHandler(protocol_1.WorkspaceSymbolRequest.type.method, { id: UUID.generateUuid(), registerOptions: Object.assign({}, selectorOptions) });\n        }\n        if (this._capabilites.codeActionProvider) {\n            this.registerHandler(protocol_1.CodeActionRequest.type.method, { id: UUID.generateUuid(), registerOptions: Object.assign({}, selectorOptions) });\n        }\n        if (this._capabilites.codeLensProvider) {\n            let options = Object.assign({}, selectorOptions, this._capabilites.codeLensProvider);\n            this.registerHandler(protocol_1.CodeLensRequest.type.method, { id: UUID.generateUuid(), registerOptions: options });\n        }\n        if (this._capabilites.documentFormattingProvider) {\n            this.registerHandler(protocol_1.DocumentFormattingRequest.type.method, { id: UUID.generateUuid(), registerOptions: Object.assign({}, selectorOptions) });\n        }\n        if (this._capabilites.documentRangeFormattingProvider) {\n            this.registerHandler(protocol_1.DocumentRangeFormattingRequest.type.method, { id: UUID.generateUuid(), registerOptions: Object.assign({}, selectorOptions) });\n        }\n        if (this._capabilites.documentOnTypeFormattingProvider) {\n            let options = Object.assign({}, selectorOptions, this._capabilites.documentOnTypeFormattingProvider);\n            this.registerHandler(protocol_1.DocumentOnTypeFormattingRequest.type.method, { id: UUID.generateUuid(), registerOptions: options });\n        }\n        if (this._capabilites.renameProvider) {\n            this.registerHandler(protocol_1.RenameRequest.type.method, { id: UUID.generateUuid(), registerOptions: Object.assign({}, selectorOptions) });\n        }\n        if (this._capabilites.documentLinkProvider) {\n            let options = Object.assign({}, selectorOptions, this._capabilites.documentLinkProvider);\n            this.registerHandler(protocol_1.DocumentLinkRequest.type.method, { id: UUID.generateUuid(), registerOptions: options });\n        }\n        if (this._capabilites.executeCommandProvider) {\n            let options = Object.assign({}, this._capabilites.executeCommandProvider);\n            this.registerHandler(protocol_1.ExecuteCommandRequest.type.method, { id: UUID.generateUuid(), registerOptions: options });\n        }\n    }\n    logFailedRequest(type, error) {\n        // If we get a request cancel don't log anything.\n        if (error instanceof vscode_jsonrpc_1.ResponseError && error.code === vscode_jsonrpc_1.ErrorCodes.RequestCancelled) {\n            return;\n        }\n        this.error(`Request ${type.method} failed.`, error);\n    }\n    createRequestHandler(type, onError) {\n        return (params, token) => {\n            return this.sendRequest(type, params, token).then((result) => result, (error) => {\n                this.logFailedRequest(type, error);\n                const result = onError ? onError(params, error) : null;\n                return Promise.reject(result);\n            });\n        };\n    }\n    createCompletionProvider(options) {\n        let triggerCharacters = options.triggerCharacters || [];\n        return this.languages.registerCompletionItemProvider(options.documentSelector, {\n            provideCompletionItems: this.createRequestHandler(protocol_1.CompletionRequest.type, () => []),\n            resolveCompletionItem: options.resolveProvider ? this.createRequestHandler(protocol_1.CompletionResolveRequest.type, (params) => params) : undefined\n        }, ...triggerCharacters);\n    }\n    createHoverProvider(options) {\n        return this.languages.registerHoverProvider(options.documentSelector, {\n            provideHover: this.createRequestHandler(protocol_1.HoverRequest.type)\n        });\n    }\n    createSignatureHelpProvider(options) {\n        let triggerCharacters = options.triggerCharacters || [];\n        return this.languages.registerSignatureHelpProvider(options.documentSelector, {\n            provideSignatureHelp: this.createRequestHandler(protocol_1.SignatureHelpRequest.type)\n        }, ...triggerCharacters);\n    }\n    createDefinitionProvider(options) {\n        return this.languages.registerDefinitionProvider(options.documentSelector, {\n            provideDefinition: this.createRequestHandler(protocol_1.DefinitionRequest.type)\n        });\n    }\n    createReferencesProvider(options) {\n        return this.languages.registerReferenceProvider(options.documentSelector, {\n            provideReferences: this.createRequestHandler(protocol_1.ReferencesRequest.type, () => [])\n        });\n    }\n    createDocumentHighlightProvider(options) {\n        return this.languages.registerDocumentHighlightProvider(options.documentSelector, {\n            provideDocumentHighlights: this.createRequestHandler(protocol_1.DocumentHighlightRequest.type, () => [])\n        });\n    }\n    createDocumentSymbolProvider(options) {\n        return this.languages.registerDocumentSymbolProvider(options.documentSelector, {\n            provideDocumentSymbols: this.createRequestHandler(protocol_1.DocumentSymbolRequest.type, () => [])\n        });\n    }\n    createWorkspaceSymbolProvider(_options) {\n        return this.languages.registerWorkspaceSymbolProvider({\n            provideWorkspaceSymbols: this.createRequestHandler(protocol_1.WorkspaceSymbolRequest.type, () => [])\n        });\n    }\n    createCodeActionsProvider(options) {\n        return this.languages.registerCodeActionsProvider(options.documentSelector, {\n            provideCodeActions: this.createRequestHandler(protocol_1.CodeActionRequest.type, () => [])\n        });\n    }\n    createCodeLensProvider(options) {\n        return this.languages.registerCodeLensProvider(options.documentSelector, {\n            provideCodeLenses: this.createRequestHandler(protocol_1.CodeLensRequest.type, () => []),\n            resolveCodeLens: options.resolveProvider ? this.createRequestHandler(protocol_1.CodeLensResolveRequest.type, (params) => params) : undefined\n        });\n    }\n    createDocumentFormattingProvider(options) {\n        return this.languages.registerDocumentFormattingEditProvider(options.documentSelector, {\n            provideDocumentFormattingEdits: this.createRequestHandler(protocol_1.DocumentFormattingRequest.type, () => [])\n        });\n    }\n    createDocumentRangeFormattingProvider(options) {\n        return this.languages.registerDocumentRangeFormattingEditProvider(options.documentSelector, {\n            provideDocumentRangeFormattingEdits: this.createRequestHandler(protocol_1.DocumentRangeFormattingRequest.type, () => [])\n        });\n    }\n    createDocumentOnTypeFormattingProvider(options) {\n        let moreTriggerCharacter = options.moreTriggerCharacter || [];\n        return this.languages.registerOnTypeFormattingEditProvider(options.documentSelector, {\n            provideOnTypeFormattingEdits: this.createRequestHandler(protocol_1.DocumentOnTypeFormattingRequest.type, () => [])\n        }, options.firstTriggerCharacter, ...moreTriggerCharacter);\n    }\n    createRenameProvider(options) {\n        return this.languages.registerRenameProvider(options.documentSelector, {\n            provideRenameEdits: this.createRequestHandler(protocol_1.RenameRequest.type, (_, error) => new Error(error.message))\n        });\n    }\n    createDocumentLinkProvider(options) {\n        return this.languages.registerDocumentLinkProvider(options.documentSelector, {\n            provideDocumentLinks: this.createRequestHandler(protocol_1.DocumentLinkRequest.type, (_, error) => new Error(error.message)),\n            resolveDocumentLink: options.resolveProvider ? this.createRequestHandler(protocol_1.DocumentLinkResolveRequest.type, (_, error) => new Error(error.message)) : undefined\n        });\n    }\n}\nexports.BaseLanguageClient = BaseLanguageClient;\nclass SettingMonitor {\n    constructor(_client, _setting) {\n        this._client = _client;\n        this._setting = _setting;\n        this._listeners = [];\n    }\n    start() {\n        if (this._client.workspace.configurations) {\n            this._client.workspace.configurations.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this._listeners);\n            this.onDidChangeConfiguration();\n        }\n        return vscode_jsonrpc_1.Disposable.create(() => {\n            if (this._client.needsStop()) {\n                this._client.stop();\n            }\n        });\n    }\n    onDidChangeConfiguration() {\n        const configurations = this._client.workspace.configurations;\n        let index = this._setting.indexOf('.');\n        let primary = index >= 0 ? this._setting.substr(0, index) : this._setting;\n        let rest = index >= 0 ? this._setting.substr(index + 1) : undefined;\n        let enabled = rest ? configurations.getConfiguration(primary).get(rest, false) : configurations.getConfiguration(primary);\n        if (enabled && this._client.needsStart()) {\n            this._client.start();\n        }\n        else if (!enabled && this._client.needsStop()) {\n            this._client.stop();\n        }\n    }\n}\nexports.SettingMonitor = SettingMonitor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-base-languageclient/lib/base.js\n// module id = 101\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nvar dockerfile_language_service_1 = require(\"dockerfile-language-service\");\r\nvar monaco_languageclient_1 = require(\"monaco-languageclient\");\r\nvar LANGUAGE_ID = 'dockerfile';\r\nvar MODEL_URI = 'inmemory://model.json';\r\nvar MONACO_URI = monaco.Uri.parse(MODEL_URI);\r\nvar LSP_URI = { uri: MODEL_URI };\r\n// content to initialize the editor with\r\nvar content = \"FROM node:alpine\\nCOPY lib /docker-langserver/lib\\nCOPY bin /docker-langserver/bin\\nCOPY package.json /docker-langserver/package.json\\nWORKDIR /docker-langserver/\\nRUN npm install --production && \\\\\\n    chmod +x /docker-langserver/bin/docker-langserver\\nENTRYPOINT [ \\\"/docker-langserver/bin/docker-langserver\\\" ]\";\r\n// create the Monaco editor\r\nvar editor = monaco.editor.create(document.getElementById(\"container\"), {\r\n    language: LANGUAGE_ID,\r\n    model: monaco.editor.createModel(content, LANGUAGE_ID, MONACO_URI),\r\n    glyphMargin: true,\r\n    formatOnType: true,\r\n    theme: \"vs-dark\"\r\n});\r\nvar monacoModel = monaco.editor.getModel(MONACO_URI);\r\nvar service = dockerfile_language_service_1.DockerfileLanguageServiceFactory.createLanguageService();\r\nvar m2p = new monaco_languageclient_1.MonacoToProtocolConverter();\r\nvar p2m = new monaco_languageclient_1.ProtocolToMonacoConverter();\r\nmonacoModel.onDidChangeContent(function (event) {\r\n    var diagnostics = service.validate(monacoModel.getValue());\r\n    var markers = diagnostics.map(function (diagnostic) { return p2m.asMarker(diagnostic); });\r\n    monaco.editor.setModelMarkers(monacoModel, LANGUAGE_ID, markers);\r\n});\r\nmonaco.languages.registerCodeActionProvider(LANGUAGE_ID, {\r\n    provideCodeActions: function (model, range, context, token) {\r\n        var commands = service.computeCodeActions(LSP_URI, m2p.asRange(range), m2p.asCodeActionContext(context));\r\n        var _loop_1 = function (command) {\r\n            editor._commandService.addCommand(command.command, {\r\n                handler: function () {\r\n                    var args = command.arguments;\r\n                    var edits = service.createWorkspaceEdit(monacoModel.getValue(), command.command, args);\r\n                    if (edits) {\r\n                        var mEdits = p2m.asWorkspaceEdit(edits);\r\n                        var rEdits = mEdits.edits.map(function (edit) {\r\n                            return {\r\n                                identifier: { major: 1, minor: 0 },\r\n                                range: monaco.Range.lift(edit.range),\r\n                                text: edit.newText,\r\n                                forceMoveMarkers: true,\r\n                            };\r\n                        });\r\n                        monacoModel.pushEditOperations([], rEdits, function () { return []; });\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        for (var _i = 0, commands_1 = commands; _i < commands_1.length; _i++) {\r\n            var command = commands_1[_i];\r\n            _loop_1(command);\r\n        }\r\n        return p2m.asCommands(commands);\r\n    }\r\n});\r\nmonaco.languages.registerCompletionItemProvider(LANGUAGE_ID, {\r\n    triggerCharacters: ['=', ' ', '$', '-'],\r\n    provideCompletionItems: function (model, position, token) {\r\n        var lspPosition = m2p.asPosition(position.lineNumber, position.column);\r\n        var items = service.computeCompletionItems(model.getValue(), lspPosition, true);\r\n        if (items.then) {\r\n            return items.then(function (result) {\r\n                return p2m.asCompletionResult(result);\r\n            });\r\n        }\r\n        var completionItems = items;\r\n        return p2m.asCompletionResult(completionItems);\r\n    },\r\n    resolveCompletionItem: function (completionItem, token) {\r\n        return p2m.asCompletionItem(service.resolveCompletionItem(m2p.asCompletionItem(completionItem)));\r\n    }\r\n});\r\nmonaco.languages.registerDefinitionProvider(LANGUAGE_ID, {\r\n    provideDefinition: function (model, position, token) {\r\n        var definition = service.computeDefinition(LSP_URI, model.getValue(), m2p.asPosition(position.lineNumber, position.column));\r\n        return p2m.asDefinitionResult(definition);\r\n    }\r\n});\r\nmonaco.languages.registerDocumentHighlightProvider(LANGUAGE_ID, {\r\n    provideDocumentHighlights: function (model, position, token) {\r\n        var highlightRanges = service.computeHighlightRanges(LSP_URI, model.getValue(), m2p.asPosition(position.lineNumber, position.column));\r\n        return p2m.asDocumentHighlights(highlightRanges);\r\n    }\r\n});\r\nmonaco.languages.registerHoverProvider(LANGUAGE_ID, {\r\n    provideHover: function (model, position, token) {\r\n        var hover = service.computeHover(model.getValue(), m2p.asPosition(position.lineNumber, position.column));\r\n        return p2m.asHover(hover);\r\n    }\r\n});\r\nmonaco.languages.registerDocumentSymbolProvider(LANGUAGE_ID, {\r\n    provideDocumentSymbols: function (model, token) {\r\n        var symbols = service.computeSymbols(LSP_URI, model.getValue());\r\n        return p2m.asSymbolInformations(symbols);\r\n    }\r\n});\r\nmonaco.languages.registerSignatureHelpProvider(LANGUAGE_ID, {\r\n    signatureHelpTriggerCharacters: [' ', '-', '=', '[', ','],\r\n    provideSignatureHelp: function (model, position, token) {\r\n        var symbols = service.computeSignatureHelp(model.getValue(), m2p.asPosition(position.lineNumber, position.column));\r\n        return p2m.asSignatureHelp(symbols);\r\n    }\r\n});\r\nmonaco.languages.registerRenameProvider(LANGUAGE_ID, {\r\n    provideRenameEdits: function (model, position, newName) {\r\n        var edits = service.computeRename(LSP_URI, model.getValue(), m2p.asPosition(position.lineNumber, position.column), newName);\r\n        return p2m.asWorkspaceEdit({\r\n            changes: (_a = {},\r\n                _a[MODEL_URI] = edits,\r\n                _a)\r\n        });\r\n        var _a;\r\n    }\r\n});\r\nmonaco.languages.registerLinkProvider(LANGUAGE_ID, {\r\n    provideLinks: function (model, token) {\r\n        var links = service.computeLinks(model.getValue());\r\n        return p2m.asILinks(links);\r\n    }\r\n});\r\nmonaco.languages.registerDocumentFormattingEditProvider(LANGUAGE_ID, {\r\n    provideDocumentFormattingEdits: function (model, options, token) {\r\n        var edits = service.format(model.getValue(), m2p.asFormattingOptions(options));\r\n        return p2m.asTextEdits(edits);\r\n    }\r\n});\r\nmonaco.languages.registerDocumentRangeFormattingEditProvider(LANGUAGE_ID, {\r\n    provideDocumentRangeFormattingEdits: function (model, range, options, token) {\r\n        var edits = service.formatRange(model.getValue(), m2p.asRange(range), m2p.asFormattingOptions(options));\r\n        return p2m.asTextEdits(edits);\r\n    }\r\n});\r\nmonaco.languages.registerOnTypeFormattingEditProvider(LANGUAGE_ID, {\r\n    autoFormatTriggerCharacters: ['`', '\\\\'],\r\n    provideOnTypeFormattingEdits: function (model, position, ch, options, token) {\r\n        var edits = service.formatOnType(model.getValue(), m2p.asPosition(position.lineNumber, position.column), ch, m2p.asFormattingOptions(options));\r\n        return p2m.asTextEdits(edits);\r\n    }\r\n});\r\n//# sourceMappingURL=client.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/client.js\n// module id = 102\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nwindow.onload = function () {\r\n    var w = window;\r\n    // load Monaco code\r\n    w.require(['vs/editor/editor.main'], function () {\r\n        // load client code\r\n        require('./client');\r\n    });\r\n};\r\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 103\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 104\n// module chunks = 0","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/builtin-status-codes/browser.js\n// module id = 105\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst imageTemplate_1 = require(\"./imageTemplate\");\r\nconst from_1 = require(\"./instructions/from\");\r\nconst util_1 = require(\"./util\");\r\nconst main_1 = require(\"./main\");\r\nclass Dockerfile extends imageTemplate_1.ImageTemplate {\r\n    constructor(document) {\r\n        super();\r\n        this.initialInstructions = new imageTemplate_1.ImageTemplate();\r\n        this.buildStages = [];\r\n        this.directive = null;\r\n        /**\r\n         * Whether a FROM instruction has been added to this Dockerfile or not.\r\n         */\r\n        this.foundFrom = false;\r\n        this.document = document;\r\n    }\r\n    getEscapeCharacter() {\r\n        if (this.directive !== null && this.directive.getDirective() === main_1.Directive.escape) {\r\n            let value = this.directive.getValue();\r\n            if (value === '\\\\' || value === '`') {\r\n                return value;\r\n            }\r\n        }\r\n        return '\\\\';\r\n    }\r\n    getInitialARGs() {\r\n        return this.initialInstructions.getARGs();\r\n    }\r\n    getContainingImage(position) {\r\n        let range = vscode_languageserver_types_1.Range.create(vscode_languageserver_types_1.Position.create(0, 0), this.document.positionAt(this.document.getText().length));\r\n        if (!util_1.Util.isInsideRange(position, range)) {\r\n            // not inside the document, invalid position\r\n            return null;\r\n        }\r\n        for (let buildStage of this.buildStages) {\r\n            if (buildStage.contains(position)) {\r\n                return buildStage;\r\n            }\r\n        }\r\n        let instructions = this.initialInstructions.getInstructions();\r\n        if (instructions.length > 0 &&\r\n            (this.initialInstructions.contains(position) || instructions[instructions.length - 1].getRange().end.line >= position.line)) {\r\n            return this.initialInstructions;\r\n        }\r\n        if (this.buildStages.length > 0) {\r\n            if (this.buildStages[0].getInstructions()[0].getRange().start.line > position.line) {\r\n                let instructions = this.initialInstructions.getInstructions();\r\n                if (instructions.length > 0) {\r\n                    return this.buildStages[0];\r\n                }\r\n            }\r\n            let instructions = this.buildStages[this.buildStages.length - 1].getInstructions();\r\n            if (instructions[instructions.length - 1].getRange().end.line < position.line) {\r\n                return this;\r\n            }\r\n            for (let i = 0; i < this.buildStages.length - 1; i++) {\r\n                let stageInstructions = this.buildStages[i].getInstructions();\r\n                let stageInstructions2 = this.buildStages[i + 1].getInstructions();\r\n                let between = vscode_languageserver_types_1.Range.create(stageInstructions[stageInstructions.length - 1].getRange().end, stageInstructions2[0].getRange().start);\r\n                if (util_1.Util.isInsideRange(position, between)) {\r\n                    return this.buildStages[i + 1];\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    addInstruction(instruction) {\r\n        if (instruction.getKeyword() === main_1.Keyword.FROM) {\r\n            this.currentBuildStage = new imageTemplate_1.ImageTemplate();\r\n            this.buildStages.push(this.currentBuildStage);\r\n            this.foundFrom = true;\r\n        }\r\n        else if (!this.foundFrom) {\r\n            this.initialInstructions.addInstruction(instruction);\r\n        }\r\n        if (this.foundFrom) {\r\n            this.currentBuildStage.addInstruction(instruction);\r\n        }\r\n        super.addInstruction(instruction);\r\n    }\r\n    setDirective(directive) {\r\n        this.directive = directive;\r\n    }\r\n    getDirective() {\r\n        return this.directive;\r\n    }\r\n    resolveVariable(variable, line) {\r\n        let image = this.getContainingImage(vscode_languageserver_types_1.Position.create(line, 0));\r\n        return image.resolveVariable(variable, line);\r\n    }\r\n    getAvailableVariables(currentLine) {\r\n        if (this.getInstructionAt(currentLine) instanceof from_1.From) {\r\n            let variables = [];\r\n            for (let arg of this.getInitialARGs()) {\r\n                let property = arg.getProperty();\r\n                if (property) {\r\n                    variables.push(property.getName());\r\n                }\r\n            }\r\n            return variables;\r\n        }\r\n        let image = this.getContainingImage(vscode_languageserver_types_1.Position.create(currentLine, 0));\r\n        return image.getAvailableVariables(currentLine);\r\n    }\r\n}\r\nexports.Dockerfile = Dockerfile;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/dockerfile.js\n// module id = 106\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst arg_1 = require(\"./instructions/arg\");\r\nconst cmd_1 = require(\"./instructions/cmd\");\r\nconst copy_1 = require(\"./instructions/copy\");\r\nconst env_1 = require(\"./instructions/env\");\r\nconst entrypoint_1 = require(\"./instructions/entrypoint\");\r\nconst from_1 = require(\"./instructions/from\");\r\nconst healthcheck_1 = require(\"./instructions/healthcheck\");\r\nconst onbuild_1 = require(\"./instructions/onbuild\");\r\nconst util_1 = require(\"./util\");\r\nclass ImageTemplate {\r\n    constructor() {\r\n        this.comments = [];\r\n        this.instructions = [];\r\n    }\r\n    addComment(comment) {\r\n        this.comments.push(comment);\r\n    }\r\n    getComments() {\r\n        return this.comments;\r\n    }\r\n    addInstruction(instruction) {\r\n        this.instructions.push(instruction);\r\n    }\r\n    getInstructions() {\r\n        return this.instructions;\r\n    }\r\n    getInstructionAt(line) {\r\n        for (let instruction of this.instructions) {\r\n            if (util_1.Util.isInsideRange(vscode_languageserver_types_1.Position.create(line, 0), instruction.getRange())) {\r\n                return instruction;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Gets all the ARG instructions that are defined in this image.\r\n     */\r\n    getARGs() {\r\n        let args = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof arg_1.Arg) {\r\n                args.push(instruction);\r\n            }\r\n        }\r\n        return args;\r\n    }\r\n    /**\r\n     * Gets all the CMD instructions that are defined in this image.\r\n     */\r\n    getCMDs() {\r\n        let cmds = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof cmd_1.Cmd) {\r\n                cmds.push(instruction);\r\n            }\r\n        }\r\n        return cmds;\r\n    }\r\n    /**\r\n     * Gets all the COPY instructions that are defined in this image.\r\n     */\r\n    getCOPYs() {\r\n        let copies = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof copy_1.Copy) {\r\n                copies.push(instruction);\r\n            }\r\n        }\r\n        return copies;\r\n    }\r\n    /**\r\n     * Gets all the ENTRYPOINT instructions that are defined in this image.\r\n     */\r\n    getENTRYPOINTs() {\r\n        let froms = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof entrypoint_1.Entrypoint) {\r\n                froms.push(instruction);\r\n            }\r\n        }\r\n        return froms;\r\n    }\r\n    /**\r\n     * Gets all the ENV instructions that are defined in this image.\r\n     */\r\n    getENVs() {\r\n        let args = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof env_1.Env) {\r\n                args.push(instruction);\r\n            }\r\n        }\r\n        return args;\r\n    }\r\n    /**\r\n     * Gets all the FROM instructions that are defined in this image.\r\n     */\r\n    getFROMs() {\r\n        let froms = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof from_1.From) {\r\n                froms.push(instruction);\r\n            }\r\n        }\r\n        return froms;\r\n    }\r\n    /**\r\n     * Gets all the HEALTHCHECK instructions that are defined in this image.\r\n     */\r\n    getHEALTHCHECKs() {\r\n        let froms = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof healthcheck_1.Healthcheck) {\r\n                froms.push(instruction);\r\n            }\r\n        }\r\n        return froms;\r\n    }\r\n    getOnbuildTriggers() {\r\n        let triggers = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof onbuild_1.Onbuild) {\r\n                let trigger = instruction.getTriggerInstruction();\r\n                if (trigger) {\r\n                    triggers.push(trigger);\r\n                }\r\n            }\r\n        }\r\n        return triggers;\r\n    }\r\n    getAvailableVariables(currentLine) {\r\n        const variables = [];\r\n        for (const arg of this.getARGs()) {\r\n            if (arg.isBefore(currentLine)) {\r\n                const property = arg.getProperty();\r\n                if (property) {\r\n                    const variable = property.getName();\r\n                    if (variables.indexOf(variable) === -1) {\r\n                        variables.push(variable);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (const env of this.getENVs()) {\r\n            if (env.isBefore(currentLine)) {\r\n                for (const property of env.getProperties()) {\r\n                    const variable = property.getName();\r\n                    if (variables.indexOf(variable) === -1) {\r\n                        variables.push(variable);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n    /**\r\n     * Resolves a variable with the given name at the specified line\r\n     * to its value. If null is returned, then the variable has been\r\n     * defined but no value was given. If undefined is returned, then\r\n     * a variable with the given name has not been defined yet as of\r\n     * the given line.\r\n     *\r\n     * @param variable the name of the variable to resolve\r\n     * @param line the line number that the variable is on, zero-based\r\n     * @return the value of the variable as defined by an ARG or ENV\r\n     *         instruction, or null if no value has been specified, or\r\n     *         undefined if a variable with the given name has not\r\n     *         been defined\r\n     */\r\n    resolveVariable(variable, line) {\r\n        let envs = this.getENVs();\r\n        for (let i = envs.length - 1; i >= 0; i--) {\r\n            if (envs[i].isBefore(line)) {\r\n                for (let property of envs[i].getProperties()) {\r\n                    if (property.getName() === variable) {\r\n                        return property.getValue();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let args = this.getARGs();\r\n        for (let i = args.length - 1; i >= 0; i--) {\r\n            if (args[i].isBefore(line)) {\r\n                let property = args[i].getProperty();\r\n                if (property && property.getName() === variable) {\r\n                    return property.getValue();\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    contains(position) {\r\n        const first = this.instructions[0].getRange();\r\n        const last = this.instructions[this.instructions.length - 1].getRange();\r\n        return util_1.Util.isInsideRange(position, vscode_languageserver_types_1.Range.create(first.start, last.end));\r\n    }\r\n}\r\nexports.ImageTemplate = ImageTemplate;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-ast/lib/imageTemplate.js\n// module id = 107\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst dockerfile_ast_1 = require(\"dockerfile-ast\");\r\nclass DockerFormatter {\r\n    getIndentation(formattingOptions) {\r\n        let indentation = \"\\t\";\r\n        if (formattingOptions && formattingOptions.insertSpaces) {\r\n            indentation = \"\";\r\n            for (let i = 0; i < formattingOptions.tabSize; i++) {\r\n                indentation = indentation + \" \";\r\n            }\r\n        }\r\n        return indentation;\r\n    }\r\n    /**\r\n     * Creates a TextEdit for formatting the given document.\r\n     *\r\n     * @param document the document being formatted\r\n     * @param start the start offset of the document's content to be replaced\r\n     * @param end the end offset of the document's content to be replaced\r\n     * @param indent true if this block should be replaced with an indentation, false otherwise\r\n     * @param indentation the string to use for an indentation\r\n     */\r\n    createFormattingEdit(document, start, end, indent, indentation) {\r\n        if (indent) {\r\n            return vscode_languageserver_types_1.TextEdit.replace({\r\n                start: document.positionAt(start),\r\n                end: document.positionAt(end)\r\n            }, indentation);\r\n        }\r\n        else {\r\n            return vscode_languageserver_types_1.TextEdit.del({\r\n                start: document.positionAt(start),\r\n                end: document.positionAt(end)\r\n            });\r\n        }\r\n    }\r\n    formatOnType(document, position, ch, options) {\r\n        const dockerfile = dockerfile_ast_1.DockerfileParser.parse(document.getText());\r\n        // check that the inserted character is the escape character\r\n        if (dockerfile.getEscapeCharacter() === ch) {\r\n            for (let comment of dockerfile.getComments()) {\r\n                // ignore if we're in a comment\r\n                if (comment.getRange().start.line === position.line) {\r\n                    return [];\r\n                }\r\n            }\r\n            const directive = dockerfile.getDirective();\r\n            // ignore if we're in the parser directive\r\n            if (directive && position.line === 0) {\r\n                return [];\r\n            }\r\n            const content = document.getText();\r\n            validityCheck: for (let i = document.offsetAt(position); i < content.length; i++) {\r\n                switch (content.charAt(i)) {\r\n                    case ' ':\r\n                    case '\\t':\r\n                        break;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        break validityCheck;\r\n                    default:\r\n                        // not escaping a newline, no need to format the next line\r\n                        return [];\r\n                }\r\n            }\r\n            const lines = [position.line + 1];\r\n            const indentedLines = [];\r\n            indentedLines[lines[0]] = true;\r\n            return this.formatLines(document, document.getText(), lines, indentedLines, options);\r\n        }\r\n        return [];\r\n    }\r\n    formatRange(document, range, options) {\r\n        const lines = [];\r\n        for (let i = range.start.line; i <= range.end.line; i++) {\r\n            lines.push(i);\r\n        }\r\n        return this.format(document, lines, options);\r\n    }\r\n    formatDocument(document, options) {\r\n        const lines = [];\r\n        for (let i = 0; i < document.lineCount; i++) {\r\n            lines.push(i);\r\n        }\r\n        return this.format(document, lines, options);\r\n    }\r\n    /**\r\n     * Formats the specified lines of the given document based on the\r\n     * provided formatting options.\r\n     *\r\n     * @param document the text document to format\r\n     * @param lines the lines to format\r\n     * @param options the formatting options to use to perform the format\r\n     * @return the text edits to apply to format the lines of the document\r\n     */\r\n    format(document, lines, options) {\r\n        let content = document.getText();\r\n        let dockerfile = dockerfile_ast_1.DockerfileParser.parse(content);\r\n        const indentedLines = [];\r\n        for (let i = 0; i < document.lineCount; i++) {\r\n            indentedLines[i] = false;\r\n        }\r\n        for (let instruction of dockerfile.getInstructions()) {\r\n            let range = instruction.getRange();\r\n            indentedLines[range.start.line] = false;\r\n            for (let i = range.start.line + 1; i <= range.end.line; i++) {\r\n                indentedLines[i] = true;\r\n            }\r\n        }\r\n        return this.formatLines(document, content, lines, indentedLines, options);\r\n    }\r\n    formatLines(document, content, lines, indentedLines, options) {\r\n        const indentation = this.getIndentation(options);\r\n        const edits = [];\r\n        lineCheck: for (let line of lines) {\r\n            let startOffset = document.offsetAt(vscode_languageserver_types_1.Position.create(line, 0));\r\n            for (let i = startOffset; i < content.length; i++) {\r\n                switch (content.charAt(i)) {\r\n                    case ' ':\r\n                    case '\\t':\r\n                        break;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        if (i !== startOffset) {\r\n                            // only whitespace on this line, trim it\r\n                            let edit = vscode_languageserver_types_1.TextEdit.del({\r\n                                start: document.positionAt(startOffset),\r\n                                end: document.positionAt(i)\r\n                            });\r\n                            edits.push(edit);\r\n                        }\r\n                        // process the next line\r\n                        continue lineCheck;\r\n                    default:\r\n                        // non-whitespace encountered\r\n                        if (i !== startOffset || indentedLines[line]) {\r\n                            let edit = this.createFormattingEdit(document, startOffset, i, indentedLines[line], indentation);\r\n                            edits.push(edit);\r\n                        }\r\n                        // process the next line\r\n                        continue lineCheck;\r\n                }\r\n            }\r\n            if (startOffset < content.length) {\r\n                // only whitespace on the last line, trim it\r\n                let edit = vscode_languageserver_types_1.TextEdit.del({\r\n                    start: document.positionAt(startOffset),\r\n                    end: document.positionAt(content.length)\r\n                });\r\n                edits.push(edit);\r\n            }\r\n        }\r\n        return edits;\r\n    }\r\n}\r\nexports.DockerFormatter = DockerFormatter;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/lib/dockerFormatter.js\n// module id = 108\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst dockerfile_ast_1 = require(\"dockerfile-ast\");\r\nconst main_1 = require(\"./main\");\r\nexports.KEYWORDS = [\r\n    \"ADD\",\r\n    \"ARG\",\r\n    \"CMD\",\r\n    \"COPY\",\r\n    \"ENTRYPOINT\",\r\n    \"ENV\",\r\n    \"EXPOSE\",\r\n    \"FROM\",\r\n    \"HEALTHCHECK\",\r\n    \"LABEL\",\r\n    \"MAINTAINER\",\r\n    \"ONBUILD\",\r\n    \"RUN\",\r\n    \"SHELL\",\r\n    \"STOPSIGNAL\",\r\n    \"USER\",\r\n    \"VOLUME\",\r\n    \"WORKDIR\"\r\n];\r\nclass Validator {\r\n    constructor(settings) {\r\n        this.settings = {\r\n            deprecatedMaintainer: main_1.ValidationSeverity.WARNING,\r\n            directiveCasing: main_1.ValidationSeverity.WARNING,\r\n            emptyContinuationLine: main_1.ValidationSeverity.WARNING,\r\n            instructionCasing: main_1.ValidationSeverity.WARNING,\r\n            instructionCmdMultiple: main_1.ValidationSeverity.WARNING,\r\n            instructionEntrypointMultiple: main_1.ValidationSeverity.WARNING,\r\n            instructionHealthcheckMultiple: main_1.ValidationSeverity.WARNING\r\n        };\r\n        if (settings) {\r\n            this.settings = settings;\r\n        }\r\n    }\r\n    parseDirective(dockerfile, problems) {\r\n        let directive = dockerfile.getDirective();\r\n        if (directive === null) {\r\n            return;\r\n        }\r\n        let directiveName = directive.getDirective();\r\n        let value = directive.getValue();\r\n        if (directiveName === dockerfile_ast_1.Directive.escape) {\r\n            if (value !== '\\\\' && value !== '`' && value !== \"\") {\r\n                // if the directive's value is invalid or isn't the empty string, flag it\r\n                let range = directive.getValueRange();\r\n                problems.push(Validator.createInvalidEscapeDirective(range.start, range.end, value));\r\n            }\r\n            if (directive.getName() !== dockerfile_ast_1.Directive.escape) {\r\n                let range = directive.getNameRange();\r\n                let diagnostic = this.createLowercaseDirective(range.start, range.end);\r\n                if (diagnostic) {\r\n                    problems.push(diagnostic);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks the arguments of the given instruction.\r\n     *\r\n     * @param instruction the instruction to validate\r\n     * @param problems an array of identified problems in the document\r\n     * @param expectedArgCount an array of expected number of arguments\r\n     *                         for the instruction, if its length is 1\r\n     *                         and its value is -1, any number of\r\n     *                         arguments greater than zero is valid\r\n     * @param validate the function to use to validate an argument\r\n     * @param createIncompleteDiagnostic the function to use to create a diagnostic\r\n     *                                   if the number of arguments is incorrect\r\n     */\r\n    checkArguments(instruction, problems, expectedArgCount, validate, createIncompleteDiagnostic) {\r\n        let args = instruction.getArguments();\r\n        if (args.length === 0) {\r\n            // all instructions are expected to have at least one argument\r\n            let range = instruction.getInstructionRange();\r\n            problems.push(Validator.createMissingArgument(range.start, range.end));\r\n        }\r\n        else if (expectedArgCount[0] === -1) {\r\n            for (let i = 0; i < args.length; i++) {\r\n                let createInvalidDiagnostic = validate(i, args[i].getValue(), args[i].getRange());\r\n                if (createInvalidDiagnostic) {\r\n                    let range = args[i].getRange();\r\n                    problems.push(createInvalidDiagnostic(range.start, range.end, args[i].getValue()));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < expectedArgCount.length; i++) {\r\n                if (expectedArgCount[i] === args.length) {\r\n                    for (let j = 0; j < args.length; j++) {\r\n                        let range = args[j].getRange();\r\n                        let createInvalidDiagnostic = validate(j, args[j].getValue(), range);\r\n                        if (createInvalidDiagnostic instanceof Function) {\r\n                            problems.push(createInvalidDiagnostic(range.start, range.end, args[j].getValue()));\r\n                        }\r\n                        else if (createInvalidDiagnostic !== null) {\r\n                            problems.push(createInvalidDiagnostic);\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            let range = args[args.length - 1].getRange();\r\n            if (createIncompleteDiagnostic) {\r\n                problems.push(createIncompleteDiagnostic(range.start, range.end));\r\n            }\r\n            else {\r\n                problems.push(Validator.createExtraArgument(range.start, range.end));\r\n            }\r\n        }\r\n    }\r\n    validate(document) {\r\n        this.document = document;\r\n        let problems = [];\r\n        let dockerfile = dockerfile_ast_1.DockerfileParser.parse(document.getText());\r\n        this.parseDirective(dockerfile, problems);\r\n        let instructions = dockerfile.getInstructions();\r\n        if (instructions.length === 0 || dockerfile.getARGs().length === instructions.length) {\r\n            // no instructions in this file, or only ARGs\r\n            problems.push(Validator.createNoSourceImage(document.positionAt(0), document.positionAt(0)));\r\n        }\r\n        let cmds = dockerfile.getCMDs();\r\n        if (cmds.length > 1) {\r\n            // more than one CMD found, warn the user\r\n            for (let cmd of cmds) {\r\n                let diagnostic = this.createMultipleInstructions(cmd.getInstructionRange(), this.settings.instructionCmdMultiple, \"CMD\");\r\n                if (diagnostic) {\r\n                    problems.push(diagnostic);\r\n                }\r\n            }\r\n        }\r\n        let entrypoints = dockerfile.getENTRYPOINTs();\r\n        if (entrypoints.length > 1) {\r\n            // more than one ENTRYPOINT found, warn the user\r\n            for (let entrypoint of entrypoints) {\r\n                let diagnostic = this.createMultipleInstructions(entrypoint.getInstructionRange(), this.settings.instructionEntrypointMultiple, \"ENTRYPOINT\");\r\n                if (diagnostic) {\r\n                    problems.push(diagnostic);\r\n                }\r\n            }\r\n        }\r\n        let healthchecks = dockerfile.getHEALTHCHECKs();\r\n        if (healthchecks.length > 1) {\r\n            // more than one HEALTHCHECK found, warn the user\r\n            for (let healthcheck of healthchecks) {\r\n                let diagnostic = this.createMultipleInstructions(healthcheck.getInstructionRange(), this.settings.instructionHealthcheckMultiple, \"HEALTHCHECK\");\r\n                if (diagnostic) {\r\n                    problems.push(diagnostic);\r\n                }\r\n            }\r\n        }\r\n        const names = {};\r\n        const froms = dockerfile.getFROMs();\r\n        for (let from of froms) {\r\n            let name = from.getBuildStage();\r\n            if (name) {\r\n                name = name.toLowerCase();\r\n                if (!names[name]) {\r\n                    names[name] = [];\r\n                }\r\n                names[name].push(from.getBuildStageRange());\r\n            }\r\n        }\r\n        for (let name in names) {\r\n            // duplicates found\r\n            if (names[name].length > 1) {\r\n                for (let range of names[name]) {\r\n                    problems.push(Validator.createDuplicateBuildStageName(range, name));\r\n                }\r\n            }\r\n        }\r\n        let escapeChar = dockerfile.getEscapeCharacter();\r\n        let hasFrom = false;\r\n        for (let instruction of dockerfile.getInstructions()) {\r\n            let keyword = instruction.getKeyword();\r\n            if (keyword === \"FROM\") {\r\n                hasFrom = true;\r\n            }\r\n            else if (!hasFrom && keyword !== \"ARG\") {\r\n                // first non-ARG instruction is not a FROM\r\n                let range = instruction.getInstructionRange();\r\n                problems.push(Validator.createNoSourceImage(range.start, range.end));\r\n                hasFrom = true;\r\n            }\r\n            this.validateInstruction(document, escapeChar, instruction, keyword, false, problems);\r\n        }\r\n        for (let instruction of dockerfile.getOnbuildTriggers()) {\r\n            this.validateInstruction(document, escapeChar, instruction, instruction.getKeyword(), true, problems);\r\n        }\r\n        return problems;\r\n    }\r\n    validateInstruction(document, escapeChar, instruction, keyword, isTrigger, problems) {\r\n        if (exports.KEYWORDS.indexOf(keyword) === -1) {\r\n            let range = instruction.getInstructionRange();\r\n            // invalid instruction found\r\n            problems.push(Validator.createUnknownInstruction(range.start, range.end, keyword));\r\n        }\r\n        else {\r\n            if (keyword !== instruction.getInstruction()) {\r\n                let range = instruction.getInstructionRange();\r\n                // warn about uppercase convention if the keyword doesn't match the actual instruction\r\n                let diagnostic = this.createUppercaseInstruction(range.start, range.end);\r\n                if (diagnostic) {\r\n                    problems.push(diagnostic);\r\n                }\r\n            }\r\n            if (keyword === \"MAINTAINER\") {\r\n                let range = instruction.getInstructionRange();\r\n                let diagnostic = this.createMaintainerDeprecated(range.start, range.end);\r\n                if (diagnostic) {\r\n                    problems.push(diagnostic);\r\n                }\r\n            }\r\n            const fullRange = instruction.getRange();\r\n            if (fullRange.start.line !== fullRange.end.line && !isTrigger) {\r\n                // if the instruction spans multiple lines, check for empty newlines\r\n                const content = document.getText();\r\n                const endingLine = fullRange.end.line;\r\n                let start = -1;\r\n                for (let i = fullRange.start.line; i <= endingLine; i++) {\r\n                    const lineContent = content.substring(document.offsetAt(vscode_languageserver_types_1.Position.create(i, 0)), document.offsetAt(vscode_languageserver_types_1.Position.create(i + 1, 0)));\r\n                    if (lineContent.trim().length === 0) {\r\n                        if (start === -1) {\r\n                            start = i;\r\n                            continue;\r\n                        }\r\n                    }\r\n                    else if (start !== -1) {\r\n                        const diagnostic = Validator.createEmptyContinuationLine(vscode_languageserver_types_1.Position.create(start, 0), vscode_languageserver_types_1.Position.create(i, 0), this.settings.emptyContinuationLine);\r\n                        if (diagnostic) {\r\n                            problems.push(diagnostic);\r\n                        }\r\n                        start = -1;\r\n                    }\r\n                }\r\n                if (start !== -1) {\r\n                    const diagnostic = Validator.createEmptyContinuationLine(vscode_languageserver_types_1.Position.create(start, 0), vscode_languageserver_types_1.Position.create(endingLine + 1, 0), this.settings.emptyContinuationLine);\r\n                    if (diagnostic) {\r\n                        problems.push(diagnostic);\r\n                    }\r\n                    start = -1;\r\n                }\r\n            }\r\n            switch (keyword) {\r\n                case \"CMD\":\r\n                    // don't validate CMD instructions\r\n                    break;\r\n                case \"ARG\":\r\n                    this.checkArguments(instruction, problems, [-1], function (index) {\r\n                        if (index > 0) {\r\n                            return Validator.createARGRequiresOneArgument;\r\n                        }\r\n                        return null;\r\n                    }, Validator.createARGRequiresOneArgument);\r\n                    break;\r\n                case \"ENV\":\r\n                case \"LABEL\":\r\n                    this.checkArguments(instruction, problems, [-1], function () {\r\n                        return null;\r\n                    });\r\n                    let properties = instruction instanceof dockerfile_ast_1.Env ? instruction.getProperties() : instruction.getProperties();\r\n                    if (properties.length === 1 && properties[0].getValue() === null) {\r\n                        let range = properties[0].getNameRange();\r\n                        problems.push(Validator.createENVRequiresTwoArguments(range.start, range.end));\r\n                    }\r\n                    else if (properties.length !== 0) {\r\n                        for (let property of properties) {\r\n                            if (property.getName() === \"\") {\r\n                                let range = property.getRange();\r\n                                problems.push(Validator.createSyntaxMissingNames(range.start, range.end, keyword));\r\n                            }\r\n                            let value = property.getValue();\r\n                            if (value === null) {\r\n                                let range = property.getNameRange();\r\n                                problems.push(Validator.createSyntaxMissingEquals(range.start, range.end, property.getName()));\r\n                            }\r\n                            else if (value.charAt(0) === '\"') {\r\n                                let found = false;\r\n                                for (let i = 1; i < value.length; i++) {\r\n                                    switch (value.charAt(i)) {\r\n                                        case escapeChar:\r\n                                            i++;\r\n                                            break;\r\n                                        case '\"':\r\n                                            if (i === value.length - 1) {\r\n                                                found = true;\r\n                                            }\r\n                                            break;\r\n                                    }\r\n                                }\r\n                                if (!found) {\r\n                                    let range = property.getValueRange();\r\n                                    problems.push(Validator.createSyntaxMissingDoubleQuote(range.start, range.end, property.getRawValue()));\r\n                                }\r\n                            }\r\n                            else if (value.charAt(0) === '\\'' && value.charAt(value.length - 1) !== '\\'') {\r\n                                let range = property.getValueRange();\r\n                                problems.push(Validator.createSyntaxMissingSingleQuote(range.start, range.end, value));\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"FROM\":\r\n                    this.checkArguments(instruction, problems, [1, 3], function (index, argument, range) {\r\n                        switch (index) {\r\n                            case 0:\r\n                                let from = instruction;\r\n                                let index = argument.indexOf('@');\r\n                                if (index === -1) {\r\n                                    index = argument.indexOf(':');\r\n                                    if (index === -1) {\r\n                                        return null;\r\n                                    }\r\n                                    let tag = argument.substring(index + 1);\r\n                                    if (tag === \"\") {\r\n                                        // no tag specified, just highlight the whole argument\r\n                                        return Validator.createInvalidReferenceFormat(range);\r\n                                    }\r\n                                    let tagRegexp = new RegExp(/^[\\w][\\w.-]{0,127}$/);\r\n                                    if (tagRegexp.test(tag)) {\r\n                                        return null;\r\n                                    }\r\n                                    return Validator.createInvalidReferenceFormat(from.getImageTagRange());\r\n                                }\r\n                                let endIndex = argument.indexOf(':');\r\n                                if (endIndex === -1) {\r\n                                    return Validator.createInvalidReferenceFormat(from.getImageDigestRange());\r\n                                }\r\n                                let algorithmRegexp = new RegExp(/[A-Fa-f0-9_+.-]+/);\r\n                                let algorithm = argument.substring(index + 1, endIndex);\r\n                                if (!algorithmRegexp.test(algorithm)) {\r\n                                    return Validator.createInvalidReferenceFormat(from.getImageDigestRange());\r\n                                }\r\n                                let hex = argument.substring(endIndex + 1);\r\n                                let hexRegexp = new RegExp(/[A-Fa-f0-9]+/);\r\n                                if (hexRegexp.test(hex)) {\r\n                                    return null;\r\n                                }\r\n                                return Validator.createInvalidReferenceFormat(from.getImageDigestRange());\r\n                            case 1:\r\n                                return argument.toUpperCase() === \"AS\" ? null : Validator.createInvalidAs;\r\n                            case 2:\r\n                                argument = argument.toLowerCase();\r\n                                let regexp = new RegExp(/^[a-z]([a-z0-9_\\-.]*)*$/);\r\n                                if (regexp.test(argument)) {\r\n                                    return null;\r\n                                }\r\n                                return Validator.createInvalidBuildStageName(range, argument);\r\n                                ;\r\n                            default:\r\n                                return null;\r\n                        }\r\n                    }, Validator.createRequiresOneOrThreeArguments);\r\n                    break;\r\n                case \"HEALTHCHECK\":\r\n                    let args = instruction.getArguments();\r\n                    const healthcheckFlags = instruction.getFlags();\r\n                    if (args.length === 0) {\r\n                        // all instructions are expected to have at least one argument\r\n                        problems.push(Validator.createHEALTHCHECKRequiresAtLeastOneArgument(instruction.getInstructionRange()));\r\n                    }\r\n                    else {\r\n                        const value = args[0].getValue();\r\n                        const uppercase = value.toUpperCase();\r\n                        if (uppercase === \"NONE\") {\r\n                            // check that NONE doesn't have any arguments after it\r\n                            if (args.length > 1) {\r\n                                // get the next argument\r\n                                const start = args[1].getRange().start;\r\n                                // get the last argument\r\n                                const end = args[args.length - 1].getRange().end;\r\n                                // highlight everything after the NONE and warn the user\r\n                                problems.push(Validator.createHealthcheckNoneUnnecessaryArgument(start, end));\r\n                            }\r\n                            // don't need to validate flags of a NONE\r\n                            break;\r\n                        }\r\n                        else if (uppercase === \"CMD\") {\r\n                            if (args.length === 1) {\r\n                                // this HEALTHCHECK has a CMD with no arguments\r\n                                const range = args[0].getRange();\r\n                                problems.push(Validator.createHealthcheckCmdArgumentMissing(range.start, range.end));\r\n                            }\r\n                        }\r\n                        else {\r\n                            // unknown HEALTHCHECK type\r\n                            problems.push(Validator.createHealthcheckTypeUnknown(args[0].getRange(), uppercase));\r\n                        }\r\n                    }\r\n                    const validFlags = [\"interval\", \"retries\", \"start-period\", \"timeout\"];\r\n                    for (const flag of healthcheckFlags) {\r\n                        const flagName = flag.getName();\r\n                        if (validFlags.indexOf(flagName) === -1) {\r\n                            const range = flag.getRange();\r\n                            problems.push(Validator.createUnknownHealthcheckFlag(range.start, flagName === \"\" ? range.end : flag.getNameRange().end, flag.getName()));\r\n                        }\r\n                        else if (flagName === \"retries\") {\r\n                            const value = flag.getValue();\r\n                            if (value) {\r\n                                const valueRange = flag.getValueRange();\r\n                                const integer = parseInt(value);\r\n                                // test for NaN or numbers with decimals\r\n                                if (isNaN(integer) || value.indexOf('.') !== -1) {\r\n                                    problems.push(Validator.createInvalidSyntax(valueRange.start, valueRange.end, value));\r\n                                }\r\n                                else if (integer < 1) {\r\n                                    problems.push(Validator.createFlagAtLeastOne(valueRange.start, valueRange.end, \"--retries\", integer.toString()));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    this.checkFlagValue(healthcheckFlags, validFlags, problems);\r\n                    this.checkFlagDuration(healthcheckFlags, [\"interval\", \"start-period\", \"timeout\"], problems);\r\n                    this.checkDuplicateFlags(healthcheckFlags, validFlags, problems);\r\n                    break;\r\n                case \"ONBUILD\":\r\n                    this.checkArguments(instruction, problems, [-1], function () {\r\n                        return null;\r\n                    });\r\n                    let onbuild = instruction;\r\n                    let trigger = onbuild.getTrigger();\r\n                    switch (trigger) {\r\n                        case \"FROM\":\r\n                        case \"MAINTAINER\":\r\n                            problems.push(Validator.createOnbuildTriggerDisallowed(onbuild.getTriggerRange(), trigger));\r\n                            break;\r\n                        case \"ONBUILD\":\r\n                            problems.push(Validator.createOnbuildChainingDisallowed(onbuild.getTriggerRange()));\r\n                            break;\r\n                    }\r\n                    break;\r\n                case \"SHELL\":\r\n                    this.checkArguments(instruction, problems, [-1], function () {\r\n                        return null;\r\n                    });\r\n                    this.checkJSON(instruction, problems);\r\n                    break;\r\n                case \"STOPSIGNAL\":\r\n                    this.checkArguments(instruction, problems, [1], function (_index, argument) {\r\n                        if (argument.indexOf(\"SIG\") === 0 || argument.indexOf('$') != -1) {\r\n                            return null;\r\n                        }\r\n                        for (var i = 0; i < argument.length; i++) {\r\n                            if ('0' > argument.charAt(i) || '9' < argument.charAt(i)) {\r\n                                return Validator.createInvalidStopSignal;\r\n                            }\r\n                        }\r\n                        return null;\r\n                    });\r\n                    let stopsignalArgs = instruction.getExpandedArguments();\r\n                    if (stopsignalArgs.length === 1) {\r\n                        let value = stopsignalArgs[0].getValue();\r\n                        let variables = instruction.getVariables();\r\n                        if (variables.length === 0) {\r\n                            if (value.indexOf('$') !== -1) {\r\n                                let range = stopsignalArgs[0].getRange();\r\n                                problems.push(Validator.createInvalidStopSignal(range.start, range.end, value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (let variable of variables) {\r\n                                let variableRange = variable.getRange();\r\n                                let variableDefinition = this.document.getText().substring(this.document.offsetAt(variableRange.start), this.document.offsetAt(variableRange.end));\r\n                                // an un-expanded variable is here\r\n                                if (value.includes(variableDefinition) && !variable.isDefined()) {\r\n                                    let range = stopsignalArgs[0].getRange();\r\n                                    problems.push(Validator.createInvalidStopSignal(range.start, range.end, \"\"));\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"EXPOSE\":\r\n                    let exposeArgs = instruction.getExpandedArguments();\r\n                    if (exposeArgs.length === 0) {\r\n                        let range = instruction.getInstructionRange();\r\n                        problems.push(Validator.createMissingArgument(range.start, range.end));\r\n                    }\r\n                    else {\r\n                        const regex = /^([0-9])+(-[0-9]+)?(:([0-9])+(-[0-9]*)?)?(\\/(\\w*))?(\\/\\w*)*$/;\r\n                        argCheck: for (let i = 0; i < exposeArgs.length; i++) {\r\n                            const value = exposeArgs[i].getValue();\r\n                            const match = regex.exec(value);\r\n                            if (match) {\r\n                                if (match[7]) {\r\n                                    const protocol = match[7].toLowerCase();\r\n                                    if (protocol !== \"\" && protocol !== \"tcp\" && protocol !== \"udp\") {\r\n                                        const range = exposeArgs[i].getRange();\r\n                                        const rangeStart = this.document.offsetAt(range.start);\r\n                                        const rawArg = this.document.getText().substring(rangeStart, this.document.offsetAt(range.end));\r\n                                        const start = rangeStart + rawArg.indexOf(match[7].substring(0, 1));\r\n                                        const end = protocol.length === 1 ? rangeStart + start + 1 : rangeStart + rawArg.length;\r\n                                        problems.push(Validator.createInvalidProto(this.document.positionAt(start), this.document.positionAt(end), match[7]));\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                let variables = instruction.getVariables();\r\n                                for (let variable of variables) {\r\n                                    let variableRange = variable.getRange();\r\n                                    let variableDefinition = this.document.getText().substring(this.document.offsetAt(variableRange.start), this.document.offsetAt(variableRange.end));\r\n                                    // an un-expanded variable is here\r\n                                    if (value.includes(variableDefinition)) {\r\n                                        continue argCheck;\r\n                                    }\r\n                                }\r\n                                problems.push(Validator.createInvalidPort(exposeArgs[i].getRange(), value));\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"ADD\":\r\n                    const addArgs = instruction.getArguments();\r\n                    if (addArgs.length === 1) {\r\n                        problems.push(Validator.createADDRequiresAtLeastTwoArguments(addArgs[0].getRange()));\r\n                    }\r\n                    else if (addArgs.length === 0) {\r\n                        problems.push(Validator.createADDRequiresAtLeastTwoArguments(instruction.getInstructionRange()));\r\n                    }\r\n                    else if (addArgs.length > 2) {\r\n                        let addDestination = addArgs[addArgs.length - 1].getValue();\r\n                        let lastChar = addDestination.charAt(addDestination.length - 1);\r\n                        if (lastChar !== '\\\\' && lastChar !== '/') {\r\n                            problems.push(Validator.createADDDestinationNotDirectory(addArgs[addArgs.length - 1].getRange()));\r\n                        }\r\n                    }\r\n                    const addFlags = instruction.getFlags();\r\n                    for (let flag of addFlags) {\r\n                        const name = flag.getName();\r\n                        const flagRange = flag.getRange();\r\n                        if (name === \"\") {\r\n                            problems.push(Validator.createUnknownAddFlag(flagRange.start, flagRange.end, name));\r\n                        }\r\n                        else if (name !== \"chown\") {\r\n                            let range = flag.getNameRange();\r\n                            problems.push(Validator.createUnknownAddFlag(flagRange.start, range.end, name));\r\n                        }\r\n                    }\r\n                    this.checkFlagValue(addFlags, [\"chown\"], problems);\r\n                    this.checkDuplicateFlags(addFlags, [\"chown\"], problems);\r\n                    break;\r\n                case \"COPY\":\r\n                    let copy = instruction;\r\n                    let copyArgs = instruction.getArguments();\r\n                    let flags = copy.getFlags();\r\n                    if (flags.length > 0) {\r\n                        for (let flag of flags) {\r\n                            const name = flag.getName();\r\n                            const flagRange = flag.getRange();\r\n                            if (name === \"\") {\r\n                                problems.push(Validator.createUnknownCopyFlag(flagRange.start, flagRange.end, name));\r\n                            }\r\n                            else if (name !== \"from\" && name !== \"chown\") {\r\n                                let range = flag.getNameRange();\r\n                                problems.push(Validator.createUnknownCopyFlag(flagRange.start, range.end, name));\r\n                            }\r\n                        }\r\n                        let flag = copy.getFromFlag();\r\n                        if (flag) {\r\n                            let value = flag.getValue();\r\n                            if (value !== null) {\r\n                                let regexp = new RegExp(/^[a-zA-Z0-9].*$/);\r\n                                if (!regexp.test(value)) {\r\n                                    let range = value === \"\" ? flag.getRange() : flag.getValueRange();\r\n                                    problems.push(Validator.createFlagInvalidFrom(range.start, range.end, value));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (copyArgs.length === 1) {\r\n                        problems.push(Validator.createCOPYRequiresAtLeastTwoArguments(copyArgs[0].getRange()));\r\n                    }\r\n                    else if (copyArgs.length === 0) {\r\n                        problems.push(Validator.createCOPYRequiresAtLeastTwoArguments(instruction.getInstructionRange()));\r\n                    }\r\n                    else if (copyArgs.length > 2) {\r\n                        let copyDestination = copyArgs[copyArgs.length - 1].getValue();\r\n                        let lastChar = copyDestination.charAt(copyDestination.length - 1);\r\n                        if (lastChar !== '\\\\' && lastChar !== '/') {\r\n                            problems.push(Validator.createCOPYDestinationNotDirectory(copyArgs[copyArgs.length - 1].getRange()));\r\n                        }\r\n                    }\r\n                    this.checkFlagValue(flags, [\"chown\", \"from\"], problems);\r\n                    this.checkDuplicateFlags(flags, [\"chown\", \"from\"], problems);\r\n                    break;\r\n                default:\r\n                    this.checkArguments(instruction, problems, [-1], function () {\r\n                        return null;\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    checkFlagValue(flags, validFlagNames, problems) {\r\n        for (let flag of flags) {\r\n            let flagName = flag.getName();\r\n            // only validate flags with the right name\r\n            if (flag.getValue() === null && validFlagNames.indexOf(flagName) !== -1) {\r\n                let range = flag.getNameRange();\r\n                problems.push(Validator.createFlagMissingValue(range.start, range.end, flagName));\r\n            }\r\n        }\r\n    }\r\n    checkFlagDuration(flags, validFlagNames, problems) {\r\n        flagCheck: for (let flag of flags) {\r\n            let flagName = flag.getName();\r\n            // only validate flags with the right name\r\n            if (validFlagNames.indexOf(flagName) !== -1) {\r\n                let value = flag.getValue();\r\n                if (value !== null && value.length !== 0) {\r\n                    switch (value.charAt(0)) {\r\n                        case '0':\r\n                        case '1':\r\n                        case '2':\r\n                        case '3':\r\n                        case '4':\r\n                        case '5':\r\n                        case '6':\r\n                        case '7':\r\n                        case '8':\r\n                        case '9':\r\n                        case '.':\r\n                        case '-':\r\n                            break;\r\n                        default:\r\n                            let range = flag.getValueRange();\r\n                            problems.push(Validator.createFlagInvalidDuration(range.start, range.end, value));\r\n                            continue flagCheck;\r\n                    }\r\n                    let durationSpecified = false;\r\n                    let start = 0;\r\n                    let duration = 0;\r\n                    durationParse: for (let i = 0; i < value.length; i++) {\r\n                        durationSpecified = false;\r\n                        switch (value.charAt(i)) {\r\n                            case '-':\r\n                            case '.':\r\n                            case '0':\r\n                            case '1':\r\n                            case '2':\r\n                            case '3':\r\n                            case '4':\r\n                            case '5':\r\n                            case '6':\r\n                            case '7':\r\n                            case '8':\r\n                            case '9':\r\n                                continue;\r\n                            default:\r\n                                let time = parseInt(value.substring(start, i));\r\n                                for (let j = i + 1; j < value.length; j++) {\r\n                                    if (Validator.isNumberRelated(value.charAt(j))) {\r\n                                        let unit = value.substring(i, j);\r\n                                        if (time < 0 || (value.charAt(start) === '-' && time === 0)) {\r\n                                            let nameRange = flag.getNameRange();\r\n                                            problems.push(Validator.createFlagLessThan1ms(nameRange.start, nameRange.end, flagName));\r\n                                            continue flagCheck;\r\n                                        }\r\n                                        switch (unit) {\r\n                                            case 'h':\r\n                                                // hours\r\n                                                duration += time * 1000 * 60 * 60;\r\n                                                i = j - 1;\r\n                                                start = i;\r\n                                                durationSpecified = true;\r\n                                                continue durationParse;\r\n                                            case 'm':\r\n                                                // minutes\r\n                                                duration += time * 1000 * 60;\r\n                                                i = j - 1;\r\n                                                start = i;\r\n                                                durationSpecified = true;\r\n                                                continue durationParse;\r\n                                            case 's':\r\n                                                // seconds\r\n                                                duration += time * 1000;\r\n                                                i = j - 1;\r\n                                                start = i;\r\n                                                durationSpecified = true;\r\n                                                continue durationParse;\r\n                                            case \"ms\":\r\n                                                // milliseconds\r\n                                                duration += time;\r\n                                                i = j - 1;\r\n                                                start = i;\r\n                                                durationSpecified = true;\r\n                                                continue durationParse;\r\n                                            case \"us\":\r\n                                            case \"µs\":\r\n                                                // microseconds\r\n                                                duration += time / 1000;\r\n                                                i = j - 1;\r\n                                                start = i;\r\n                                                durationSpecified = true;\r\n                                                continue durationParse;\r\n                                            case \"ns\":\r\n                                                // nanoseconds\r\n                                                duration += time / 1000000;\r\n                                                i = j - 1;\r\n                                                start = i;\r\n                                                durationSpecified = true;\r\n                                                continue durationParse;\r\n                                            default:\r\n                                                let range = flag.getValueRange();\r\n                                                problems.push(Validator.createFlagUnknownUnit(range, unit, value));\r\n                                                continue flagCheck;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (time < 0 || (value.charAt(start) === '-' && time === 0)) {\r\n                                    let nameRange = flag.getNameRange();\r\n                                    problems.push(Validator.createFlagLessThan1ms(nameRange.start, nameRange.end, flagName));\r\n                                    continue flagCheck;\r\n                                }\r\n                                let unit = value.substring(i, value.length);\r\n                                switch (unit) {\r\n                                    case 'h':\r\n                                        // hours\r\n                                        duration += time * 1000 * 60 * 60;\r\n                                        durationSpecified = true;\r\n                                        break durationParse;\r\n                                    case 'm':\r\n                                        // minutes\r\n                                        duration += time * 1000 * 60;\r\n                                        durationSpecified = true;\r\n                                        break durationParse;\r\n                                    case 's':\r\n                                        // seconds\r\n                                        duration += time * 1000;\r\n                                        durationSpecified = true;\r\n                                        break durationParse;\r\n                                    case \"ms\":\r\n                                        // minutes\r\n                                        duration += time;\r\n                                        durationSpecified = true;\r\n                                        break durationParse;\r\n                                    case \"us\":\r\n                                    case \"µs\":\r\n                                        // microseconds\r\n                                        duration += time / 1000;\r\n                                        durationSpecified = true;\r\n                                        break durationParse;\r\n                                    case \"ns\":\r\n                                        // nanoseconds\r\n                                        duration += time / 1000000;\r\n                                        durationSpecified = true;\r\n                                        break durationParse;\r\n                                    default:\r\n                                        let range = flag.getValueRange();\r\n                                        problems.push(Validator.createFlagUnknownUnit(range, unit, value));\r\n                                        break;\r\n                                }\r\n                                continue flagCheck;\r\n                        }\r\n                    }\r\n                    if (!durationSpecified) {\r\n                        let range = flag.getValueRange();\r\n                        problems.push(Validator.createFlagMissingDuration(range.start, range.end, value));\r\n                    }\r\n                    else if (duration < 1) {\r\n                        let range = flag.getNameRange();\r\n                        problems.push(Validator.createFlagLessThan1ms(range.start, range.end, flagName));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static isNumberRelated(character) {\r\n        switch (character) {\r\n            case '.':\r\n            case '0':\r\n            case '1':\r\n            case '2':\r\n            case '3':\r\n            case '4':\r\n            case '5':\r\n            case '6':\r\n            case '7':\r\n            case '8':\r\n            case '9':\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    checkDuplicateFlags(flags, validFlags, problems) {\r\n        let flagNames = flags.map(function (flag) {\r\n            return flag.getName();\r\n        });\r\n        for (let validFlag of validFlags) {\r\n            let index = flagNames.indexOf(validFlag);\r\n            let lastIndex = flagNames.lastIndexOf(validFlag);\r\n            if (index !== lastIndex) {\r\n                let range = flags[index].getNameRange();\r\n                problems.push(Validator.createFlagDuplicate(range.start, range.end, flagNames[index]));\r\n                range = flags[lastIndex].getNameRange();\r\n                problems.push(Validator.createFlagDuplicate(range.start, range.end, flagNames[index]));\r\n            }\r\n        }\r\n    }\r\n    checkJSON(instruction, problems) {\r\n        let argsContent = instruction.getArgumentsContent();\r\n        if (argsContent === null) {\r\n            return;\r\n        }\r\n        let argsRange = instruction.getArgumentsRange();\r\n        let args = instruction.getArguments();\r\n        if ((args.length === 1 && args[0].getValue() === \"[]\") ||\r\n            (args.length === 2 && args[0].getValue() === '[' && args[1].getValue() === ']')) {\r\n            problems.push(Validator.createShellRequiresOne(argsRange));\r\n            return;\r\n        }\r\n        let last = \"\";\r\n        let quoted = false;\r\n        argsCheck: for (let i = 0; i < argsContent.length; i++) {\r\n            switch (argsContent.charAt(i)) {\r\n                case '[':\r\n                    if (last === \"\") {\r\n                        last = '[';\r\n                    }\r\n                    else if (!quoted) {\r\n                        break argsCheck;\r\n                    }\r\n                    break;\r\n                case '\"':\r\n                    if (last === '[' || last === ',') {\r\n                        quoted = true;\r\n                        last = '\"';\r\n                        continue;\r\n                    }\r\n                    else if (last === '\"') {\r\n                        if (quoted) {\r\n                            // quoted string done\r\n                            quoted = false;\r\n                        }\r\n                        else {\r\n                            // should be a , or a ]\r\n                            break argsCheck;\r\n                        }\r\n                    }\r\n                    else {\r\n                        break argsCheck;\r\n                    }\r\n                    break;\r\n                case ',':\r\n                    if (!quoted) {\r\n                        if (last === '\"') {\r\n                            last = ',';\r\n                        }\r\n                        else {\r\n                            break argsCheck;\r\n                        }\r\n                    }\r\n                    break;\r\n                case ']':\r\n                    if (!quoted) {\r\n                        if (last === null) {\r\n                            last = ']';\r\n                            break argsCheck;\r\n                        }\r\n                        else if (last !== ',') {\r\n                            last = null;\r\n                        }\r\n                    }\r\n                    break;\r\n                case ' ':\r\n                case '\\t':\r\n                    break;\r\n                case '\\\\':\r\n                    if (quoted) {\r\n                        switch (argsContent.charAt(i + 1)) {\r\n                            case '\"':\r\n                            case '\\\\':\r\n                                i++;\r\n                                continue;\r\n                            case ' ':\r\n                            case '\\t':\r\n                                for (let j = i + 2; j < argsContent.length; j++) {\r\n                                    switch (argsContent.charAt(j)) {\r\n                                        case '\\r':\r\n                                            j++;\r\n                                        case '\\n':\r\n                                            i = j;\r\n                                            continue argsCheck;\r\n                                        case ' ':\r\n                                        case '\\t':\r\n                                            break;\r\n                                        default:\r\n                                            break argsCheck;\r\n                                    }\r\n                                }\r\n                                break;\r\n                            default:\r\n                                i++;\r\n                                continue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let j = i + 1; j < argsContent.length; j++) {\r\n                            switch (argsContent.charAt(j)) {\r\n                                case '\\r':\r\n                                    if (argsContent.charAt(j + 1) === '\\n') {\r\n                                        j++;\r\n                                    }\r\n                                case '\\n':\r\n                                    i = j;\r\n                                    continue argsCheck;\r\n                                case ' ':\r\n                                case '\\t':\r\n                                    break;\r\n                                default:\r\n                                    break argsCheck;\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (!quoted) {\r\n                        break argsCheck;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        if (last !== null) {\r\n            problems.push(Validator.createShellJsonForm(argsRange));\r\n        }\r\n    }\r\n    static formatMessage(text, ...variables) {\r\n        for (let i = 0; i < variables.length; i++) {\r\n            text = text.replace(\"${\" + i + \"}\", variables[i]);\r\n        }\r\n        return text;\r\n    }\r\n    static getDiagnosticMessage_DirectiveCasing() {\r\n        return Validator.dockerProblems[\"directiveCasing\"];\r\n    }\r\n    static getDiagnosticMessage_DirectiveEscapeInvalid(value) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"directiveEscapeInvalid\"], value);\r\n    }\r\n    static getDiagnosticMessage_NoSourceImage() {\r\n        return Validator.dockerProblems[\"noSourceImage\"];\r\n    }\r\n    static getDiagnosticMessage_EmptyContinuationLine() {\r\n        return Validator.dockerProblems[\"emptyContinuationLine\"];\r\n    }\r\n    static getDiagnosticMessage_DuplicateBuildStageName(name) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"duplicateBuildStageName\"], name);\r\n    }\r\n    static getDiagnosticMessage_InvalidBuildStageName(name) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"invalidBuildStageName\"], name);\r\n    }\r\n    static getDiagnosticMessage_FlagAtLeastOne(flagName, flagValue) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"flagAtLeastOne\"], flagName, flagValue);\r\n    }\r\n    static getDiagnosticMessage_FlagDuplicate(flag) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"flagDuplicate\"], flag);\r\n    }\r\n    static getDiagnosticMessage_FlagInvalidDuration(flag) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"flagInvalidDuration\"], flag);\r\n    }\r\n    static getDiagnosticMessage_FlagLessThan1ms(flag) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"flagLessThan1ms\"], flag);\r\n    }\r\n    static getDiagnosticMessage_FlagMissingDuration(duration) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"flagMissingDuration\"], duration);\r\n    }\r\n    static getDiagnosticMessage_FlagInvalidFromValue(value) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"flagInvalidFrom\"], value);\r\n    }\r\n    static getDiagnosticMessage_FlagMissingValue(flag) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"flagMissingValue\"], flag);\r\n    }\r\n    static getDiagnosticMessage_FlagUnknown(flag) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"flagUnknown\"], flag);\r\n    }\r\n    static getDiagnosticMessage_FlagUnknownUnit(unit, duration) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"flagUnknownUnit\"], unit, duration);\r\n    }\r\n    static getDiagnosticMessage_InvalidAs() {\r\n        return Validator.dockerProblems[\"invalidAs\"];\r\n    }\r\n    static getDiagnosticMessage_InvalidPort(port) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"invalidPort\"], port);\r\n    }\r\n    static getDiagnosticMessage_InvalidProto(protocol) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"invalidProtocol\"], protocol);\r\n    }\r\n    static getDiagnosticMessage_InvalidReferenceFormat() {\r\n        return Validator.dockerProblems[\"invalidReferenceFormat\"];\r\n    }\r\n    static getDiagnosticMessage_InvalidSignal(signal) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"invalidStopSignal\"], signal);\r\n    }\r\n    static getDiagnosticMessage_InvalidSyntax(syntax) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"invalidSyntax\"], syntax);\r\n    }\r\n    static getDiagnosticMessage_InstructionExtraArgument() {\r\n        return Validator.dockerProblems[\"instructionExtraArgument\"];\r\n    }\r\n    static getDiagnosticMessage_InstructionMissingArgument() {\r\n        return Validator.dockerProblems[\"instructionMissingArgument\"];\r\n    }\r\n    static getDiagnosticMessage_ADDDestinationNotDirectory() {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"invalidDestination\"], \"ADD\");\r\n    }\r\n    static getDiagnosticMessage_ADDRequiresAtLeastTwoArguments() {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"instructionRequiresAtLeastTwoArguments\"], \"ADD\");\r\n    }\r\n    static getDiagnosticMessage_ARGRequiresOneArgument() {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"instructionRequiresOneArgument\"], \"ARG\");\r\n    }\r\n    static getDiagnosticMessage_COPYDestinationNotDirectory() {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"invalidDestination\"], \"COPY\");\r\n    }\r\n    static getDiagnosticMessage_COPYRequiresAtLeastTwoArguments() {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"instructionRequiresAtLeastTwoArguments\"], \"COPY\");\r\n    }\r\n    static getDiagnosticMessage_HEALTHCHECKRequiresAtLeastOneArgument() {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"instructionRequiresAtLeastOneArgument\"], \"HEALTHCHECK\");\r\n    }\r\n    static getDiagnosticMessage_ENVRequiresTwoArguments() {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"instructionRequiresTwoArguments\"], \"ENV\");\r\n    }\r\n    static getDiagnosticMessage_InstructionRequiresOneOrThreeArguments() {\r\n        return Validator.dockerProblems[\"fromRequiresOneOrThreeArguments\"];\r\n    }\r\n    static getDiagnosticMessage_HealthcheckNoneUnnecessaryArgument() {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"instructionUnnecessaryArgument\"], \"HEALTHCHECK NONE\");\r\n    }\r\n    static getDiagnosticMessage_InstructionMultiple(instruction) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"instructionMultiple\"], instruction);\r\n    }\r\n    static getDiagnosticMessage_InstructionUnknown(instruction) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"instructionUnknown\"], instruction);\r\n    }\r\n    static getDiagnosticMessage_SyntaxMissingEquals(argument) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"syntaxMissingEquals\"], argument);\r\n    }\r\n    static getDiagnosticMessage_SyntaxMissingNames(instruction) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"syntaxMissingNames\"], instruction);\r\n    }\r\n    static getDiagnosticMessage_SyntaxMissingSingleQuote(key) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"syntaxMissingSingleQuote\"], key);\r\n    }\r\n    static getDiagnosticMessage_SyntaxMissingDoubleQuote(key) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"syntaxMissingDoubleQuote\"], key);\r\n    }\r\n    static getDiagnosticMessage_InstructionCasing() {\r\n        return Validator.dockerProblems[\"instructionCasing\"];\r\n    }\r\n    static getDiagnosticMessage_OnbuildChainingDisallowed() {\r\n        return Validator.dockerProblems[\"onbuildChainingDisallowed\"];\r\n    }\r\n    static getDiagnosticMessage_OnbuildTriggerDisallowed(trigger) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"onbuildTriggerDisallowed\"], trigger);\r\n    }\r\n    static getDiagnosticMessage_ShellJsonForm() {\r\n        return Validator.dockerProblems[\"shellJsonForm\"];\r\n    }\r\n    static getDiagnosticMessage_ShellRequiresOne() {\r\n        return Validator.dockerProblems[\"shellRequiresOne\"];\r\n    }\r\n    static getDiagnosticMessage_DeprecatedMaintainer() {\r\n        return Validator.dockerProblems[\"deprecatedMaintainer\"];\r\n    }\r\n    static getDiagnosticMessage_HealthcheckCmdArgumentMissing() {\r\n        return Validator.dockerProblems[\"healthcheckCmdArgumentMissing\"];\r\n    }\r\n    static getDiagnosticMessage_HealthcheckTypeUnknown(type) {\r\n        return Validator.formatMessage(Validator.dockerProblems[\"healthcheckTypeUnknown\"], type);\r\n    }\r\n    static createInvalidEscapeDirective(start, end, value) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_DirectiveEscapeInvalid(value), main_1.ValidationCode.INVALID_ESCAPE_DIRECTIVE);\r\n    }\r\n    static createDuplicateBuildStageName(range, name) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_DuplicateBuildStageName(name), main_1.ValidationCode.DUPLICATE_BUILD_STAGE_NAME);\r\n    }\r\n    static createInvalidBuildStageName(range, name) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_InvalidBuildStageName(name), main_1.ValidationCode.INVALID_BUILD_STAGE_NAME);\r\n    }\r\n    static createFlagAtLeastOne(start, end, flagName, flagValue) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_FlagAtLeastOne(flagName, flagValue), main_1.ValidationCode.FLAG_AT_LEAST_ONE);\r\n    }\r\n    static createFlagDuplicate(start, end, flag) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_FlagDuplicate(flag), main_1.ValidationCode.FLAG_DUPLICATE);\r\n    }\r\n    static createFlagInvalidDuration(start, end, flag) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_FlagInvalidDuration(flag), main_1.ValidationCode.FLAG_INVALID_DURATION);\r\n    }\r\n    static createFlagLessThan1ms(start, end, flag) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_FlagLessThan1ms(flag), main_1.ValidationCode.FLAG_LESS_THAN_1MS);\r\n    }\r\n    static createFlagMissingDuration(start, end, duration) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_FlagMissingDuration(duration), main_1.ValidationCode.FLAG_MISSING_DURATION);\r\n    }\r\n    static createFlagInvalidFrom(start, end, flag) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_FlagInvalidFromValue(flag), main_1.ValidationCode.FLAG_INVALID_FROM_VALUE);\r\n    }\r\n    static createFlagMissingValue(start, end, flag) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_FlagMissingValue(flag), main_1.ValidationCode.FLAG_MISSING_VALUE);\r\n    }\r\n    static createUnknownAddFlag(start, end, flag) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_FlagUnknown(flag), main_1.ValidationCode.UNKNOWN_ADD_FLAG);\r\n    }\r\n    static createUnknownCopyFlag(start, end, flag) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_FlagUnknown(flag), main_1.ValidationCode.UNKNOWN_COPY_FLAG);\r\n    }\r\n    static createUnknownHealthcheckFlag(start, end, flag) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_FlagUnknown(flag), main_1.ValidationCode.UNKNOWN_HEALTHCHECK_FLAG);\r\n    }\r\n    static createFlagUnknownUnit(range, unit, duration) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_FlagUnknownUnit(unit, duration), main_1.ValidationCode.FLAG_UNKNOWN_UNIT);\r\n    }\r\n    static createInvalidAs(start, end) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_InvalidAs(), main_1.ValidationCode.INVALID_AS);\r\n    }\r\n    static createInvalidPort(range, port) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_InvalidPort(port), main_1.ValidationCode.INVALID_PORT);\r\n    }\r\n    static createInvalidProto(start, end, protocol) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_InvalidProto(protocol), main_1.ValidationCode.INVALID_PROTO);\r\n    }\r\n    static createInvalidReferenceFormat(range) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_InvalidReferenceFormat(), main_1.ValidationCode.INVALID_REFERENCE_FORMAT);\r\n    }\r\n    static createInvalidStopSignal(start, end, signal) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_InvalidSignal(signal), main_1.ValidationCode.INVALID_SIGNAL);\r\n    }\r\n    static createInvalidSyntax(start, end, syntax) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_InvalidSyntax(syntax), main_1.ValidationCode.INVALID_SYNTAX);\r\n    }\r\n    static createMissingArgument(start, end) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_InstructionMissingArgument(), main_1.ValidationCode.ARGUMENT_MISSING);\r\n    }\r\n    static createExtraArgument(start, end) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_InstructionExtraArgument(), main_1.ValidationCode.ARGUMENT_EXTRA);\r\n    }\r\n    static createHealthcheckNoneUnnecessaryArgument(start, end) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_HealthcheckNoneUnnecessaryArgument(), main_1.ValidationCode.ARGUMENT_UNNECESSARY);\r\n    }\r\n    static createARGRequiresOneArgument(start, end) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_ARGRequiresOneArgument(), main_1.ValidationCode.ARGUMENT_REQUIRES_ONE);\r\n    }\r\n    static createADDDestinationNotDirectory(range) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_ADDDestinationNotDirectory(), main_1.ValidationCode.INVALID_DESTINATION);\r\n    }\r\n    static createADDRequiresAtLeastTwoArguments(range) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_ADDRequiresAtLeastTwoArguments(), main_1.ValidationCode.ARGUMENT_REQUIRES_AT_LEAST_TWO);\r\n    }\r\n    static createCOPYDestinationNotDirectory(range) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_COPYDestinationNotDirectory(), main_1.ValidationCode.INVALID_DESTINATION);\r\n    }\r\n    static createCOPYRequiresAtLeastTwoArguments(range) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_COPYRequiresAtLeastTwoArguments(), main_1.ValidationCode.ARGUMENT_REQUIRES_AT_LEAST_TWO);\r\n    }\r\n    static createENVRequiresTwoArguments(start, end) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_ENVRequiresTwoArguments(), main_1.ValidationCode.ARGUMENT_REQUIRES_TWO);\r\n    }\r\n    static createHEALTHCHECKRequiresAtLeastOneArgument(range) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_HEALTHCHECKRequiresAtLeastOneArgument(), main_1.ValidationCode.ARGUMENT_REQUIRES_AT_LEAST_ONE);\r\n    }\r\n    static createHealthcheckCmdArgumentMissing(start, end) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_HealthcheckCmdArgumentMissing(), main_1.ValidationCode.HEALTHCHECK_CMD_ARGUMENT_MISSING);\r\n    }\r\n    static createHealthcheckTypeUnknown(range, type) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_HealthcheckTypeUnknown(type), main_1.ValidationCode.UNKNOWN_TYPE);\r\n    }\r\n    static createOnbuildChainingDisallowed(range) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_OnbuildChainingDisallowed(), main_1.ValidationCode.ONBUILD_CHAINING_DISALLOWED);\r\n    }\r\n    static createOnbuildTriggerDisallowed(range, trigger) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_OnbuildTriggerDisallowed(trigger), main_1.ValidationCode.ONBUILD_TRIGGER_DISALLOWED);\r\n    }\r\n    static createShellJsonForm(range) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_ShellJsonForm(), main_1.ValidationCode.SHELL_JSON_FORM);\r\n    }\r\n    static createShellRequiresOne(range) {\r\n        return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_ShellRequiresOne(), main_1.ValidationCode.SHELL_REQUIRES_ONE);\r\n    }\r\n    static createRequiresOneOrThreeArguments(start, end) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_InstructionRequiresOneOrThreeArguments(), main_1.ValidationCode.ARGUMENT_REQUIRES_ONE_OR_THREE);\r\n    }\r\n    static createNoSourceImage(start, end) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_NoSourceImage(), main_1.ValidationCode.NO_SOURCE_IMAGE);\r\n    }\r\n    static createSyntaxMissingEquals(start, end, argument) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_SyntaxMissingEquals(argument), main_1.ValidationCode.SYNTAX_MISSING_EQUALS);\r\n    }\r\n    static createSyntaxMissingSingleQuote(start, end, argument) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_SyntaxMissingSingleQuote(argument), main_1.ValidationCode.SYNTAX_MISSING_SINGLE_QUOTE);\r\n    }\r\n    static createSyntaxMissingDoubleQuote(start, end, argument) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_SyntaxMissingDoubleQuote(argument), main_1.ValidationCode.SYNTAX_MISSING_DOUBLE_QUOTE);\r\n    }\r\n    static createSyntaxMissingNames(start, end, instruction) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_SyntaxMissingNames(instruction), main_1.ValidationCode.SYNTAX_MISSING_NAMES);\r\n    }\r\n    static createUnknownInstruction(start, end, instruction) {\r\n        return Validator.createError(start, end, Validator.getDiagnosticMessage_InstructionUnknown(instruction), main_1.ValidationCode.UNKNOWN_INSTRUCTION);\r\n    }\r\n    static createError(start, end, description, code) {\r\n        return Validator.createDiagnostic(vscode_languageserver_types_1.DiagnosticSeverity.Error, start, end, description, code);\r\n    }\r\n    static createEmptyContinuationLine(start, end, severity) {\r\n        if (severity === main_1.ValidationSeverity.ERROR) {\r\n            return Validator.createError(start, end, Validator.getDiagnosticMessage_EmptyContinuationLine(), main_1.ValidationCode.EMPTY_CONTINUATION_LINE);\r\n        }\r\n        else if (severity === main_1.ValidationSeverity.WARNING) {\r\n            return Validator.createWarning(start, end, Validator.getDiagnosticMessage_EmptyContinuationLine(), main_1.ValidationCode.EMPTY_CONTINUATION_LINE);\r\n        }\r\n        return null;\r\n    }\r\n    createMultipleInstructions(range, severity, instruction) {\r\n        if (severity === main_1.ValidationSeverity.ERROR) {\r\n            return Validator.createError(range.start, range.end, Validator.getDiagnosticMessage_InstructionMultiple(instruction), main_1.ValidationCode.MULTIPLE_INSTRUCTIONS);\r\n        }\r\n        else if (severity === main_1.ValidationSeverity.WARNING) {\r\n            return Validator.createWarning(range.start, range.end, Validator.getDiagnosticMessage_InstructionMultiple(instruction), main_1.ValidationCode.MULTIPLE_INSTRUCTIONS);\r\n        }\r\n        return null;\r\n    }\r\n    createLowercaseDirective(start, end) {\r\n        if (this.settings.directiveCasing === main_1.ValidationSeverity.ERROR) {\r\n            return Validator.createError(start, end, Validator.getDiagnosticMessage_DirectiveCasing(), main_1.ValidationCode.CASING_DIRECTIVE);\r\n        }\r\n        else if (this.settings.directiveCasing === main_1.ValidationSeverity.WARNING) {\r\n            return Validator.createWarning(start, end, Validator.getDiagnosticMessage_DirectiveCasing(), main_1.ValidationCode.CASING_DIRECTIVE);\r\n        }\r\n        return null;\r\n    }\r\n    createUppercaseInstruction(start, end) {\r\n        if (this.settings.instructionCasing === main_1.ValidationSeverity.ERROR) {\r\n            return Validator.createError(start, end, Validator.getDiagnosticMessage_InstructionCasing(), main_1.ValidationCode.CASING_INSTRUCTION);\r\n        }\r\n        else if (this.settings.instructionCasing === main_1.ValidationSeverity.WARNING) {\r\n            return Validator.createWarning(start, end, Validator.getDiagnosticMessage_InstructionCasing(), main_1.ValidationCode.CASING_INSTRUCTION);\r\n        }\r\n        return null;\r\n    }\r\n    createMaintainerDeprecated(start, end) {\r\n        if (this.settings.deprecatedMaintainer === main_1.ValidationSeverity.ERROR) {\r\n            return Validator.createError(start, end, Validator.getDiagnosticMessage_DeprecatedMaintainer(), main_1.ValidationCode.DEPRECATED_MAINTAINER);\r\n        }\r\n        else if (this.settings.deprecatedMaintainer === main_1.ValidationSeverity.WARNING) {\r\n            return Validator.createWarning(start, end, Validator.getDiagnosticMessage_DeprecatedMaintainer(), main_1.ValidationCode.DEPRECATED_MAINTAINER);\r\n        }\r\n        return null;\r\n    }\r\n    static createWarning(start, end, description, code) {\r\n        return Validator.createDiagnostic(vscode_languageserver_types_1.DiagnosticSeverity.Warning, start, end, description, code);\r\n    }\r\n    static createDiagnostic(severity, start, end, description, code) {\r\n        return {\r\n            range: {\r\n                start: start,\r\n                end: end\r\n            },\r\n            message: description,\r\n            severity: severity,\r\n            code: code,\r\n            source: \"dockerfile-utils\"\r\n        };\r\n    }\r\n}\r\nValidator.dockerProblems = {\r\n    \"directiveCasing\": \"Parser directives should be written in lowercase letters\",\r\n    \"directiveEscapeInvalid\": \"invalid ESCAPE '${0}'. Must be ` or \\\\\",\r\n    \"noSourceImage\": \"No source image provided with `FROM`\",\r\n    \"emptyContinuationLine\": \"Empty continuation line\",\r\n    \"fromRequiresOneOrThreeArguments\": \"FROM requires either one or three arguments\",\r\n    \"invalidAs\": \"Second argument should be AS\",\r\n    \"invalidPort\": \"Invalid containerPort: ${0}\",\r\n    \"invalidProtocol\": \"Invalid proto: ${0}\",\r\n    \"invalidReferenceFormat\": \"invalid reference format\",\r\n    \"invalidStopSignal\": \"Invalid signal: ${0}\",\r\n    \"invalidSyntax\": \"parsing \\\"${0}\\\": invalid syntax\",\r\n    \"invalidDestination\": \"When using ${0} with more than one source file, the destination must be a directory and end with a / or a \\\\\",\r\n    \"syntaxMissingEquals\": \"Syntax error - can't find = in \\\"${0}\\\". Must be of the form: name=value\",\r\n    \"syntaxMissingNames\": \"${0} names can not be blank\",\r\n    \"syntaxMissingSingleQuote\": \"failed to process \\\"${0}\\\": unexpected end of statement while looking for matching single-quote\",\r\n    \"syntaxMissingDoubleQuote\": \"failed to process \\\"${0}\\\": unexpected end of statement while looking for matching double-quote\",\r\n    \"duplicateBuildStageName\": \"duplicate name ${0}\",\r\n    \"invalidBuildStageName\": \"invalid name for build stage: \\\"${0}\\\", name can't start with a number or contain symbols\",\r\n    \"flagAtLeastOne\": \"${0} must be at least 1 (not ${1})\",\r\n    \"flagDuplicate\": \"Duplicate flag specified: ${0}\",\r\n    \"flagInvalidDuration\": \"time: invalid duration ${0}\",\r\n    \"flagInvalidFrom\": \"invalid from flag value ${0}: invalid reference format\",\r\n    \"flagLessThan1ms\": \"Interval \\\"${0}\\\" cannot be less than 1ms\",\r\n    \"flagMissingDuration\": \"time: missing unit in duration ${0}\",\r\n    \"flagMissingValue\": \"Missing a value on flag: ${0}\",\r\n    \"flagUnknown\": \"Unknown flag: ${0}\",\r\n    \"flagUnknownUnit\": \"time: unknown unit ${0} in duration ${1}\",\r\n    \"instructionExtraArgument\": \"Instruction has an extra argument\",\r\n    \"instructionMissingArgument\": \"Instruction has no arguments\",\r\n    \"instructionMultiple\": \"There can only be one ${0} instruction in a Dockerfile\",\r\n    \"instructionRequiresOneArgument\": \"${0} requires exactly one argument\",\r\n    \"instructionRequiresAtLeastOneArgument\": \"${0} requires at least one argument\",\r\n    \"instructionRequiresAtLeastTwoArguments\": \"${0} requires at least two arguments\",\r\n    \"instructionRequiresTwoArguments\": \"${0} must have two arguments\",\r\n    \"instructionUnnecessaryArgument\": \"${0} takes no arguments\",\r\n    \"instructionUnknown\": \"Unknown instruction: ${0}\",\r\n    \"instructionCasing\": \"Instructions should be written in uppercase letters\",\r\n    \"onbuildChainingDisallowed\": \"Chaining ONBUILD via `ONBUILD ONBUILD` isn't allowed\",\r\n    \"onbuildTriggerDisallowed\": \"${0} isn't allowed as an ONBUILD trigger\",\r\n    \"shellJsonForm\": \"SHELL requires the arguments to be in JSON form\",\r\n    \"shellRequiresOne\": \"SHELL requires at least one argument\",\r\n    \"deprecatedMaintainer\": \"MAINTAINER has been deprecated\",\r\n    \"healthcheckCmdArgumentMissing\": \"Missing command after HEALTHCHECK CMD\",\r\n    \"healthcheckTypeUnknown\": \"Unknown type\\\"${0}\\\" in HEALTHCHECK (try CMD)\"\r\n};\r\nexports.Validator = Validator;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/lib/dockerValidator.js\n// module id = 109\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst imageTemplate_1 = require(\"./imageTemplate\");\r\nconst util_1 = require(\"./util\");\r\nconst main_1 = require(\"./main\");\r\nclass Dockerfile extends imageTemplate_1.ImageTemplate {\r\n    constructor(document) {\r\n        super();\r\n        this.initialInstructions = new imageTemplate_1.ImageTemplate();\r\n        this.buildStages = [];\r\n        this.directive = null;\r\n        /**\r\n         * Whether a FROM instruction has been added to this Dockerfile or not.\r\n         */\r\n        this.foundFrom = false;\r\n        this.document = document;\r\n    }\r\n    getEscapeCharacter() {\r\n        if (this.directive !== null && this.directive.getDirective() === main_1.Directive.escape) {\r\n            let value = this.directive.getValue();\r\n            if (value === '\\\\' || value === '`') {\r\n                return value;\r\n            }\r\n        }\r\n        return '\\\\';\r\n    }\r\n    getInitialARGs() {\r\n        return this.initialInstructions.getARGs();\r\n    }\r\n    getContainingImage(position) {\r\n        let range = vscode_languageserver_types_1.Range.create(vscode_languageserver_types_1.Position.create(0, 0), this.document.positionAt(this.document.getText().length));\r\n        if (!util_1.Util.isInsideRange(position, range)) {\r\n            // not inside the document, invalid position\r\n            return null;\r\n        }\r\n        for (let buildStage of this.buildStages) {\r\n            if (buildStage.contains(position)) {\r\n                return buildStage;\r\n            }\r\n        }\r\n        let instructions = this.initialInstructions.getInstructions();\r\n        if (instructions.length > 0 &&\r\n            (this.initialInstructions.contains(position) || instructions[instructions.length - 1].getRange().end.line >= position.line)) {\r\n            return this.initialInstructions;\r\n        }\r\n        if (this.buildStages.length > 0) {\r\n            if (this.buildStages[0].getInstructions()[0].getRange().start.line > position.line) {\r\n                let instructions = this.initialInstructions.getInstructions();\r\n                if (instructions.length > 0) {\r\n                    return this.buildStages[0];\r\n                }\r\n            }\r\n            let instructions = this.buildStages[this.buildStages.length - 1].getInstructions();\r\n            if (instructions[instructions.length - 1].getRange().end.line < position.line) {\r\n                return this;\r\n            }\r\n            for (let i = 0; i < this.buildStages.length - 1; i++) {\r\n                let stageInstructions = this.buildStages[i].getInstructions();\r\n                let stageInstructions2 = this.buildStages[i + 1].getInstructions();\r\n                let between = vscode_languageserver_types_1.Range.create(stageInstructions[stageInstructions.length - 1].getRange().end, stageInstructions2[0].getRange().start);\r\n                if (util_1.Util.isInsideRange(position, between)) {\r\n                    return this.buildStages[i + 1];\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    addInstruction(instruction) {\r\n        if (instruction.getKeyword() === main_1.Keyword.FROM) {\r\n            this.currentBuildStage = new imageTemplate_1.ImageTemplate();\r\n            this.buildStages.push(this.currentBuildStage);\r\n            this.foundFrom = true;\r\n        }\r\n        else if (!this.foundFrom) {\r\n            this.initialInstructions.addInstruction(instruction);\r\n        }\r\n        if (this.foundFrom) {\r\n            this.currentBuildStage.addInstruction(instruction);\r\n        }\r\n        super.addInstruction(instruction);\r\n    }\r\n    setDirective(directive) {\r\n        this.directive = directive;\r\n    }\r\n    getDirective() {\r\n        return this.directive;\r\n    }\r\n    resolveVariable(variable, line) {\r\n        let image = this.getContainingImage(vscode_languageserver_types_1.Position.create(line, 0));\r\n        return image.resolveVariable(variable, line);\r\n    }\r\n}\r\nexports.Dockerfile = Dockerfile;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/dockerfile.js\n// module id = 110\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst arg_1 = require(\"./instructions/arg\");\r\nconst cmd_1 = require(\"./instructions/cmd\");\r\nconst copy_1 = require(\"./instructions/copy\");\r\nconst env_1 = require(\"./instructions/env\");\r\nconst entrypoint_1 = require(\"./instructions/entrypoint\");\r\nconst from_1 = require(\"./instructions/from\");\r\nconst healthcheck_1 = require(\"./instructions/healthcheck\");\r\nconst onbuild_1 = require(\"./instructions/onbuild\");\r\nconst util_1 = require(\"./util\");\r\nclass ImageTemplate {\r\n    constructor() {\r\n        this.comments = [];\r\n        this.instructions = [];\r\n    }\r\n    addComment(comment) {\r\n        this.comments.push(comment);\r\n    }\r\n    getComments() {\r\n        return this.comments;\r\n    }\r\n    addInstruction(instruction) {\r\n        this.instructions.push(instruction);\r\n    }\r\n    getInstructions() {\r\n        return this.instructions;\r\n    }\r\n    /**\r\n     * Gets all the ARG instructions that are defined in this image.\r\n     */\r\n    getARGs() {\r\n        let args = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof arg_1.Arg) {\r\n                args.push(instruction);\r\n            }\r\n        }\r\n        return args;\r\n    }\r\n    /**\r\n     * Gets all the CMD instructions that are defined in this image.\r\n     */\r\n    getCMDs() {\r\n        let cmds = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof cmd_1.Cmd) {\r\n                cmds.push(instruction);\r\n            }\r\n        }\r\n        return cmds;\r\n    }\r\n    /**\r\n     * Gets all the COPY instructions that are defined in this image.\r\n     */\r\n    getCOPYs() {\r\n        let copies = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof copy_1.Copy) {\r\n                copies.push(instruction);\r\n            }\r\n        }\r\n        return copies;\r\n    }\r\n    /**\r\n     * Gets all the ENTRYPOINT instructions that are defined in this image.\r\n     */\r\n    getENTRYPOINTs() {\r\n        let froms = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof entrypoint_1.Entrypoint) {\r\n                froms.push(instruction);\r\n            }\r\n        }\r\n        return froms;\r\n    }\r\n    /**\r\n     * Gets all the ENV instructions that are defined in this image.\r\n     */\r\n    getENVs() {\r\n        let args = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof env_1.Env) {\r\n                args.push(instruction);\r\n            }\r\n        }\r\n        return args;\r\n    }\r\n    /**\r\n     * Gets all the FROM instructions that are defined in this image.\r\n     */\r\n    getFROMs() {\r\n        let froms = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof from_1.From) {\r\n                froms.push(instruction);\r\n            }\r\n        }\r\n        return froms;\r\n    }\r\n    /**\r\n     * Gets all the HEALTHCHECK instructions that are defined in this image.\r\n     */\r\n    getHEALTHCHECKs() {\r\n        let froms = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof healthcheck_1.Healthcheck) {\r\n                froms.push(instruction);\r\n            }\r\n        }\r\n        return froms;\r\n    }\r\n    getOnbuildTriggers() {\r\n        let triggers = [];\r\n        for (let instruction of this.instructions) {\r\n            if (instruction instanceof onbuild_1.Onbuild) {\r\n                let trigger = instruction.getTriggerInstruction();\r\n                if (trigger) {\r\n                    triggers.push(trigger);\r\n                }\r\n            }\r\n        }\r\n        return triggers;\r\n    }\r\n    getAvailableVariables(currentLine) {\r\n        const variables = [];\r\n        for (const arg of this.getARGs()) {\r\n            if (arg.isBefore(currentLine)) {\r\n                const property = arg.getProperty();\r\n                if (property) {\r\n                    const variable = property.getName();\r\n                    if (variables.indexOf(variable) === -1) {\r\n                        variables.push(variable);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (const env of this.getENVs()) {\r\n            if (env.isBefore(currentLine)) {\r\n                for (const property of env.getProperties()) {\r\n                    const variable = property.getName();\r\n                    if (variables.indexOf(variable) === -1) {\r\n                        variables.push(variable);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n    /**\r\n     * Resolves a variable with the given name at the specified line\r\n     * to its value. If null is returned, then the variable has been\r\n     * defined but no value was given. If undefined is returned, then\r\n     * a variable with the given name has not been defined yet as of\r\n     * the given line.\r\n     *\r\n     * @param variable the name of the variable to resolve\r\n     * @param line the line number that the variable is on, zero-based\r\n     * @return the value of the variable as defined by an ARG or ENV\r\n     *         instruction, or null if no value has been specified, or\r\n     *         undefined if a variable with the given name has not\r\n     *         been defined\r\n     */\r\n    resolveVariable(variable, line) {\r\n        let envs = this.getENVs();\r\n        for (let i = envs.length - 1; i >= 0; i--) {\r\n            if (envs[i].isBefore(line)) {\r\n                for (let property of envs[i].getProperties()) {\r\n                    if (property.getName() === variable) {\r\n                        return property.getValue();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let args = this.getARGs();\r\n        for (let i = args.length - 1; i >= 0; i--) {\r\n            if (args[i].isBefore(line)) {\r\n                let property = args[i].getProperty();\r\n                if (property && property.getName() === variable) {\r\n                    return property.getValue();\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    contains(position) {\r\n        const first = this.instructions[0].getRange();\r\n        const last = this.instructions[this.instructions.length - 1].getRange();\r\n        return util_1.Util.isInsideRange(position, vscode_languageserver_types_1.Range.create(first.start, last.end));\r\n    }\r\n}\r\nexports.ImageTemplate = ImageTemplate;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-utils/~/dockerfile-ast/lib/imageTemplate.js\n// module id = 111\n// module chunks = 0","module.exports = function (glob, opts) {\n  if (typeof glob !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  var str = String(glob);\n\n  // The regexp we are building, as a string.\n  var reStr = \"\";\n\n  // Whether we are matching so called \"extended\" globs (like bash) and should\n  // support single character matching, matching ranges of characters, group\n  // matching, etc.\n  var extended = opts ? !!opts.extended : false;\n\n  // When globstar is _false_ (default), '/foo/*' is translated a regexp like\n  // '^\\/foo\\/.*$' which will match any string beginning with '/foo/'\n  // When globstar is _true_, '/foo/*' is translated to regexp like\n  // '^\\/foo\\/[^/]*$' which will match any string beginning with '/foo/' BUT\n  // which does not have a '/' to the right of it.\n  // E.g. with '/foo/*' these will match: '/foo/bar', '/foo/bar.txt' but\n  // these will not '/foo/bar/baz', '/foo/bar/baz.txt'\n  // Lastely, when globstar is _true_, '/foo/**' is equivelant to '/foo/*' when\n  // globstar is _false_\n  var globstar = opts ? !!opts.globstar : false;\n\n  // If we are doing extended matching, this boolean is true when we are inside\n  // a group (eg {*.html,*.js}), and false otherwise.\n  var inGroup = false;\n\n  // RegExp flags (eg \"i\" ) to pass in to RegExp constructor.\n  var flags = opts && typeof( opts.flags ) === \"string\" ? opts.flags : \"\";\n\n  var c;\n  for (var i = 0, len = str.length; i < len; i++) {\n    c = str[i];\n\n    switch (c) {\n    case \"\\\\\":\n    case \"/\":\n    case \"$\":\n    case \"^\":\n    case \"+\":\n    case \".\":\n    case \"(\":\n    case \")\":\n    case \"=\":\n    case \"!\":\n    case \"|\":\n      reStr += \"\\\\\" + c;\n      break;\n\n    case \"?\":\n      if (extended) {\n        reStr += \".\";\n\t    break;\n      }\n\n    case \"[\":\n    case \"]\":\n      if (extended) {\n        reStr += c;\n\t    break;\n      }\n\n    case \"{\":\n      if (extended) {\n        inGroup = true;\n\t    reStr += \"(\";\n\t    break;\n      }\n\n    case \"}\":\n      if (extended) {\n        inGroup = false;\n\t    reStr += \")\";\n\t    break;\n      }\n\n    case \",\":\n      if (inGroup) {\n        reStr += \"|\";\n\t    break;\n      }\n      reStr += \"\\\\\" + c;\n      break;\n\n    case \"*\":\n      // Move over all consecutive \"*\"'s.\n      // Also store the previous and next characters\n      var prevChar = str[i - 1];\n      var starCount = 1;\n      while(str[i + 1] === \"*\") {\n        starCount++;\n        i++;\n      }\n      var nextChar = str[i + 1];\n\n      if (!globstar) {\n        // globstar is disabled, so treat any number of \"*\" as one\n        reStr += \".*\";\n      } else {\n        // globstar is enabled, so determine if this is a globstar segment\n        var isGlobstar = starCount > 1                      // multiple \"*\"'s\n          && (prevChar === \"/\" || prevChar === undefined)   // from the start of the segment\n          && (nextChar === \"/\" || nextChar === undefined)   // to the end of the segment\n\n        if (isGlobstar) {\n          // it's a globstar, so match zero or more path segments\n          reStr += \"(?:[^/]*(?:\\/|$))*\";\n          i++; // move over the \"/\"\n        } else {\n          // it's not a globstar, so only match one path segment\n          reStr += \"[^/]*\";\n        }\n      }\n      break;\n\n    default:\n      reStr += c;\n    }\n  }\n\n  // When regexp 'g' flag is specified don't\n  // constrain the regular expression with ^ & $\n  if (!flags || !~flags.indexOf('g')) {\n    reStr = \"^\" + reStr + \"$\";\n  }\n\n  return new RegExp(reStr, flags);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/glob-to-regexp/index.js\n// module id = 112\n// module chunks = 0","var http = require('http')\nvar url = require('url')\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/https-browserify/index.js\n// module id = 113\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 114\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar disposable_1 = require(\"./disposable\");\nvar MonacoDiagnosticCollection = /** @class */ (function () {\n    function MonacoDiagnosticCollection(name, p2m) {\n        this.name = name;\n        this.p2m = p2m;\n        this.diagnostics = new Map();\n        this.toDispose = new disposable_1.DisposableCollection();\n    }\n    MonacoDiagnosticCollection.prototype.dispose = function () {\n        this.toDispose.dispose();\n    };\n    MonacoDiagnosticCollection.prototype.get = function (uri) {\n        var diagnostics = this.diagnostics.get(uri);\n        return !!diagnostics ? diagnostics.diagnostics : [];\n    };\n    MonacoDiagnosticCollection.prototype.set = function (uri, diagnostics) {\n        var _this = this;\n        var existing = this.diagnostics.get(uri);\n        if (existing) {\n            existing.diagnostics = diagnostics;\n        }\n        else {\n            var modelDiagnostics_1 = new MonacoModelDiagnostics(uri, diagnostics, this.name, this.p2m);\n            this.diagnostics.set(uri, modelDiagnostics_1);\n            this.toDispose.push(disposable_1.Disposable.create(function () {\n                _this.diagnostics.delete(uri);\n                modelDiagnostics_1.dispose();\n            }));\n        }\n    };\n    return MonacoDiagnosticCollection;\n}());\nexports.MonacoDiagnosticCollection = MonacoDiagnosticCollection;\nvar MonacoModelDiagnostics = /** @class */ (function () {\n    function MonacoModelDiagnostics(uri, diagnostics, owner, p2m) {\n        var _this = this;\n        this.owner = owner;\n        this.p2m = p2m;\n        this.uri = monaco.Uri.parse(uri);\n        this.diagnostics = diagnostics;\n        monaco.editor.onDidCreateModel(function (model) { return _this.doUpdateModelMarkers(model); });\n    }\n    Object.defineProperty(MonacoModelDiagnostics.prototype, \"diagnostics\", {\n        get: function () {\n            return this._diagnostics;\n        },\n        set: function (diagnostics) {\n            var _this = this;\n            this._diagnostics = diagnostics;\n            this._markers = diagnostics.map(function (diagnostic) { return _this.p2m.asMarker(diagnostic); });\n            this.updateModelMarkers();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MonacoModelDiagnostics.prototype, \"markers\", {\n        get: function () {\n            return this._markers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MonacoModelDiagnostics.prototype.dispose = function () {\n        this._markers = [];\n        this.updateModelMarkers();\n    };\n    MonacoModelDiagnostics.prototype.updateModelMarkers = function () {\n        var model = monaco.editor.getModel(this.uri);\n        this.doUpdateModelMarkers(model);\n    };\n    MonacoModelDiagnostics.prototype.doUpdateModelMarkers = function (model) {\n        if (model && this.uri.toString() === model.uri.toString()) {\n            monaco.editor.setModelMarkers(model, this.owner, this._markers);\n        }\n    };\n    return MonacoModelDiagnostics;\n}());\nexports.MonacoModelDiagnostics = MonacoModelDiagnostics;\n//# sourceMappingURL=diagnostic-collection.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/monaco-languageclient/lib/diagnostic-collection.js\n// module id = 115\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2017 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n__export(require(\"./disposable\"));\n__export(require(\"./commands\"));\n__export(require(\"./console-window\"));\n__export(require(\"./languages\"));\n__export(require(\"./workspace\"));\n__export(require(\"./converter\"));\n__export(require(\"./services\"));\n__export(require(\"vscode-base-languageclient/lib/base\"));\n__export(require(\"vscode-base-languageclient/lib/connection\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/monaco-languageclient/lib/index.js\n// module id = 116\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar converter_1 = require(\"./converter\");\nvar commands_1 = require(\"./commands\");\nvar languages_1 = require(\"./languages\");\nvar workspace_1 = require(\"./workspace\");\nvar console_window_1 = require(\"./console-window\");\nfunction createMonacoServices(editor, options) {\n    if (options === void 0) { options = {}; }\n    var m2p = new converter_1.MonacoToProtocolConverter();\n    var p2m = new converter_1.ProtocolToMonacoConverter();\n    return {\n        commands: new commands_1.MonacoCommands(editor),\n        languages: new languages_1.MonacoLanguages(p2m, m2p),\n        workspace: new workspace_1.MonacoWorkspace(p2m, m2p, options.rootUri),\n        window: new console_window_1.ConsoleWindow()\n    };\n}\nexports.createMonacoServices = createMonacoServices;\n//# sourceMappingURL=services.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/monaco-languageclient/lib/services.js\n// module id = 117\n// module chunks = 0","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/os-browserify/browser.js\n// module id = 118\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/path-browserify/index.js\n// module id = 119\n// module chunks = 0","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/punycode/punycode.js\n// module id = 120\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring-es3/decode.js\n// module id = 121\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring-es3/encode.js\n// module id = 122\n// module chunks = 0","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/querystring-es3/index.js\n// module id = 123\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/_stream_passthrough.js\n// module id = 124\n// module chunks = 0","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/readable-stream/lib/internal/streams/BufferList.js\n// module id = 125\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 126\n// module chunks = 0","var ClientRequest = require('./lib/request')\nvar IncomingMessage = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/index.js\n// module id = 127\n// module chunks = 0","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tglobal.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'user-agent',\n\t'via'\n]\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/stream-http/lib/request.js\n// module id = 128\n// module chunks = 0","var Buffer = require('buffer').Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/to-arraybuffer/index.js\n// module id = 129\n// module chunks = 0","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\n/* --------------------------------------------------------------------------------------------\r\n* Copyright (c) Remy Suen. All rights reserved.\r\n* Licensed under the MIT License. See License.txt in the project root for license information.\r\n* ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nvar docker_1 = require(\"./docker\");\r\nvar dockerfile_ast_1 = require(\"dockerfile-ast\");\r\nvar DockerAssist = /** @class */ (function () {\r\n    /**\r\n     * Creates a content assist processor for suggesting completion items related to a Dockerfile.\r\n     *\r\n     * @param document the text document to provide suggestions for\r\n     * @param snippetSupport true if snippets are supported by the client, false otherwise\r\n     * @param dockerRegistryClient the client for communicating with a Docker registry\r\n     */\r\n    function DockerAssist(document, snippetSupport, dockerRegistryClient) {\r\n        this.document = document;\r\n        this.snippetSupport = snippetSupport;\r\n        this.dockerRegistryClient = dockerRegistryClient;\r\n    }\r\n    DockerAssist.prototype.computeProposals = function (position) {\r\n        var buffer = this.document.getText();\r\n        var offset = this.document.offsetAt(position);\r\n        var dockerfile = dockerfile_ast_1.DockerfileParser.parse(buffer);\r\n        var escapeCharacter = dockerfile.getEscapeCharacter();\r\n        var directive = dockerfile.getDirective();\r\n        if (directive !== null && position.line === 0) {\r\n            var range = directive.getNameRange();\r\n            if (position.character <= range.start.character) {\r\n                // in whitespace before the directive's name\r\n                return [this.createEscape(0, offset, dockerfile_ast_1.Directive.escape)];\r\n            }\r\n            else if (position.character <= range.end.character) {\r\n                // in the name\r\n                return [this.createEscape(position.character - range.start.character, offset, dockerfile_ast_1.Directive.escape)];\r\n            }\r\n            return [];\r\n        }\r\n        // directive only possible on the first line\r\n        var comments = dockerfile.getComments();\r\n        if (comments.length !== 0) {\r\n            if (position.line === 0) {\r\n                var commentRange = comments[0].getRange();\r\n                // check if the first comment is on the first line\r\n                if (commentRange.start.line === 0) {\r\n                    // is the user inside the comment\r\n                    if (commentRange.start.character < position.character) {\r\n                        var range = comments[0].getContentRange();\r\n                        if (range === null || position.character <= range.start.character) {\r\n                            // in whitespace\r\n                            return [this.createEscape(0, offset, dockerfile_ast_1.Directive.escape)];\r\n                        }\r\n                        var comment = comments[0].getContent();\r\n                        if (position.character <= range.end.character) {\r\n                            // within the content\r\n                            var prefix_1 = comment.substring(0, position.character - range.start.character);\r\n                            // substring check\r\n                            if (dockerfile_ast_1.Directive.escape.indexOf(prefix_1.toLowerCase()) === 0) {\r\n                                return [this.createEscape(prefix_1.length, offset, dockerfile_ast_1.Directive.escape)];\r\n                            }\r\n                        }\r\n                        return [];\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (var _i = 0, comments_1 = comments; _i < comments_1.length; _i++) {\r\n                    var comment = comments_1[_i];\r\n                    var range = comment.getRange();\r\n                    if (range.start.line === position.line) {\r\n                        if (range.start.character < position.character && position.character <= range.end.character) {\r\n                            // inside a comment\r\n                            return [];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var prefix = DockerAssist.calculateTruePrefix(buffer, offset, escapeCharacter);\r\n        if (prefix !== \"\") {\r\n            var index = prefix.lastIndexOf('$');\r\n            // $ exists so we're at a variable\r\n            if (index !== -1) {\r\n                // check that the variable $ wasn't escaped\r\n                if (prefix.charAt(index - 1) !== '\\\\') {\r\n                    // get the variable's prefix thus far\r\n                    var variablePrefix = prefix.substring(index + 1).toLowerCase();\r\n                    var prefixLength = variablePrefix.length + 1;\r\n                    var items = [];\r\n                    if (variablePrefix === \"\") {\r\n                        // empty prefix, return all variables\r\n                        for (var _a = 0, _b = dockerfile.getAvailableVariables(position.line); _a < _b.length; _a++) {\r\n                            var variable = _b[_a];\r\n                            var doc = dockerfile.resolveVariable(variable, position.line);\r\n                            items.push(this.createVariableCompletionItem(variable, prefixLength, offset, true, doc));\r\n                        }\r\n                        for (var _c = 0, DefaultVariables_1 = dockerfile_ast_1.DefaultVariables; _c < DefaultVariables_1.length; _c++) {\r\n                            var variable = DefaultVariables_1[_c];\r\n                            var doc = dockerfile.resolveVariable(variable, position.line);\r\n                            items.push(this.createVariableCompletionItem(variable, prefixLength, offset, true, doc));\r\n                        }\r\n                    }\r\n                    else {\r\n                        var brace = false;\r\n                        if (variablePrefix.charAt(0) === '{') {\r\n                            brace = true;\r\n                            variablePrefix = variablePrefix.substring(1);\r\n                        }\r\n                        // merge list of available variables with the defaults\r\n                        var variables = dockerfile.getAvailableVariables(position.line);\r\n                        for (var _d = 0, DefaultVariables_2 = dockerfile_ast_1.DefaultVariables; _d < DefaultVariables_2.length; _d++) {\r\n                            var variable = DefaultVariables_2[_d];\r\n                            if (variables.indexOf(variable) === -1) {\r\n                                variables.push(variable);\r\n                            }\r\n                        }\r\n                        for (var _e = 0, variables_1 = variables; _e < variables_1.length; _e++) {\r\n                            var variable = variables_1[_e];\r\n                            if (variable.toLowerCase().indexOf(variablePrefix) === 0) {\r\n                                var doc = dockerfile.resolveVariable(variable, position.line);\r\n                                items.push(this.createVariableCompletionItem(variable, prefixLength, offset, brace, doc));\r\n                            }\r\n                        }\r\n                    }\r\n                    items.sort(function (a, b) {\r\n                        if (a.label.toLowerCase() === b.label.toLowerCase()) {\r\n                            // put uppercase variables first\r\n                            return a.label.localeCompare(b.label) * -1;\r\n                        }\r\n                        return a.label.localeCompare(b.label);\r\n                    });\r\n                    return items;\r\n                }\r\n            }\r\n        }\r\n        var previousWord = \"\";\r\n        instructionsCheck: for (var _f = 0, _g = dockerfile.getInstructions(); _f < _g.length; _f++) {\r\n            var instruction = _g[_f];\r\n            if (docker_1.Util.isInsideRange(position, instruction.getInstructionRange())) {\r\n                break;\r\n            }\r\n            else if (docker_1.Util.isInsideRange(position, instruction.getRange())) {\r\n                switch (instruction.getKeyword()) {\r\n                    case \"ADD\":\r\n                        return this.createAddProposals(instruction, position, offset, prefix);\r\n                    case \"COPY\":\r\n                        return this.createCopyProposals(dockerfile, instruction, position, offset, prefix);\r\n                    case \"FROM\":\r\n                        return this.createFromProposals(instruction, position, prefix);\r\n                    case \"HEALTHCHECK\":\r\n                        var subcommand = instruction.getSubcommand();\r\n                        if (subcommand && subcommand.isBefore(position)) {\r\n                            return [];\r\n                        }\r\n                        return this.createHealthcheckProposals(offset, prefix);\r\n                    case \"ONBUILD\":\r\n                        var onbuildArgs = instruction.getArguments();\r\n                        if (onbuildArgs.length === 0 || docker_1.Util.isInsideRange(position, onbuildArgs[0].getRange())) {\r\n                            // no trigger instructions or the cursor is in the trigger instruction\r\n                            previousWord = \"ONBUILD\";\r\n                            break instructionsCheck;\r\n                        }\r\n                        else {\r\n                            var trigger = instruction.getTriggerInstruction();\r\n                            switch (trigger.getKeyword()) {\r\n                                case \"ADD\":\r\n                                    return this.createAddProposals(trigger, position, offset, prefix);\r\n                                case \"COPY\":\r\n                                    return this.createCopyProposals(dockerfile, trigger, position, offset, prefix);\r\n                                case \"HEALTHCHECK\":\r\n                                    var subcommand_1 = trigger.getSubcommand();\r\n                                    if (subcommand_1 && subcommand_1.isBefore(position)) {\r\n                                        return [];\r\n                                    }\r\n                                    return this.createHealthcheckProposals(offset, prefix);\r\n                            }\r\n                        }\r\n                        return [];\r\n                    default:\r\n                        return [];\r\n                }\r\n            }\r\n        }\r\n        if (prefix === \"\") {\r\n            if (dockerfile.getInstructions().length === 0) {\r\n                // if we don't have any instructions, only suggest FROM\r\n                return [this.createFROM(0, offset, \"FROM\")];\r\n            }\r\n            // no prefix, return all the proposals\r\n            return this.createProposals(docker_1.KEYWORDS, previousWord, 0, offset);\r\n        }\r\n        var suggestions = [];\r\n        var uppercasePrefix = prefix.toUpperCase();\r\n        for (var i = 0; i < docker_1.KEYWORDS.length; i++) {\r\n            if (docker_1.KEYWORDS[i] === uppercasePrefix) {\r\n                // prefix is a keyword already, nothing to suggest\r\n                return [];\r\n            }\r\n            else if (docker_1.KEYWORDS[i].indexOf(uppercasePrefix) === 0) {\r\n                suggestions.push(docker_1.KEYWORDS[i]);\r\n            }\r\n        }\r\n        if (suggestions.length === 0) {\r\n            // prefix doesn't match any keywords, nothing to suggest\r\n            return [];\r\n        }\r\n        return this.createProposals(suggestions, previousWord, prefix.length, offset);\r\n    };\r\n    DockerAssist.prototype.createProposals = function (keywords, previousWord, prefixLength, offset) {\r\n        var proposals = [];\r\n        for (var i = 0; i < keywords.length; i++) {\r\n            switch (keywords[i]) {\r\n                case \"ARG\":\r\n                    if (this.snippetSupport) {\r\n                        proposals.push(this.createARG_NameOnly(prefixLength, offset));\r\n                        proposals.push(this.createARG_DefaultValue(prefixLength, offset));\r\n                    }\r\n                    else {\r\n                        proposals.push(this.createARG(prefixLength, offset));\r\n                    }\r\n                    break;\r\n                case \"HEALTHCHECK\":\r\n                    proposals.push(this.createHEALTHCHECK_CMD(prefixLength, offset));\r\n                    proposals.push(this.createHEALTHCHECK_NONE(prefixLength, offset));\r\n                    break;\r\n                case \"FROM\":\r\n                case \"MAINTAINER\":\r\n                case \"ONBUILD\":\r\n                    // can't have FROM, MAINTAINER, or ONBUILD follow an ONBUILD\r\n                    if (previousWord) {\r\n                        break;\r\n                    }\r\n                default:\r\n                    proposals.push(this.createSingleProposals(keywords[i], prefixLength, offset));\r\n                    break;\r\n            }\r\n        }\r\n        return proposals;\r\n    };\r\n    DockerAssist.prototype.createAddProposals = function (add, position, offset, prefix) {\r\n        var flags = add.getFlags();\r\n        var copyArgs = add.getArguments();\r\n        if (copyArgs.length === 0 && add.getFlags().length === 0) {\r\n            return [this.createADD_FlagChown(0, offset)];\r\n        }\r\n        else if (copyArgs.length > 0 && docker_1.Util.isInsideRange(position, copyArgs[0].getRange()) && prefix === \"-\") {\r\n            return [this.createADD_FlagChown(prefix.length, offset)];\r\n        }\r\n        else if (flags.length > 0 && flags[0].toString() === \"--\") {\r\n            return [this.createADD_FlagChown(prefix.length, offset)];\r\n        }\r\n        else if ((copyArgs.length > 0 && docker_1.Util.isInsideRange(position, copyArgs[0].getRange()) && \"--chown=\".indexOf(prefix) === 0)\r\n            || (flags.length > 0 && \"--chown=\".indexOf(flags[0].toString()) === 0)) {\r\n            return [this.createADD_FlagChown(prefix.length, offset)];\r\n        }\r\n        return [];\r\n    };\r\n    DockerAssist.prototype.createCopyProposals = function (dockerfile, copy, position, offset, prefix) {\r\n        var flag = copy.getFromFlag();\r\n        // is the user in the --from= area\r\n        if (flag && docker_1.Util.isInsideRange(position, flag.getValueRange())) {\r\n            var names = {};\r\n            var items = [];\r\n            var stageIndex = 0;\r\n            // determines if the last build stage was named or not\r\n            var lastNumber = false;\r\n            // get the prefix\r\n            var stagePrefix = this.document.getText().substring(this.document.offsetAt(flag.getValueRange().start), offset).toLowerCase();\r\n            for (var _i = 0, _a = dockerfile.getFROMs(); _i < _a.length; _i++) {\r\n                var from = _a[_i];\r\n                if (copy.isAfter(from)) {\r\n                    var image = from.getImage();\r\n                    var stage = from.getBuildStage();\r\n                    if (stage) {\r\n                        var lowercase = stage.toLowerCase();\r\n                        if (lowercase.indexOf(stagePrefix) === 0 && !names[lowercase]) {\r\n                            names[lowercase] = true;\r\n                            items.push(this.createSourceImageCompletionItem(stage, image, stageIndex, stagePrefix.length, offset));\r\n                        }\r\n                        lastNumber = false;\r\n                    }\r\n                    else if (!names[stageIndex]) {\r\n                        names[stageIndex] = true;\r\n                        items.push(this.createSourceImageCompletionItem(stageIndex.toString(), image, stageIndex, stagePrefix.length, offset));\r\n                        lastNumber = true;\r\n                    }\r\n                    stageIndex++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            // last build stage was not named, don't suggest it as it is recursive\r\n            if (lastNumber && items.length > 0) {\r\n                items.pop();\r\n            }\r\n            return items;\r\n        }\r\n        var flags = copy.getFlags();\r\n        var copyArgs = copy.getArguments();\r\n        if (copyArgs.length === 0 && copy.getFlags().length === 0) {\r\n            return [this.createCOPY_FlagChown(0, offset), this.createCOPY_FlagFrom(0, offset)];\r\n        }\r\n        else if (copyArgs.length > 0 && docker_1.Util.isInsideRange(position, copyArgs[0].getRange()) && prefix === \"-\") {\r\n            return [this.createCOPY_FlagChown(prefix.length, offset), this.createCOPY_FlagFrom(prefix.length, offset)];\r\n        }\r\n        else if (flags.length > 0 && flags[0].toString() === \"--\") {\r\n            return [this.createCOPY_FlagChown(prefix.length, offset), this.createCOPY_FlagFrom(prefix.length, offset)];\r\n        }\r\n        else if ((copyArgs.length > 0 && docker_1.Util.isInsideRange(position, copyArgs[0].getRange()) && \"--chown=\".indexOf(prefix) === 0)\r\n            || (flags.length > 0 && \"--chown=\".indexOf(flags[0].toString()) === 0)) {\r\n            return [this.createCOPY_FlagChown(prefix.length, offset)];\r\n        }\r\n        else if ((copyArgs.length > 0 && docker_1.Util.isInsideRange(position, copyArgs[0].getRange()) && \"--from=\".indexOf(prefix) === 0)\r\n            || (flags.length > 0 && \"--from=\".indexOf(flags[0].toString()) === 0)) {\r\n            return [this.createCOPY_FlagFrom(prefix.length, offset)];\r\n        }\r\n        return [];\r\n    };\r\n    DockerAssist.prototype.createFromProposals = function (from, position, prefix) {\r\n        var _this = this;\r\n        // checks if the cursor is in the image's tag area\r\n        if (docker_1.Util.isInsideRange(position, from.getImageTagRange())) {\r\n            var index = prefix.indexOf(':');\r\n            var lastIndex = prefix.indexOf(':');\r\n            if (index === lastIndex) {\r\n                prefix = prefix.substring(index + 1);\r\n            }\r\n            else {\r\n                prefix = prefix.substring(index + 1, lastIndex);\r\n            }\r\n            var client_1 = this.dockerRegistryClient;\r\n            return new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\r\n                var items, tags, _i, tags_1, tag;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            items = [];\r\n                            return [4 /*yield*/, client_1.getTags(from.getImageName())];\r\n                        case 1:\r\n                            tags = _a.sent();\r\n                            for (_i = 0, tags_1 = tags; _i < tags_1.length; _i++) {\r\n                                tag = tags_1[_i];\r\n                                if (tag.indexOf(prefix) === 0) {\r\n                                    items.push({\r\n                                        label: tag,\r\n                                        kind: vscode_languageserver_types_1.CompletionItemKind.Property,\r\n                                        insertTextFormat: vscode_languageserver_types_1.InsertTextFormat.PlainText,\r\n                                    });\r\n                                }\r\n                            }\r\n                            resolve(items);\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); });\r\n        }\r\n        return [];\r\n    };\r\n    DockerAssist.prototype.createHealthcheckProposals = function (offset, prefix) {\r\n        var items = [];\r\n        if (prefix.length < 3 && \"CMD\".indexOf(prefix.toUpperCase()) === 0) {\r\n            items.push(this.createHEALTHCHECK_CMD_Subcommand(prefix.length, offset));\r\n        }\r\n        if (prefix.length < 4 && \"NONE\".indexOf(prefix.toUpperCase()) === 0) {\r\n            items.push(this.createHEALTHCHECK_NONE_Subcommand(prefix.length, offset));\r\n        }\r\n        if (\"--interval\".indexOf(prefix) === 0) {\r\n            items.push(this.createHEALTHCHECK_FlagInterval(prefix.length, offset));\r\n        }\r\n        if (\"--retries\".indexOf(prefix) === 0) {\r\n            items.push(this.createHEALTHCHECK_FlagRetries(prefix.length, offset));\r\n        }\r\n        if (\"--start-period\".indexOf(prefix) === 0) {\r\n            items.push(this.createHEALTHCHECK_FlagStartPeriod(prefix.length, offset));\r\n        }\r\n        if (\"--timeout\".indexOf(prefix) === 0) {\r\n            items.push(this.createHEALTHCHECK_FlagTimeout(prefix.length, offset));\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            items[i].sortText = i.toString();\r\n        }\r\n        return items;\r\n    };\r\n    /**\r\n    * Walks back in the text buffer to calculate the true prefix of the\r\n    * current text caret offset. This function will handle the\r\n    * Dockerfile escape characters to skip escaped newline characters\r\n    * where applicable.\r\n    *\r\n    * @param buffer the content of the opened file\r\n    * @param offset the current text caret's offset\r\n    * @param escapeCharacter the escape character defined in this Dockerfile\r\n    */\r\n    DockerAssist.calculateTruePrefix = function (buffer, offset, escapeCharacter) {\r\n        var char = buffer.charAt(offset - 1);\r\n        switch (char) {\r\n            case '\\n':\r\n                var escapedPrefix = \"\";\r\n                for (var i = offset - 1; i >= 0; i--) {\r\n                    if (buffer.charAt(i) === '\\n') {\r\n                        if (buffer.charAt(i - 1) === escapeCharacter) {\r\n                            i--;\r\n                        }\r\n                        else if (buffer.charAt(i - 1) === '\\r' && buffer.charAt(i - 2) === escapeCharacter) {\r\n                            i = i - 2;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    else if (buffer.charAt(i) === ' ' || buffer.charAt(i) === '\\t') {\r\n                        break;\r\n                    }\r\n                    else {\r\n                        escapedPrefix = buffer.charAt(i).toUpperCase() + escapedPrefix;\r\n                    }\r\n                }\r\n                if (escapedPrefix !== \"\") {\r\n                    return escapedPrefix;\r\n                }\r\n                break;\r\n            case '\\r':\r\n            case ' ':\r\n            case '\\t':\r\n                break;\r\n            default:\r\n                var truePrefix = char;\r\n                for (var i_1 = offset - 2; i_1 >= 0; i_1--) {\r\n                    char = buffer.charAt(i_1);\r\n                    if (docker_1.Util.isWhitespace(char)) {\r\n                        break;\r\n                    }\r\n                    else {\r\n                        truePrefix = char + truePrefix;\r\n                    }\r\n                }\r\n                return truePrefix;\r\n        }\r\n        return \"\";\r\n    };\r\n    DockerAssist.prototype.createSingleProposals = function (keyword, prefixLength, offset) {\r\n        switch (keyword) {\r\n            case \"ADD\":\r\n                return this.createADD(prefixLength, offset, keyword);\r\n            case \"CMD\":\r\n                return this.createCMD(prefixLength, offset, keyword);\r\n            case \"COPY\":\r\n                return this.createCOPY(prefixLength, offset, keyword);\r\n            case \"ENTRYPOINT\":\r\n                return this.createENTRYPOINT(prefixLength, offset, keyword);\r\n            case \"ENV\":\r\n                return this.createENV(prefixLength, offset, keyword);\r\n            case \"EXPOSE\":\r\n                return this.createEXPOSE(prefixLength, offset, keyword);\r\n            case \"FROM\":\r\n                return this.createFROM(prefixLength, offset, keyword);\r\n            case \"LABEL\":\r\n                return this.createLABEL(prefixLength, offset, keyword);\r\n            case \"MAINTAINER\":\r\n                return this.createMAINTAINER(prefixLength, offset, keyword);\r\n            case \"ONBUILD\":\r\n                return this.createONBUILD(prefixLength, offset, keyword);\r\n            case \"RUN\":\r\n                return this.createRUN(prefixLength, offset, keyword);\r\n            case \"SHELL\":\r\n                return this.createSHELL(prefixLength, offset, keyword);\r\n            case \"STOPSIGNAL\":\r\n                return this.createSTOPSIGNAL(prefixLength, offset, keyword);\r\n            case \"WORKDIR\":\r\n                return this.createWORKDIR(prefixLength, offset, keyword);\r\n            case \"VOLUME\":\r\n                return this.createVOLUME(prefixLength, offset, keyword);\r\n            case \"USER\":\r\n                return this.createUSER(prefixLength, offset, keyword);\r\n        }\r\n        throw new Error(\"Unknown keyword found: \" + keyword);\r\n    };\r\n    DockerAssist.prototype.createADD = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"ADD\", \"ADD source dest\", prefixLength, offset, \"ADD ${1:source} ${2:dest}\", markdown);\r\n    };\r\n    DockerAssist.prototype.createARG = function (prefixLength, offset) {\r\n        return this.createKeywordCompletionItem(\"ARG\", \"ARG\", prefixLength, offset, \"ARG\", \"ARG\");\r\n    };\r\n    DockerAssist.prototype.createARG_NameOnly = function (prefixLength, offset) {\r\n        return this.createKeywordCompletionItem(\"ARG\", \"ARG name\", prefixLength, offset, \"ARG ${1:name}\", \"ARG_NameOnly\");\r\n    };\r\n    DockerAssist.prototype.createARG_DefaultValue = function (prefixLength, offset) {\r\n        return this.createKeywordCompletionItem(\"ARG\", \"ARG name=defaultValue\", prefixLength, offset, \"ARG ${1:name}=${2:defaultValue}\", \"ARG_DefaultValue\");\r\n    };\r\n    DockerAssist.prototype.createCMD = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"CMD\", \"CMD [ \\\"executable\\\" ]\", prefixLength, offset, \"CMD [ \\\"${1:executable}\\\" ]\", markdown);\r\n    };\r\n    DockerAssist.prototype.createCOPY = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"COPY\", \"COPY source dest\", prefixLength, offset, \"COPY ${1:source} ${2:dest}\", markdown);\r\n    };\r\n    DockerAssist.prototype.createENTRYPOINT = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"ENTRYPOINT\", \"ENTRYPOINT [ \\\"executable\\\" ]\", prefixLength, offset, \"ENTRYPOINT [ \\\"${1:executable}\\\" ]\", markdown);\r\n    };\r\n    DockerAssist.prototype.createENV = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"ENV\", \"ENV key=value\", prefixLength, offset, \"ENV ${1:key}=${2:value}\", markdown);\r\n    };\r\n    DockerAssist.prototype.createEXPOSE = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"EXPOSE\", \"EXPOSE port\", prefixLength, offset, \"EXPOSE ${1:port}\", markdown);\r\n    };\r\n    DockerAssist.prototype.createFROM = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"FROM\", \"FROM baseImage\", prefixLength, offset, \"FROM ${1:baseImage}\", markdown);\r\n    };\r\n    DockerAssist.prototype.createHEALTHCHECK_CMD = function (prefixLength, offset) {\r\n        if (this.snippetSupport) {\r\n            return this.createKeywordCompletionItem(\"HEALTHCHECK\", \"HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 CMD [ \\\"executable\\\" ]\", prefixLength, offset, \"HEALTHCHECK --interval=${1:30s} --timeout=${2:30s} --start-period=${3:5s} --retries=${4:3} CMD [ \\\"${5:executable}\\\" ]\", \"HEALTHCHECK_CMD\");\r\n        }\r\n        var textEdit = this.createTextEdit(prefixLength, offset, \"HEALTHCHECK CMD\");\r\n        return {\r\n            data: \"HEALTHCHECK_CMD\",\r\n            textEdit: textEdit,\r\n            label: \"HEALTHCHECK CMD\",\r\n            kind: vscode_languageserver_types_1.CompletionItemKind.Keyword,\r\n            insertTextFormat: vscode_languageserver_types_1.InsertTextFormat.PlainText,\r\n        };\r\n    };\r\n    DockerAssist.prototype.createHEALTHCHECK_CMD_Subcommand = function (prefixLength, offset) {\r\n        if (this.snippetSupport) {\r\n            return this.createKeywordCompletionItem(\"CMD\", \"CMD [ \\\"executable\\\" ]\", prefixLength, offset, \"CMD [ \\\"${1:executable}\\\" ]\", \"HEALTHCHECK_CMD\");\r\n        }\r\n        var textEdit = this.createTextEdit(prefixLength, offset, \"CMD\");\r\n        return {\r\n            data: \"HEALTHCHECK_CMD\",\r\n            textEdit: textEdit,\r\n            label: \"CMD\",\r\n            kind: vscode_languageserver_types_1.CompletionItemKind.Keyword,\r\n            insertTextFormat: vscode_languageserver_types_1.InsertTextFormat.PlainText,\r\n        };\r\n    };\r\n    DockerAssist.prototype.createADD_FlagChown = function (prefixLength, offset) {\r\n        if (this.snippetSupport) {\r\n            return this.createFlagCompletionItem(\"--chown=user:group\", prefixLength, offset, \"--chown=${1:user\\:group}\", \"ADD_FlagChown\");\r\n        }\r\n        return this.createFlagCompletionItem(\"--chown=\", prefixLength, offset, \"--chown=\", \"ADD_FlagChown\");\r\n    };\r\n    DockerAssist.prototype.createCOPY_FlagChown = function (prefixLength, offset) {\r\n        if (this.snippetSupport) {\r\n            return this.createFlagCompletionItem(\"--chown=user:group\", prefixLength, offset, \"--chown=${1:user\\:group}\", \"COPY_FlagChown\");\r\n        }\r\n        return this.createFlagCompletionItem(\"--chown=\", prefixLength, offset, \"--chown=\", \"COPY_FlagChown\");\r\n    };\r\n    DockerAssist.prototype.createCOPY_FlagFrom = function (prefixLength, offset) {\r\n        if (this.snippetSupport) {\r\n            return this.createFlagCompletionItem(\"--from=stage\", prefixLength, offset, \"--from=${1:stage}\", \"COPY_FlagFrom\");\r\n        }\r\n        return this.createFlagCompletionItem(\"--from=\", prefixLength, offset, \"--from=\", \"COPY_FlagFrom\");\r\n    };\r\n    DockerAssist.prototype.createHEALTHCHECK_FlagInterval = function (prefixLength, offset) {\r\n        if (this.snippetSupport) {\r\n            return this.createFlagCompletionItem(\"--interval=30s\", prefixLength, offset, \"--interval=${1:30s}\", \"HEALTHCHECK_FlagInterval\");\r\n        }\r\n        return this.createFlagCompletionItem(\"--interval=\", prefixLength, offset, \"--interval=\", \"HEALTHCHECK_FlagInterval\");\r\n    };\r\n    DockerAssist.prototype.createHEALTHCHECK_FlagRetries = function (prefixLength, offset) {\r\n        if (this.snippetSupport) {\r\n            return this.createFlagCompletionItem(\"--retries=3\", prefixLength, offset, \"--retries=${1:3}\", \"HEALTHCHECK_FlagRetries\");\r\n        }\r\n        return this.createFlagCompletionItem(\"--retries=\", prefixLength, offset, \"--retries=\", \"HEALTHCHECK_FlagRetries\");\r\n    };\r\n    DockerAssist.prototype.createHEALTHCHECK_FlagStartPeriod = function (prefixLength, offset) {\r\n        if (this.snippetSupport) {\r\n            return this.createFlagCompletionItem(\"--start-period=5s\", prefixLength, offset, \"--start-period=${1:5s}\", \"HEALTHCHECK_FlagStartPeriod\");\r\n        }\r\n        return this.createFlagCompletionItem(\"--start-period=\", prefixLength, offset, \"--start-period=\", \"HEALTHCHECK_FlagStartPeriod\");\r\n    };\r\n    DockerAssist.prototype.createHEALTHCHECK_FlagTimeout = function (prefixLength, offset) {\r\n        if (this.snippetSupport) {\r\n            return this.createFlagCompletionItem(\"--timeout=30s\", prefixLength, offset, \"--timeout=${1:30s}\", \"HEALTHCHECK_FlagTimeout\");\r\n        }\r\n        return this.createFlagCompletionItem(\"--timeout=\", prefixLength, offset, \"--timeout=\", \"HEALTHCHECK_FlagTimeout\");\r\n    };\r\n    DockerAssist.prototype.createHEALTHCHECK_NONE = function (prefixLength, offset) {\r\n        return this.createPlainTextCompletionItem(\"HEALTHCHECK NONE\", prefixLength, offset, \"HEALTHCHECK NONE\", \"HEALTHCHECK_NONE\");\r\n    };\r\n    DockerAssist.prototype.createHEALTHCHECK_NONE_Subcommand = function (prefixLength, offset) {\r\n        return this.createPlainTextCompletionItem(\"NONE\", prefixLength, offset, \"NONE\", \"HEALTHCHECK_NONE\");\r\n    };\r\n    DockerAssist.prototype.createLABEL = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"LABEL\", \"LABEL key=\\\"value\\\"\", prefixLength, offset, \"LABEL ${1:key}=\\\"${2:value}\\\"\", markdown);\r\n    };\r\n    DockerAssist.prototype.createMAINTAINER = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"MAINTAINER\", \"MAINTAINER name\", prefixLength, offset, \"MAINTAINER ${1:name}\", markdown);\r\n    };\r\n    DockerAssist.prototype.createONBUILD = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"ONBUILD\", \"ONBUILD INSTRUCTION\", prefixLength, offset, \"ONBUILD ${1:INSTRUCTION}\", markdown);\r\n    };\r\n    DockerAssist.prototype.createRUN = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"RUN\", \"RUN command\", prefixLength, offset, \"RUN ${1:command}\", markdown);\r\n    };\r\n    DockerAssist.prototype.createSHELL = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"SHELL\", \"SHELL [ \\\"executable\\\" ]\", prefixLength, offset, \"SHELL [ \\\"${1:executable}\\\" ]\", markdown);\r\n    };\r\n    DockerAssist.prototype.createSTOPSIGNAL = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"STOPSIGNAL\", \"STOPSIGNAL signal\", prefixLength, offset, \"STOPSIGNAL ${1:signal}\", markdown);\r\n    };\r\n    DockerAssist.prototype.createUSER = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"USER\", \"USER daemon\", prefixLength, offset, \"USER ${1:daemon}\", markdown);\r\n    };\r\n    DockerAssist.prototype.createVOLUME = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"VOLUME\", \"VOLUME [ \\\"/data\\\" ]\", prefixLength, offset, \"VOLUME [ \\\"${1:/data}\\\" ]\", markdown);\r\n    };\r\n    DockerAssist.prototype.createWORKDIR = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(\"WORKDIR\", \"WORKDIR /the/workdir/path\", prefixLength, offset, \"WORKDIR ${1:/the/workdir/path}\", markdown);\r\n    };\r\n    DockerAssist.prototype.createEscape = function (prefixLength, offset, markdown) {\r\n        return this.createKeywordCompletionItem(dockerfile_ast_1.Directive.escape, \"escape=`\", prefixLength, offset, \"escape=${1:`}\", markdown);\r\n    };\r\n    DockerAssist.prototype.createKeywordCompletionItem = function (keyword, label, prefixLength, offset, insertText, markdown) {\r\n        if (!this.snippetSupport) {\r\n            // only inserting the keyword so set the label to the keyword\r\n            label = keyword;\r\n            // just insert the keyword if snippets are not supported by the client\r\n            insertText = keyword;\r\n        }\r\n        var textEdit = this.createTextEdit(prefixLength, offset, insertText);\r\n        return {\r\n            data: markdown,\r\n            textEdit: textEdit,\r\n            label: label,\r\n            kind: vscode_languageserver_types_1.CompletionItemKind.Keyword,\r\n            insertTextFormat: this.snippetSupport ? vscode_languageserver_types_1.InsertTextFormat.Snippet : vscode_languageserver_types_1.InsertTextFormat.PlainText,\r\n        };\r\n    };\r\n    DockerAssist.prototype.createPlainTextCompletionItem = function (label, prefixLength, offset, insertText, markdown) {\r\n        var textEdit = this.createTextEdit(prefixLength, offset, insertText);\r\n        return {\r\n            data: markdown,\r\n            textEdit: textEdit,\r\n            label: label,\r\n            kind: vscode_languageserver_types_1.CompletionItemKind.Keyword,\r\n            insertTextFormat: vscode_languageserver_types_1.InsertTextFormat.PlainText,\r\n        };\r\n    };\r\n    DockerAssist.prototype.createFlagCompletionItem = function (label, prefixLength, offset, insertText, markdown) {\r\n        var textEdit = this.createTextEdit(prefixLength, offset, insertText);\r\n        return {\r\n            data: markdown,\r\n            textEdit: textEdit,\r\n            label: label,\r\n            kind: vscode_languageserver_types_1.CompletionItemKind.Field,\r\n            insertTextFormat: this.snippetSupport ? vscode_languageserver_types_1.InsertTextFormat.Snippet : vscode_languageserver_types_1.InsertTextFormat.PlainText,\r\n        };\r\n    };\r\n    DockerAssist.prototype.createSourceImageCompletionItem = function (label, documentation, buildIndex, prefixLength, offset) {\r\n        return {\r\n            textEdit: this.createTextEdit(prefixLength, offset, label),\r\n            label: label,\r\n            documentation: documentation,\r\n            kind: vscode_languageserver_types_1.CompletionItemKind.Reference,\r\n            insertTextFormat: vscode_languageserver_types_1.InsertTextFormat.PlainText,\r\n            sortText: buildIndex.toString()\r\n        };\r\n    };\r\n    DockerAssist.prototype.createVariableCompletionItem = function (text, prefixLength, offset, brace, documentation) {\r\n        text = brace ? \"${\" + text + '}' : '$' + text;\r\n        return {\r\n            textEdit: this.createTextEdit(prefixLength, offset, text),\r\n            label: text,\r\n            kind: vscode_languageserver_types_1.CompletionItemKind.Variable,\r\n            insertTextFormat: vscode_languageserver_types_1.InsertTextFormat.PlainText,\r\n            documentation: documentation\r\n        };\r\n    };\r\n    DockerAssist.prototype.createTextEdit = function (prefixLength, offset, content) {\r\n        if (prefixLength === 0) {\r\n            return vscode_languageserver_types_1.TextEdit.insert(this.document.positionAt(offset), content);\r\n        }\r\n        return vscode_languageserver_types_1.TextEdit.replace(vscode_languageserver_types_1.Range.create(this.document.positionAt(offset - prefixLength), this.document.positionAt(offset)), content);\r\n    };\r\n    return DockerAssist;\r\n}());\r\nexports.DockerAssist = DockerAssist;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerAssist.js\n// module id = 130\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nvar dockerfile_utils_1 = require(\"dockerfile-utils\");\r\nvar main_1 = require(\"./main\");\r\nvar DockerCommands = /** @class */ (function () {\r\n    function DockerCommands() {\r\n    }\r\n    DockerCommands.prototype.analyzeDiagnostics = function (diagnostics, textDocumentURI) {\r\n        var commands = [];\r\n        for (var i = 0; i < diagnostics.length; i++) {\r\n            // Diagnostic's code is (number | string), convert it if necessary\r\n            if (typeof diagnostics[i].code === \"string\") {\r\n                diagnostics[i].code = parseInt(diagnostics[i].code);\r\n            }\r\n            switch (diagnostics[i].code) {\r\n                case dockerfile_utils_1.ValidationCode.CASING_DIRECTIVE:\r\n                    commands.push({\r\n                        title: \"Convert directive to lowercase\",\r\n                        command: main_1.CommandIds.LOWERCASE,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    break;\r\n                case dockerfile_utils_1.ValidationCode.CASING_INSTRUCTION:\r\n                    commands.push({\r\n                        title: \"Convert instruction to uppercase\",\r\n                        command: main_1.CommandIds.UPPERCASE,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    break;\r\n                case dockerfile_utils_1.ValidationCode.ARGUMENT_EXTRA:\r\n                    commands.push({\r\n                        title: \"Remove extra argument\",\r\n                        command: main_1.CommandIds.EXTRA_ARGUMENT,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    break;\r\n                case dockerfile_utils_1.ValidationCode.INVALID_ESCAPE_DIRECTIVE:\r\n                    commands.push({\r\n                        title: \"Convert to backslash\",\r\n                        command: main_1.CommandIds.DIRECTIVE_TO_BACKSLASH,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    commands.push({\r\n                        title: \"Convert to backtick\",\r\n                        command: main_1.CommandIds.DIRECTIVE_TO_BACKTICK,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    break;\r\n                case dockerfile_utils_1.ValidationCode.INVALID_AS:\r\n                    commands.push({\r\n                        title: \"Convert to AS\",\r\n                        command: main_1.CommandIds.CONVERT_TO_AS,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    break;\r\n                case dockerfile_utils_1.ValidationCode.UNKNOWN_HEALTHCHECK_FLAG:\r\n                    commands.push({\r\n                        title: \"Convert to --interval\",\r\n                        command: main_1.CommandIds.FLAG_TO_HEALTHCHECK_INTERVAL,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    commands.push({\r\n                        title: \"Convert to --retries\",\r\n                        command: main_1.CommandIds.FLAG_TO_HEALTHCHECK_RETRIES,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    commands.push({\r\n                        title: \"Convert to --start-period\",\r\n                        command: main_1.CommandIds.FLAG_TO_HEALTHCHECK_START_PERIOD,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    commands.push({\r\n                        title: \"Convert to --timeout\",\r\n                        command: main_1.CommandIds.FLAG_TO_HEALTHCHECK_TIMEOUT,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    break;\r\n                case dockerfile_utils_1.ValidationCode.UNKNOWN_ADD_FLAG:\r\n                    commands.push({\r\n                        title: \"Convert to --chown\",\r\n                        command: main_1.CommandIds.FLAG_TO_CHOWN,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    break;\r\n                case dockerfile_utils_1.ValidationCode.UNKNOWN_COPY_FLAG:\r\n                    commands.push({\r\n                        title: \"Convert to --chown\",\r\n                        command: main_1.CommandIds.FLAG_TO_CHOWN,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    commands.push({\r\n                        title: \"Convert to --from\",\r\n                        command: main_1.CommandIds.FLAG_TO_COPY_FROM,\r\n                        arguments: [textDocumentURI, diagnostics[i].range]\r\n                    });\r\n                    break;\r\n                case dockerfile_utils_1.ValidationCode.EMPTY_CONTINUATION_LINE:\r\n                    if (diagnostics[i].range.start.line + 1 === diagnostics[i].range.end.line) {\r\n                        commands.push({\r\n                            title: \"Remove empty continuation line\",\r\n                            command: main_1.CommandIds.REMOVE_EMPTY_CONTINUATION_LINE,\r\n                            arguments: [textDocumentURI, diagnostics[i].range]\r\n                        });\r\n                    }\r\n                    else {\r\n                        commands.push({\r\n                            title: \"Remove empty continuation lines\",\r\n                            command: main_1.CommandIds.REMOVE_EMPTY_CONTINUATION_LINE,\r\n                            arguments: [textDocumentURI, diagnostics[i].range]\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        return commands;\r\n    };\r\n    DockerCommands.prototype.createWorkspaceEdit = function (content, command, args) {\r\n        var document = vscode_languageserver_types_1.TextDocument.create(\"\", \"\", 0, content);\r\n        var uri = args[0];\r\n        var range = args[1];\r\n        switch (command) {\r\n            case main_1.CommandIds.LOWERCASE:\r\n                var directive = document.getText().substring(document.offsetAt(range.start), document.offsetAt(range.end));\r\n                return {\r\n                    changes: (_a = {},\r\n                        _a[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.replace(range, directive.toLowerCase())\r\n                        ],\r\n                        _a)\r\n                };\r\n            case main_1.CommandIds.UPPERCASE:\r\n                var instruction = document.getText().substring(document.offsetAt(range.start), document.offsetAt(range.end));\r\n                return {\r\n                    changes: (_b = {},\r\n                        _b[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.replace(range, instruction.toUpperCase())\r\n                        ],\r\n                        _b)\r\n                };\r\n            case main_1.CommandIds.EXTRA_ARGUMENT:\r\n                return {\r\n                    changes: (_c = {},\r\n                        _c[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.del(range)\r\n                        ],\r\n                        _c)\r\n                };\r\n            case main_1.CommandIds.DIRECTIVE_TO_BACKSLASH:\r\n                return {\r\n                    changes: (_d = {},\r\n                        _d[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.replace(range, '\\\\')\r\n                        ],\r\n                        _d)\r\n                };\r\n            case main_1.CommandIds.DIRECTIVE_TO_BACKTICK:\r\n                return {\r\n                    changes: (_e = {},\r\n                        _e[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.replace(range, '`')\r\n                        ],\r\n                        _e)\r\n                };\r\n            case main_1.CommandIds.CONVERT_TO_AS:\r\n                return {\r\n                    changes: (_f = {},\r\n                        _f[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.replace(range, \"AS\")\r\n                        ],\r\n                        _f)\r\n                };\r\n            case main_1.CommandIds.FLAG_TO_CHOWN:\r\n                return {\r\n                    changes: (_g = {},\r\n                        _g[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.replace(range, \"--chown\")\r\n                        ],\r\n                        _g)\r\n                };\r\n            case main_1.CommandIds.FLAG_TO_HEALTHCHECK_INTERVAL:\r\n                return {\r\n                    changes: (_h = {},\r\n                        _h[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.replace(range, \"--interval\")\r\n                        ],\r\n                        _h)\r\n                };\r\n            case main_1.CommandIds.FLAG_TO_HEALTHCHECK_RETRIES:\r\n                return {\r\n                    changes: (_j = {},\r\n                        _j[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.replace(range, \"--retries\")\r\n                        ],\r\n                        _j)\r\n                };\r\n            case main_1.CommandIds.FLAG_TO_HEALTHCHECK_START_PERIOD:\r\n                return {\r\n                    changes: (_k = {},\r\n                        _k[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.replace(range, \"--start-period\")\r\n                        ],\r\n                        _k)\r\n                };\r\n            case main_1.CommandIds.FLAG_TO_HEALTHCHECK_TIMEOUT:\r\n                return {\r\n                    changes: (_l = {},\r\n                        _l[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.replace(range, \"--timeout\")\r\n                        ],\r\n                        _l)\r\n                };\r\n            case main_1.CommandIds.FLAG_TO_COPY_FROM:\r\n                return {\r\n                    changes: (_m = {},\r\n                        _m[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.replace(range, \"--from\")\r\n                        ],\r\n                        _m)\r\n                };\r\n            case main_1.CommandIds.REMOVE_EMPTY_CONTINUATION_LINE:\r\n                return {\r\n                    changes: (_o = {},\r\n                        _o[uri] = [\r\n                            vscode_languageserver_types_1.TextEdit.del(range)\r\n                        ],\r\n                        _o)\r\n                };\r\n        }\r\n        return null;\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\r\n    };\r\n    return DockerCommands;\r\n}());\r\nexports.DockerCommands = DockerCommands;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerCommands.js\n// module id = 131\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n* Copyright (c) Remy Suen. All rights reserved.\r\n* Licensed under the MIT License. See License.txt in the project root for license information.\r\n* ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nvar dockerfile_ast_1 = require(\"dockerfile-ast\");\r\nvar DockerFormatter = /** @class */ (function () {\r\n    function DockerFormatter() {\r\n    }\r\n    DockerFormatter.prototype.getIndentation = function (formattingOptions) {\r\n        var indentation = \"\\t\";\r\n        if (formattingOptions && formattingOptions.insertSpaces) {\r\n            indentation = \"\";\r\n            for (var i = 0; i < formattingOptions.tabSize; i++) {\r\n                indentation = indentation + \" \";\r\n            }\r\n        }\r\n        return indentation;\r\n    };\r\n    /**\r\n     * Creates a TextEdit for formatting the given document.\r\n     *\r\n     * @param document the document being formatted\r\n     * @param start the start offset of the document's content to be replaced\r\n     * @param end the end offset of the document's content to be replaced\r\n     * @param indent true if this block should be replaced with an indentation, false otherwise\r\n     * @param indentation the string to use for an indentation\r\n     */\r\n    DockerFormatter.prototype.createFormattingEdit = function (document, start, end, indent, indentation) {\r\n        if (indent) {\r\n            return vscode_languageserver_types_1.TextEdit.replace({\r\n                start: document.positionAt(start),\r\n                end: document.positionAt(end)\r\n            }, indentation);\r\n        }\r\n        else {\r\n            return vscode_languageserver_types_1.TextEdit.del({\r\n                start: document.positionAt(start),\r\n                end: document.positionAt(end)\r\n            });\r\n        }\r\n    };\r\n    DockerFormatter.prototype.formatOnType = function (content, position, ch, options) {\r\n        var dockerfile = dockerfile_ast_1.DockerfileParser.parse(content);\r\n        // check that the inserted character is the escape character\r\n        if (dockerfile.getEscapeCharacter() === ch) {\r\n            for (var _i = 0, _a = dockerfile.getComments(); _i < _a.length; _i++) {\r\n                var comment = _a[_i];\r\n                // ignore if we're in a comment\r\n                if (comment.getRange().start.line === position.line) {\r\n                    return [];\r\n                }\r\n            }\r\n            var directive = dockerfile.getDirective();\r\n            // ignore if we're in the parser directive\r\n            if (directive && position.line === 0) {\r\n                return [];\r\n            }\r\n            var document = vscode_languageserver_types_1.TextDocument.create(\"\", \"\", 0, content);\r\n            validityCheck: for (var i = document.offsetAt(position); i < content.length; i++) {\r\n                switch (content.charAt(i)) {\r\n                    case ' ':\r\n                    case '\\t':\r\n                        break;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        break validityCheck;\r\n                    default:\r\n                        // not escaping a newline, no need to format the next line\r\n                        return [];\r\n                }\r\n            }\r\n            var lines = [position.line + 1];\r\n            var indentedLines = [];\r\n            indentedLines[lines[0]] = true;\r\n            return this.formatLines(document, document.getText(), lines, indentedLines, options);\r\n        }\r\n        return [];\r\n    };\r\n    DockerFormatter.prototype.formatRange = function (content, range, options) {\r\n        var lines = [];\r\n        for (var i = range.start.line; i <= range.end.line; i++) {\r\n            lines.push(i);\r\n        }\r\n        return this.format(content, lines, options);\r\n    };\r\n    /**\r\n     * Formats the specified lines of the given document based on the\r\n     * provided formatting options.\r\n     *\r\n     * @param document the text document to format\r\n     * @param lines the lines to format\r\n     * @param options the formatting options to use to perform the format\r\n     * @return the text edits to apply to format the lines of the document\r\n     */\r\n    DockerFormatter.prototype.format = function (content, lines, options) {\r\n        var document = vscode_languageserver_types_1.TextDocument.create(\"\", \"\", 0, content);\r\n        var dockerfile = dockerfile_ast_1.DockerfileParser.parse(content);\r\n        var indentedLines = [];\r\n        for (var i = 0; i < document.lineCount; i++) {\r\n            indentedLines[i] = false;\r\n        }\r\n        for (var _i = 0, _a = dockerfile.getInstructions(); _i < _a.length; _i++) {\r\n            var instruction = _a[_i];\r\n            var range = instruction.getRange();\r\n            indentedLines[range.start.line] = false;\r\n            for (var i = range.start.line + 1; i <= range.end.line; i++) {\r\n                indentedLines[i] = true;\r\n            }\r\n        }\r\n        return this.formatLines(document, content, lines, indentedLines, options);\r\n    };\r\n    DockerFormatter.prototype.formatLines = function (document, content, lines, indentedLines, options) {\r\n        var indentation = this.getIndentation(options);\r\n        var edits = [];\r\n        lineCheck: for (var _i = 0, lines_1 = lines; _i < lines_1.length; _i++) {\r\n            var line = lines_1[_i];\r\n            var startOffset = document.offsetAt(vscode_languageserver_types_1.Position.create(line, 0));\r\n            for (var i = startOffset; i < content.length; i++) {\r\n                switch (content.charAt(i)) {\r\n                    case ' ':\r\n                    case '\\t':\r\n                        break;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        if (i !== startOffset) {\r\n                            // only whitespace on this line, trim it\r\n                            var edit = vscode_languageserver_types_1.TextEdit.del({\r\n                                start: document.positionAt(startOffset),\r\n                                end: document.positionAt(i)\r\n                            });\r\n                            edits.push(edit);\r\n                        }\r\n                        // process the next line\r\n                        continue lineCheck;\r\n                    default:\r\n                        // non-whitespace encountered\r\n                        if (i !== startOffset || indentedLines[line]) {\r\n                            var edit = this.createFormattingEdit(document, startOffset, i, indentedLines[line], indentation);\r\n                            edits.push(edit);\r\n                        }\r\n                        // process the next line\r\n                        continue lineCheck;\r\n                }\r\n            }\r\n            if (startOffset < content.length) {\r\n                // only whitespace on the last line, trim it\r\n                var edit = vscode_languageserver_types_1.TextEdit.del({\r\n                    start: document.positionAt(startOffset),\r\n                    end: document.positionAt(content.length)\r\n                });\r\n                edits.push(edit);\r\n            }\r\n        }\r\n        return edits;\r\n    };\r\n    return DockerFormatter;\r\n}());\r\nexports.DockerFormatter = DockerFormatter;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerFormatter.js\n// module id = 132\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dockerfile_ast_1 = require(\"dockerfile-ast\");\r\nvar docker_1 = require(\"./docker\");\r\nvar dockerDefinition_1 = require(\"./dockerDefinition\");\r\nvar DockerHover = /** @class */ (function () {\r\n    function DockerHover(markdown) {\r\n        this.markdown = markdown;\r\n    }\r\n    DockerHover.prototype.onHover = function (content, position) {\r\n        var dockerfile = dockerfile_ast_1.DockerfileParser.parse(content);\r\n        var directive = dockerfile.getDirective();\r\n        var image = dockerfile.getContainingImage(position);\r\n        if (position.line === 0 && directive !== null && directive.getDirective() === dockerfile_ast_1.Directive.escape) {\r\n            var range = directive.getNameRange();\r\n            if (docker_1.Util.isInsideRange(position, range)) {\r\n                return this.markdown.getMarkdown(dockerfile_ast_1.Directive.escape);\r\n            }\r\n        }\r\n        for (var _i = 0, _a = image.getInstructions(); _i < _a.length; _i++) {\r\n            var instruction = _a[_i];\r\n            for (var _b = 0, _c = instruction.getVariables(); _b < _c.length; _b++) {\r\n                var variable = _c[_b];\r\n                // are we hovering over a variable\r\n                if (docker_1.Util.isInsideRange(position, variable.getNameRange())) {\r\n                    var resolved = image.resolveVariable(variable.getName(), variable.getNameRange().start.line);\r\n                    if (resolved || resolved === \"\") {\r\n                        return { contents: resolved };\r\n                    }\r\n                    else if (resolved === null) {\r\n                        return null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (var _d = 0, _e = image.getInstructions(); _d < _e.length; _d++) {\r\n            var instruction = _e[_d];\r\n            var instructionRange = instruction.getInstructionRange();\r\n            if (docker_1.Util.isInsideRange(position, instructionRange)) {\r\n                return this.markdown.getMarkdown(instruction.getKeyword());\r\n            }\r\n            if (instruction instanceof dockerfile_ast_1.Onbuild) {\r\n                // hovering over a trigger instruction of an ONBUILD\r\n                var range = instruction.getTriggerRange();\r\n                if (docker_1.Util.isInsideRange(position, range)) {\r\n                    return this.markdown.getMarkdown(instruction.getTrigger());\r\n                }\r\n            }\r\n            if (instruction instanceof dockerfile_ast_1.Arg) {\r\n                // hovering over an argument defined by ARG\r\n                var property_1 = instruction.getProperty();\r\n                if (property_1 && docker_1.Util.isInsideRange(position, property_1.getNameRange()) && property_1.getValue() !== null) {\r\n                    return {\r\n                        contents: property_1.getValue()\r\n                    };\r\n                }\r\n            }\r\n            if (instruction instanceof dockerfile_ast_1.Env) {\r\n                // hovering over an argument defined by ENV\r\n                for (var _f = 0, _g = instruction.getProperties(); _f < _g.length; _f++) {\r\n                    var property_2 = _g[_f];\r\n                    if (docker_1.Util.isInsideRange(position, property_2.getNameRange()) && property_2.getValue() !== null) {\r\n                        return {\r\n                            contents: property_2.getValue()\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n            var hover = this.getFlagsHover(position, instruction);\r\n            if (hover !== undefined) {\r\n                return hover;\r\n            }\r\n        }\r\n        var property = dockerDefinition_1.DockerDefinition.findDefinition(dockerfile, position);\r\n        if (property && property.getValue() !== null) {\r\n            return { contents: property.getValue() };\r\n        }\r\n        return null;\r\n    };\r\n    DockerHover.prototype.getFlagsHover = function (position, instruction) {\r\n        switch (instruction.getKeyword()) {\r\n            case \"ADD\":\r\n                var addFlags = instruction.getFlags();\r\n                for (var _i = 0, addFlags_1 = addFlags; _i < addFlags_1.length; _i++) {\r\n                    var flag = addFlags_1[_i];\r\n                    if (docker_1.Util.isInsideRange(position, flag.getNameRange())) {\r\n                        switch (flag.getName()) {\r\n                            case \"chown\":\r\n                                return this.markdown.getMarkdown(\"ADD_FlagChown\");\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"COPY\":\r\n                var copyFlags = instruction.getFlags();\r\n                for (var _a = 0, copyFlags_1 = copyFlags; _a < copyFlags_1.length; _a++) {\r\n                    var flag = copyFlags_1[_a];\r\n                    if (docker_1.Util.isInsideRange(position, flag.getNameRange())) {\r\n                        switch (flag.getName()) {\r\n                            case \"chown\":\r\n                                return this.markdown.getMarkdown(\"COPY_FlagChown\");\r\n                            case \"from\":\r\n                                return this.markdown.getMarkdown(\"COPY_FlagFrom\");\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"HEALTHCHECK\":\r\n                var flags = instruction.getFlags();\r\n                for (var _b = 0, flags_1 = flags; _b < flags_1.length; _b++) {\r\n                    var flag = flags_1[_b];\r\n                    if (docker_1.Util.isInsideRange(position, flag.getNameRange())) {\r\n                        switch (flag.getName()) {\r\n                            case \"interval\":\r\n                                return this.markdown.getMarkdown(\"HEALTHCHECK_FlagInterval\");\r\n                            case \"retries\":\r\n                                return this.markdown.getMarkdown(\"HEALTHCHECK_FlagRetries\");\r\n                            case \"start-period\":\r\n                                return this.markdown.getMarkdown(\"HEALTHCHECK_FlagStartPeriod\");\r\n                            case \"timeout\":\r\n                                return this.markdown.getMarkdown(\"HEALTHCHECK_FlagTimeout\");\r\n                        }\r\n                        return null;\r\n                    }\r\n                }\r\n                break;\r\n            case \"ONBUILD\":\r\n                var trigger = instruction.getTriggerInstruction();\r\n                if (trigger !== null) {\r\n                    return this.getFlagsHover(position, trigger);\r\n                }\r\n                break;\r\n        }\r\n        return undefined;\r\n    };\r\n    return DockerHover;\r\n}());\r\nexports.DockerHover = DockerHover;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerHover.js\n// module id = 133\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dockerfile_ast_1 = require(\"dockerfile-ast\");\r\nvar DockerLinks = /** @class */ (function () {\r\n    function DockerLinks() {\r\n    }\r\n    DockerLinks.prototype.getLinks = function (content) {\r\n        var dockerfile = dockerfile_ast_1.DockerfileParser.parse(content);\r\n        var links = [];\r\n        for (var _i = 0, _a = dockerfile.getFROMs(); _i < _a.length; _i++) {\r\n            var from = _a[_i];\r\n            var name = from.getImageName();\r\n            if (name) {\r\n                if (name.indexOf('/') === -1) {\r\n                    links.push({\r\n                        range: from.getImageNameRange(),\r\n                        target: \"https://hub.docker.com/_/\" + name + \"/\"\r\n                    });\r\n                }\r\n                else {\r\n                    links.push({\r\n                        range: from.getImageNameRange(),\r\n                        target: \"https://hub.docker.com/r/\" + name + \"/\"\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return links;\r\n    };\r\n    return DockerLinks;\r\n}());\r\nexports.DockerLinks = DockerLinks;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerLinks.js\n// module id = 134\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n* Copyright (c) Remy Suen. All rights reserved.\r\n* Licensed under the MIT License. See License.txt in the project root for license information.\r\n* ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MarkdownDocumentation = /** @class */ (function () {\r\n    function MarkdownDocumentation() {\r\n        this.dockerMessages = {\r\n            \"hoverAdd\": \"Copy files, folders, or remote URLs from `source` to the `dest` path in the image's filesystem.\\n\\n\",\r\n            \"hoverArg\": \"Define a variable with an optional default value that users can override at build-time when using `docker build`.\\n\\n\",\r\n            \"hoverCmd\": \"Provide defaults for an executing container. If an executable is not specified, then `ENTRYPOINT` must be specified as well. There can only be one `CMD` instruction in a `Dockerfile`.\\n\\n\",\r\n            \"hoverCopy\": \"Copy files or folders from `source` to the `dest` path in the image's filesystem.\\n\\n\",\r\n            \"hoverEntrypoint\": \"Configures the container to be run as an executable.\\n\\n\",\r\n            \"hoverEnv\": \"Set the environment variable `key` to the value `value`.\\n\\n\",\r\n            \"hoverExpose\": \"Define the network `port`s that this container will listen on at runtime.\\n\\n\",\r\n            \"hoverFrom\": \"Set the `baseImage` to use for subsequent instructions. `FROM` must be the first instruction in a `Dockerfile`.\\n\\n\",\r\n            \"hoverHealthcheck\": \"Define how Docker should test the container to check that it is still working. Alternatively, disable the base image's `HEALTHCHECK` instruction. There can only be one `HEALTHCHECK` instruction in a `Dockerfile`.\\n\\nSince Docker 1.12\\n\\n\",\r\n            \"hoverLabel\": \"Adds metadata to an image.\\n\\nSince Docker 1.6\\n\\n\",\r\n            \"hoverMaintainer\": \"Set the _Author_ field of the generated images. This instruction has been deprecated in favor of `LABEL`.\\n\\n\",\r\n            \"hoverOnbuild\": \"Add a _trigger_ instruction to the image that will be executed when the image is used as a base image for another build.\\n\\n\",\r\n            \"hoverRun\": \"Execute any commands on top of the current image as a new layer and commit the results.\\n\\n\",\r\n            \"hoverShell\": \"Override the default shell used for the _shell_ form of commands.\\n\\nSince Docker 1.12\\n\\n\",\r\n            \"hoverStopsignal\": \"Set the system call signal to use to send to the container to exit. Signals can be valid unsigned numbers or a signal name in the `SIGNAME` format such as `SIGKILL`.\\n\\nSince Docker 1.12\\n\\n\",\r\n            \"hoverUser\": \"Set the user name or UID to use when running the image in addition to any subsequent `CMD`, `ENTRYPOINT`, or `RUN` instructions that follow it in the `Dockerfile`.\\n\\n\",\r\n            \"hoverVolume\": \"Create a mount point with the specifid name and mark it as holding externally mounted volumes from the native host or from other containers.\\n\\n\",\r\n            \"hoverWorkdir\": \"Set the working directory for any subsequent `ADD`, `COPY`, `CMD`, `ENTRYPOINT`, or `RUN` instructions that follow it in the `Dockerfile`.\\n\\n\",\r\n            \"hoverEscape\": \"Sets the character to use to escape characters and newlines in this Dockerfile. If unspecified, the default escape character is `\\\\`.\\n\\n\",\r\n            \"hoverOnlineDocumentationFooter\": \"\\n\\n[Online documentation](${0})\",\r\n            \"hoverAddFlagChown\": \"The username, groupname, or UID/GID combination to own the added content.\",\r\n            \"hoverCopyFlagChown\": \"The username, groupname, or UID/GID combination to own the copied content.\",\r\n            \"hoverCopyFlagFrom\": \"The previous build stage to use as the source location instead of the build's context.\\n\\nSince Docker 17.05.0-ce.\",\r\n            \"hoverHealthcheckFlagInterval\": \"The seconds to wait for the health check to run after the container has started, and then again the number of seconds to wait before running again after the previous check has completed.\",\r\n            \"hoverHealthcheckFlagRetries\": \"The number of consecutive failures of this health check before the container is considered to be `unhealthy`.\",\r\n            \"hoverHealthcheckFlagStartPeriod\": \"The number of seconds to wait for the container to startup. Failures during this grace period will not count towards the maximum number of retries. However, should a health check succeed during this period then any subsequent failures will count towards the maximum number of retries.\\n\\nSince Docker 17.05.0-ce.\",\r\n            \"hoverHealthcheckFlagTimeout\": \"The number of seconds to wait for the check to complete before considering it to have failed.\",\r\n            \"proposalArgNameOnly\": \"Define a variable that users can set at build-time when using `docker build`.\\n\\n\",\r\n            \"proposalArgDefaultValue\": \"Define a variable with the given default value that users can override at build-time when using `docker build`.\\n\\n\",\r\n            \"proposalHealthcheckExec\": \"Define how Docker should test the container to check that it is still working. There can only be one `HEALTHCHECK` instruction in a `Dockerfile`.\\n\\nSince Docker 1.12\\n\\n\",\r\n            \"proposalHealthcheckNone\": \"Disable the `HEALTHCHECK` instruction inherited from the base image if one exists. There can only be one `HEALTHCHECK` instruction in a `Dockerfile`.\\n\\nSince Docker 1.12\"\r\n        };\r\n        this.markdowns = {\r\n            ADD: {\r\n                contents: this.dockerMessages[\"hoverAdd\"] +\r\n                    \"```\\n\" +\r\n                    \"ADD hello.txt /absolute/path\\n\" +\r\n                    \"ADD hello.txt relative/to/workdir\\n\" +\r\n                    \"```\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#add\")\r\n            },\r\n            ADD_FlagChown: {\r\n                contents: this.dockerMessages[\"hoverAddFlagChown\"]\r\n            },\r\n            ARG: {\r\n                contents: this.dockerMessages[\"hoverArg\"] +\r\n                    \"```\\n\" +\r\n                    \"ARG userName\\n\" +\r\n                    \"ARG testOutputDir=test\\n\" +\r\n                    \"```\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#arg\")\r\n            },\r\n            CMD: {\r\n                contents: this.dockerMessages[\"hoverCmd\"] +\r\n                    \"```\\n\" +\r\n                    \"CMD [ \\\"/bin/ls\\\", \\\"-l\\\" ]\\n\" +\r\n                    \"```\\n\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#cmd\")\r\n            },\r\n            COPY: {\r\n                contents: this.dockerMessages[\"hoverCopy\"] +\r\n                    \"```\\n\" +\r\n                    \"COPY hello.txt /absolute/path\\n\" +\r\n                    \"COPY hello.txt relative/to/workdir\\n\" +\r\n                    \"```\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#copy\")\r\n            },\r\n            COPY_FlagChown: {\r\n                contents: this.dockerMessages[\"hoverCopyFlagChown\"]\r\n            },\r\n            COPY_FlagFrom: {\r\n                contents: this.dockerMessages[\"hoverCopyFlagFrom\"]\r\n            },\r\n            ENTRYPOINT: {\r\n                contents: this.dockerMessages[\"hoverEntrypoint\"] +\r\n                    \"```\\n\" +\r\n                    \"ENTRYPOINT [ \\\"/opt/app/run.sh\\\", \\\"--port\\\", \\\"8080\\\" ]\\n\" +\r\n                    \"```\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#entrypoint\")\r\n            },\r\n            ENV: {\r\n                contents: this.dockerMessages[\"hoverEnv\"] +\r\n                    \"```\\n\" +\r\n                    \"ENV buildTag=1.0\\n\" +\r\n                    \"```\\n\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#env\")\r\n            },\r\n            EXPOSE: {\r\n                contents: this.dockerMessages[\"hoverExpose\"] +\r\n                    \"```\\n\" +\r\n                    \"EXPOSE 8080\\n\" +\r\n                    \"EXPOSE 80 443 22\\n\" +\r\n                    \"EXPOSE 7000-8000\\n\" +\r\n                    \"```\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#expose\")\r\n            },\r\n            FROM: {\r\n                contents: this.dockerMessages[\"hoverFrom\"] +\r\n                    \"```\\n\" +\r\n                    \"FROM baseImage\\n\" +\r\n                    \"FROM baseImage:tag\\n\" +\r\n                    \"FROM baseImage@digest\\n\" +\r\n                    \"```\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#from\")\r\n            },\r\n            HEALTHCHECK: {\r\n                contents: this.dockerMessages[\"hoverHealthcheck\"] +\r\n                    \"```\\n\" +\r\n                    \"HEALTHCHECK --interval=10m --timeout=5s \\\\\\n\" +\r\n                    \"    CMD curl -f http://localhost/ || exit 1\\n\" +\r\n                    \"HEALTHCHECK NONE\\n\" +\r\n                    \"```\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#healthcheck\")\r\n            },\r\n            HEALTHCHECK_FlagInterval: {\r\n                contents: this.dockerMessages[\"hoverHealthcheckFlagInterval\"]\r\n            },\r\n            HEALTHCHECK_FlagRetries: {\r\n                contents: this.dockerMessages[\"hoverHealthcheckFlagRetries\"]\r\n            },\r\n            HEALTHCHECK_FlagStartPeriod: {\r\n                contents: this.dockerMessages[\"hoverHealthcheckFlagStartPeriod\"]\r\n            },\r\n            HEALTHCHECK_FlagTimeout: {\r\n                contents: this.dockerMessages[\"hoverHealthcheckFlagTimeout\"]\r\n            },\r\n            LABEL: {\r\n                contents: this.dockerMessages[\"hoverLabel\"] +\r\n                    \"```\\n\" +\r\n                    \"LABEL version=\\\"1.0\\\"\\n\" +\r\n                    \"```\\n\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#label\")\r\n            },\r\n            MAINTAINER: {\r\n                contents: this.dockerMessages[\"hoverMaintainer\"] +\r\n                    \"```\\n\" +\r\n                    \"MAINTAINER name\\n\" +\r\n                    \"```\\n\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#maintainer\")\r\n            },\r\n            ONBUILD: {\r\n                contents: this.dockerMessages[\"hoverOnbuild\"] +\r\n                    \"```\\n\" +\r\n                    \"ONBUILD ADD . /opt/app/src/extensions\\n\" +\r\n                    \"ONBUILD RUN /usr/local/bin/build.sh /opt/app\" +\r\n                    \"```\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#cmd\")\r\n            },\r\n            RUN: {\r\n                contents: this.dockerMessages[\"hoverRun\"] +\r\n                    \"```\\n\" +\r\n                    \"RUN apt-get update && apt-get install -y curl\\n\" +\r\n                    \"```\\n\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#run\")\r\n            },\r\n            SHELL: {\r\n                contents: this.dockerMessages[\"hoverShell\"] +\r\n                    \"```\\n\" +\r\n                    \"SHELL [ \\\"powershell\\\", \\\"-command\\\" ]\\n\" +\r\n                    \"```\\n\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#shell\")\r\n            },\r\n            STOPSIGNAL: {\r\n                contents: this.dockerMessages[\"hoverStopsignal\"] +\r\n                    \"```\\n\" +\r\n                    \"STOPSIGNAL 9\\n\" +\r\n                    \"```\\n\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#stopsignal\")\r\n            },\r\n            USER: {\r\n                contents: this.dockerMessages[\"hoverUser\"] +\r\n                    \"```\\n\" +\r\n                    \"USER daemon\\n\" +\r\n                    \"```\\n\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#user\")\r\n            },\r\n            VOLUME: {\r\n                contents: this.dockerMessages[\"hoverVolume\"] +\r\n                    \"```\\n\" +\r\n                    \"VOLUME [ \\\"/var/db\\\" ]\\n\" +\r\n                    \"```\\n\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#volume\")\r\n            },\r\n            WORKDIR: {\r\n                contents: this.dockerMessages[\"hoverWorkdir\"] +\r\n                    \"```\\n\" +\r\n                    \"WORKDIR /path/to/workdir\\n\" +\r\n                    \"WORKDIR relative/path\\n\" +\r\n                    \"```\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#workdir\")\r\n            },\r\n            escape: {\r\n                contents: this.dockerMessages[\"hoverEscape\"] +\r\n                    \"```\\n\" +\r\n                    \"# escape=`\\n\" +\r\n                    \"```\" +\r\n                    this.formatMessage(this.dockerMessages[\"hoverOnlineDocumentationFooter\"], \"https://docs.docker.com/engine/reference/builder/#escape\")\r\n            }\r\n        };\r\n    }\r\n    MarkdownDocumentation.prototype.formatMessage = function (text, variable) {\r\n        return text.replace(\"${0}\", variable);\r\n    };\r\n    /**\r\n     * Retrieves the Markdown documentation for the given word.\r\n     *\r\n     * @param word the Dockerfile keyword or directive, must not be null\r\n     */\r\n    MarkdownDocumentation.prototype.getMarkdown = function (word) {\r\n        return this.markdowns[word];\r\n    };\r\n    return MarkdownDocumentation;\r\n}());\r\nexports.MarkdownDocumentation = MarkdownDocumentation;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerMarkdown.js\n// module id = 135\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n* Copyright (c) Remy Suen. All rights reserved.\r\n* Licensed under the MIT License. See License.txt in the project root for license information.\r\n* ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar https = require(\"https\");\r\n/**\r\n * The DockerRegistryClient provides a way to communicate with the\r\n * official Docker registry hosted on Docker Hub.\r\n */\r\nvar DockerRegistryClient = /** @class */ (function () {\r\n    function DockerRegistryClient(logger) {\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Gets the list of tags of the specified image from the Docker registry on Docker Hub.\r\n     *\r\n     * @param image the name of the interested image\r\n     * @param prefix an optional prefix for filtering the list of tags\r\n     * @return a promise that resolves to the specified image's list\r\n     *         of tags, may be empty\r\n     */\r\n    DockerRegistryClient.prototype.getTags = function (image, prefix) {\r\n        var _this = this;\r\n        if (image.indexOf('/') === -1) {\r\n            image = \"library/\" + image;\r\n        }\r\n        return this.requestToken(image).then(function (data) {\r\n            if (data === null) {\r\n                return [];\r\n            }\r\n            return _this.listTags(data.token, image).then(function (data) {\r\n                if (!prefix) {\r\n                    return data.tags;\r\n                }\r\n                var tags = [];\r\n                for (var _i = 0, _a = data.tags; _i < _a.length; _i++) {\r\n                    var tag = _a[_i];\r\n                    if (tag.indexOf(prefix) === 0) {\r\n                        tags.push(tag);\r\n                    }\r\n                }\r\n                return tags;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Requests for an authentication token from the Docker registry\r\n     * for accessing the given image.\r\n     *\r\n     * @param image the name of the interested image\r\n     * @return a promise that resolves to the authentication token if\r\n     *         successful, or null if an error has occurred\r\n     */\r\n    DockerRegistryClient.prototype.requestToken = function (image) {\r\n        var _this = this;\r\n        return this.performHttpsGet({\r\n            hostname: \"auth.docker.io\",\r\n            port: 443,\r\n            path: \"/token?service=registry.docker.io&scope=repository:\" + image + \":pull\",\r\n            headers: {\r\n                Accept: \"application/json\"\r\n            }\r\n        }).catch(function (error) {\r\n            _this.log(error);\r\n            return null;\r\n        });\r\n    };\r\n    /**\r\n     * Queries the registry for the given image's list of tags.\r\n     *\r\n     * @param authToken the authentication token to use for the GET\r\n     * @param image the name of the interested image\r\n     * @return a promise that will resolve to the image's list of\r\n     *         tags, an empty array will be returned if an error\r\n     *         occurs during the GET request\r\n     */\r\n    DockerRegistryClient.prototype.listTags = function (authToken, image) {\r\n        var _this = this;\r\n        return this.performHttpsGet({\r\n            hostname: \"registry-1.docker.io\",\r\n            port: 443,\r\n            path: \"/v2/\" + image + \"/tags/list\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: \"Bearer \" + authToken\r\n            }\r\n        }).catch(function (error) {\r\n            _this.log(error);\r\n            return { tags: [] };\r\n        });\r\n    };\r\n    DockerRegistryClient.prototype.performHttpsGet = function (opts) {\r\n        return new Promise(function (resolve, reject) {\r\n            var request = https.get(opts, function (response) {\r\n                if (response.statusCode !== 200) {\r\n                    // not a 200 OK, reject the promise with the error\r\n                    var error = new Error(response.statusMessage);\r\n                    error.statusCode = response.statusCode;\r\n                    reject(error);\r\n                }\r\n                else {\r\n                    var buffer_1 = '';\r\n                    response.on('data', function (data) {\r\n                        buffer_1 += data;\r\n                    });\r\n                    response.on('end', function () {\r\n                        resolve(JSON.parse(buffer_1));\r\n                    });\r\n                }\r\n            });\r\n            request.end();\r\n            request.on('error', function (error) {\r\n                reject(error);\r\n            });\r\n        });\r\n    };\r\n    DockerRegistryClient.prototype.log = function (error) {\r\n        if (this.logger) {\r\n            this.logger.log(error.toString());\r\n        }\r\n    };\r\n    return DockerRegistryClient;\r\n}());\r\nexports.DockerRegistryClient = DockerRegistryClient;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerRegistryClient.js\n// module id = 136\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nvar dockerHighlight_1 = require(\"./dockerHighlight\");\r\nvar DockerRename = /** @class */ (function () {\r\n    function DockerRename() {\r\n    }\r\n    DockerRename.prototype.rename = function (textDocument, content, position, newName) {\r\n        var edits = [];\r\n        var highlighter = new dockerHighlight_1.DockerHighlight();\r\n        var highlightRanges = highlighter.computeHighlightRanges(textDocument, content, position);\r\n        for (var _i = 0, highlightRanges_1 = highlightRanges; _i < highlightRanges_1.length; _i++) {\r\n            var highlightRange = highlightRanges_1[_i];\r\n            edits.push(vscode_languageserver_types_1.TextEdit.replace(highlightRange.range, newName));\r\n        }\r\n        return edits;\r\n    };\r\n    return DockerRename;\r\n}());\r\nexports.DockerRename = DockerRename;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerRename.js\n// module id = 137\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nvar vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nvar dockerPlainText_1 = require(\"./dockerPlainText\");\r\nvar dockerfile_ast_1 = require(\"dockerfile-ast\");\r\nvar docker_1 = require(\"./docker\");\r\nvar DockerSignatures = /** @class */ (function () {\r\n    function DockerSignatures() {\r\n        this.documentation = new dockerPlainText_1.PlainTextDocumentation();\r\n    }\r\n    DockerSignatures.prototype.computeSignatures = function (content, position) {\r\n        var document = vscode_languageserver_types_1.TextDocument.create(\"\", \"\", 0, content);\r\n        var dockerfile = dockerfile_ast_1.DockerfileParser.parse(document.getText());\r\n        if (position.line === 0) {\r\n            var directive = dockerfile.getDirective();\r\n            if (directive !== null && directive.getDirective() === dockerfile_ast_1.Directive.escape) {\r\n                return {\r\n                    signatures: [\r\n                        {\r\n                            label: \"escape=`\\\\`\",\r\n                            documentation: this.documentation.getDocumentation(\"signatureEscape\"),\r\n                            parameters: [\r\n                                {\r\n                                    label: \"\\\\\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureEscape_Param\")\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                    activeSignature: 0,\r\n                    activeParameter: 0\r\n                };\r\n            }\r\n        }\r\n        for (var _i = 0, _a = dockerfile.getComments(); _i < _a.length; _i++) {\r\n            var comment = _a[_i];\r\n            if (docker_1.Util.isInsideRange(position, comment.getRange())) {\r\n                return {\r\n                    signatures: [],\r\n                    activeSignature: null,\r\n                    activeParameter: null\r\n                };\r\n            }\r\n        }\r\n        var signatureHelp = this.getInstructionSignatures(document, dockerfile.getOnbuildTriggers(), position);\r\n        if (!signatureHelp) {\r\n            signatureHelp = this.getInstructionSignatures(document, dockerfile.getInstructions(), position);\r\n            if (!signatureHelp) {\r\n                signatureHelp = {\r\n                    signatures: [],\r\n                    activeSignature: null,\r\n                    activeParameter: null\r\n                };\r\n            }\r\n        }\r\n        return signatureHelp;\r\n    };\r\n    DockerSignatures.prototype.getInstructionSignatures = function (document, instructions, position) {\r\n        for (var _i = 0, instructions_1 = instructions; _i < instructions_1.length; _i++) {\r\n            var instruction = instructions_1[_i];\r\n            if (!docker_1.Util.isInsideRange(position, instruction.getRange())) {\r\n                continue;\r\n            }\r\n            else if (docker_1.Util.isInsideRange(position, instruction.getInstructionRange())) {\r\n                return null;\r\n            }\r\n            switch (instruction.getKeyword()) {\r\n                case \"ADD\":\r\n                    var add = instruction;\r\n                    var addShellSignature = {\r\n                        label: \"ADD [flags] source ... dest\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureAdd_Signature0\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"[flags]\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureAdd_Signature0_Param0\")\r\n                            },\r\n                            {\r\n                                label: \"source\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureAdd_Signature0_Param1\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureAdd_Signature0_Param2\")\r\n                            },\r\n                            {\r\n                                label: \"dest\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureAdd_Signature0_Param3\")\r\n                            }\r\n                        ]\r\n                    };\r\n                    var addJsonSignature = {\r\n                        label: \"ADD [flags] [ \\\"source\\\", ..., \\\"dest\\\" ]\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureAdd_Signature1\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"[flags]\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureAdd_Signature1_Param0\")\r\n                            },\r\n                            {\r\n                                label: \"[\"\r\n                            },\r\n                            {\r\n                                label: \"\\\"source\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureAdd_Signature1_Param2\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureAdd_Signature1_Param3\")\r\n                            },\r\n                            {\r\n                                label: \"\\\"dest\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureAdd_Signature1_Param4\")\r\n                            },\r\n                            {\r\n                                label: \"]\"\r\n                            }\r\n                        ]\r\n                    };\r\n                    return this.getJSONInstructionSignatureHelp(document, add, position, [addJsonSignature], addShellSignature, true, false, false, false);\r\n                case \"ARG\":\r\n                    var argSignatureHelp = {\r\n                        signatures: [\r\n                            {\r\n                                label: \"ARG name\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureArg_Signature0\"),\r\n                                parameters: [\r\n                                    {\r\n                                        label: \"name\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureArg_Signature0_Param\")\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: \"ARG name=defaultValue\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureArg_Signature1\"),\r\n                                parameters: [\r\n                                    {\r\n                                        label: \"name\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureArg_Signature1_Param0\")\r\n                                    },\r\n                                    {\r\n                                        label: \"defaultValue\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureArg_Signature1_Param1\")\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ],\r\n                        activeSignature: 0,\r\n                        activeParameter: 0\r\n                    };\r\n                    var content = instruction.getTextContent();\r\n                    var index = content.indexOf('=');\r\n                    if (index !== -1) {\r\n                        argSignatureHelp = {\r\n                            signatures: [\r\n                                {\r\n                                    label: \"ARG name=defaultValue\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureArg_Signature1\"),\r\n                                    parameters: [\r\n                                        {\r\n                                            label: \"name\",\r\n                                            documentation: this.documentation.getDocumentation(\"signatureArg_Signature1_Param0\")\r\n                                        },\r\n                                        {\r\n                                            label: \"defaultValue\",\r\n                                            documentation: this.documentation.getDocumentation(\"signatureArg_Signature1_Param1\")\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ],\r\n                            activeSignature: 0,\r\n                            activeParameter: 0\r\n                        };\r\n                        if (document.offsetAt(position) > document.offsetAt(instruction.getRange().start) + index) {\r\n                            argSignatureHelp.activeParameter = 1;\r\n                        }\r\n                    }\r\n                    return argSignatureHelp;\r\n                case \"CMD\":\r\n                    var cmd = instruction;\r\n                    var cmdJsonExecutableSignature = {\r\n                        label: \"CMD [ \\\"executable\\\", \\\"parameter\\\", ... ]\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureCmd_Signature0\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"[\"\r\n                            },\r\n                            {\r\n                                label: \"\\\"executable\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCmd_Signature0_Param1\")\r\n                            },\r\n                            {\r\n                                label: \"\\\"parameter\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCmd_Signature0_Param2\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCmd_Signature0_Param3\")\r\n                            },\r\n                            {\r\n                                label: \"]\"\r\n                            }\r\n                        ]\r\n                    };\r\n                    var cmdJsonParameterSignature = {\r\n                        label: \"CMD [ \\\"parameter\\\", \\\"parameter2\\\", ... ]\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureCmd_Signature1\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"[\"\r\n                            },\r\n                            {\r\n                                label: \"\\\"parameter\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCmd_Signature1_Param1\")\r\n                            },\r\n                            {\r\n                                label: \"\\\"parameter2\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCmd_Signature1_Param2\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCmd_Signature1_Param3\")\r\n                            },\r\n                            {\r\n                                label: \"]\"\r\n                            }\r\n                        ]\r\n                    };\r\n                    var cmdShellSignature = {\r\n                        label: \"CMD executable parameter ...\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureCmd_Signature2\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"executable\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCmd_Signature2_Param0\")\r\n                            },\r\n                            {\r\n                                label: \"parameter\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCmd_Signature2_Param1\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCmd_Signature2_Param2\")\r\n                            }\r\n                        ]\r\n                    };\r\n                    return this.getJSONInstructionSignatureHelp(document, cmd, position, [cmdJsonExecutableSignature, cmdJsonParameterSignature], cmdShellSignature, false, true, false, true);\r\n                case \"COPY\":\r\n                    var copy = instruction;\r\n                    var flag = copy.getFromFlag();\r\n                    if (flag !== null) {\r\n                        var range = flag.getValueRange();\r\n                        if (range !== null && docker_1.Util.isInsideRange(position, range)) {\r\n                            return {\r\n                                signatures: [\r\n                                    {\r\n                                        label: \"--from=stage\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureCopyFlagFrom\"),\r\n                                        parameters: [\r\n                                            {\r\n                                                label: \"stage\",\r\n                                                documentation: this.documentation.getDocumentation(\"signatureCopyFlagFrom_Param\")\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ],\r\n                                activeSignature: 0,\r\n                                activeParameter: 0\r\n                            };\r\n                        }\r\n                    }\r\n                    var copyShellSignature = {\r\n                        label: \"COPY [flags] source ... dest\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureCopy_Signature0\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"[flags]\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCopy_Signature0_Param0\")\r\n                            },\r\n                            {\r\n                                label: \"source\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCopy_Signature0_Param1\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCopy_Signature0_Param2\")\r\n                            },\r\n                            {\r\n                                label: \"dest\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCopy_Signature0_Param3\")\r\n                            }\r\n                        ]\r\n                    };\r\n                    var copyJsonSignature = {\r\n                        label: \"COPY [flags] [ \\\"source\\\", ..., \\\"dest\\\" ]\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureCopy_Signature1\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"[flags]\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCopy_Signature1_Param0\")\r\n                            },\r\n                            {\r\n                                label: \"[\"\r\n                            },\r\n                            {\r\n                                label: \"\\\"source\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCopy_Signature1_Param2\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCopy_Signature1_Param3\")\r\n                            },\r\n                            {\r\n                                label: \"\\\"dest\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureCopy_Signature1_Param4\")\r\n                            },\r\n                            {\r\n                                label: \"]\"\r\n                            }\r\n                        ]\r\n                    };\r\n                    return this.getJSONInstructionSignatureHelp(document, copy, position, [copyJsonSignature], copyShellSignature, true, false, false, false);\r\n                case \"ENTRYPOINT\":\r\n                    var entrypoint = instruction;\r\n                    var entrypointJsonSignature = {\r\n                        label: \"ENTRYPOINT [ \\\"executable\\\", \\\"parameter\\\", ... ]\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureEntrypoint_Signature0\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"[\"\r\n                            },\r\n                            {\r\n                                label: \"\\\"executable\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureEntrypoint_Signature0_Param1\")\r\n                            },\r\n                            {\r\n                                label: \"\\\"parameter\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureEntrypoint_Signature0_Param2\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureEntrypoint_Signature0_Param3\")\r\n                            },\r\n                            {\r\n                                label: \"]\"\r\n                            }\r\n                        ]\r\n                    };\r\n                    var entrypointShellSignature = {\r\n                        label: \"ENTRYPOINT executable parameter ...\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureEntrypoint_Signature1\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"executable\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureEntrypoint_Signature1_Param0\")\r\n                            },\r\n                            {\r\n                                label: \"parameter\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureEntrypoint_Signature1_Param1\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureEntrypoint_Signature1_Param2\")\r\n                            }\r\n                        ]\r\n                    };\r\n                    return this.getJSONInstructionSignatureHelp(document, entrypoint, position, [entrypointJsonSignature], entrypointShellSignature, false, true, false, true);\r\n                case \"ENV\":\r\n                    var envSignatures = [\r\n                        {\r\n                            label: \"ENV key value\",\r\n                            documentation: this.documentation.getDocumentation(\"signatureEnv_Signature0\"),\r\n                            parameters: [\r\n                                {\r\n                                    label: \"key\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureEnv_Signature0_Param0\")\r\n                                },\r\n                                {\r\n                                    label: \"value\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureEnv_Signature0_Param1\")\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"ENV key=value\",\r\n                            documentation: this.documentation.getDocumentation(\"signatureEnv_Signature1\"),\r\n                            parameters: [\r\n                                {\r\n                                    label: \"key\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureEnv_Signature1_Param0\")\r\n                                },\r\n                                {\r\n                                    label: \"value\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureEnv_Signature1_Param1\")\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"ENV key=value key2=value2\",\r\n                            documentation: this.documentation.getDocumentation(\"signatureEnv_Signature2\"),\r\n                            parameters: [\r\n                                {\r\n                                    label: \"key\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureEnv_Signature2_Param0\")\r\n                                },\r\n                                {\r\n                                    label: \"value\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureEnv_Signature2_Param1\")\r\n                                },\r\n                                {\r\n                                    label: \"key2\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureEnv_Signature2_Param2\")\r\n                                },\r\n                                {\r\n                                    label: \"value2\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureEnv_Signature2_Param3\")\r\n                                }\r\n                            ]\r\n                        }\r\n                    ];\r\n                    return this.getPropertySignatureHelp(document, position, envSignatures, instruction.getProperties());\r\n                case \"EXPOSE\":\r\n                    var exposeSignatureHelp = {\r\n                        signatures: [\r\n                            {\r\n                                label: \"EXPOSE port ...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureExpose\"),\r\n                                parameters: [\r\n                                    {\r\n                                        label: \"port\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureExpose_Param0\")\r\n                                    },\r\n                                    {\r\n                                        label: \"...\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureExpose_Param1\")\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ],\r\n                        activeSignature: 0,\r\n                        activeParameter: 0\r\n                    };\r\n                    var exposeArgs = instruction.getArguments();\r\n                    if (exposeArgs.length > 0 && document.offsetAt(position) > document.offsetAt(exposeArgs[0].getRange().end)) {\r\n                        exposeSignatureHelp.activeParameter = 1;\r\n                    }\r\n                    return exposeSignatureHelp;\r\n                case \"FROM\":\r\n                    return this.getFromSignatureHelp(position, instruction);\r\n                case \"HEALTHCHECK\":\r\n                    var healthcheckCmdEmptySignature = {\r\n                        label: \"HEALTHCHECK [flags] CMD ...\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureHealthcheck_Signature0\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"CMD\"\r\n                            }\r\n                        ]\r\n                    };\r\n                    var healthcheckCmdNormalSignature = {\r\n                        label: \"HEALTHCHECK [flags] CMD ...\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureHealthcheck_Signature1\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"[flags]\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureHealthcheck_Signature1_Param0\")\r\n                            },\r\n                            {\r\n                                label: \"CMD\"\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureHealthcheck_Signature1_Param2\")\r\n                            }\r\n                        ]\r\n                    };\r\n                    var healthcheckNoneSignature = {\r\n                        label: \"HEALTHCHECK NONE\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureHealthcheck_Signature2\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"NONE\"\r\n                            }\r\n                        ]\r\n                    };\r\n                    var healthcheck = instruction;\r\n                    var flags = healthcheck.getFlags();\r\n                    for (var _a = 0, flags_1 = flags; _a < flags_1.length; _a++) {\r\n                        var flag_1 = flags_1[_a];\r\n                        var range = flag_1.getValueRange();\r\n                        if (range !== null && docker_1.Util.isInsideRange(position, range)) {\r\n                            switch (flag_1.getName()) {\r\n                                case \"interval\":\r\n                                    return {\r\n                                        signatures: [\r\n                                            {\r\n                                                label: \"HEALTHCHECK --interval=30s ...\",\r\n                                                documentation: this.documentation.getDocumentation(\"signatureHealthcheck\"),\r\n                                                parameters: [\r\n                                                    {\r\n                                                        label: \"30s\",\r\n                                                        documentation: this.documentation.getDocumentation(\"signatureHealthcheckFlagInterval_Param\")\r\n                                                    }\r\n                                                ]\r\n                                            }\r\n                                        ],\r\n                                        activeSignature: 0,\r\n                                        activeParameter: 0\r\n                                    };\r\n                                case \"retries\":\r\n                                    return {\r\n                                        signatures: [\r\n                                            {\r\n                                                label: \"HEALTHCHECK --retries=3 ...\",\r\n                                                documentation: this.documentation.getDocumentation(\"signatureHealthcheck\"),\r\n                                                parameters: [\r\n                                                    {\r\n                                                        label: \"3\",\r\n                                                        documentation: this.documentation.getDocumentation(\"signatureHealthcheckFlagRetries_Param\")\r\n                                                    }\r\n                                                ]\r\n                                            }\r\n                                        ],\r\n                                        activeSignature: 0,\r\n                                        activeParameter: 0\r\n                                    };\r\n                                case \"start-period\":\r\n                                    return {\r\n                                        signatures: [\r\n                                            {\r\n                                                label: \"HEALTHCHECK --start-period=5s ...\",\r\n                                                documentation: this.documentation.getDocumentation(\"signatureHealthcheck\"),\r\n                                                parameters: [\r\n                                                    {\r\n                                                        label: \"5s\",\r\n                                                        documentation: this.documentation.getDocumentation(\"signatureHealthcheckFlagStartPeriod_Param\")\r\n                                                    }\r\n                                                ]\r\n                                            }\r\n                                        ],\r\n                                        activeSignature: 0,\r\n                                        activeParameter: 0\r\n                                    };\r\n                                case \"timeout\":\r\n                                    return {\r\n                                        signatures: [\r\n                                            {\r\n                                                label: \"HEALTHCHECK --timeout=30s ...\",\r\n                                                documentation: this.documentation.getDocumentation(\"signatureHealthcheck\"),\r\n                                                parameters: [\r\n                                                    {\r\n                                                        label: \"30s\",\r\n                                                        documentation: this.documentation.getDocumentation(\"signatureHealthcheckFlagTimeout_Param\")\r\n                                                    }\r\n                                                ]\r\n                                            }\r\n                                        ],\r\n                                        activeSignature: 0,\r\n                                        activeParameter: 0\r\n                                    };\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    var healthcheckArgs = healthcheck.getArguments();\r\n                    if (flags.length == 0 && healthcheckArgs.length === 0) {\r\n                        // no flags or args, suggest both CMD and NONE\r\n                        return {\r\n                            signatures: [\r\n                                healthcheckCmdEmptySignature,\r\n                                healthcheckNoneSignature\r\n                            ],\r\n                            activeSignature: 0,\r\n                            activeParameter: 0\r\n                        };\r\n                    }\r\n                    var subcommand = healthcheck.getSubcommand();\r\n                    if (subcommand === null) {\r\n                        return {\r\n                            signatures: [\r\n                                healthcheckCmdNormalSignature\r\n                            ],\r\n                            activeSignature: 0,\r\n                            activeParameter: 0\r\n                        };\r\n                    }\r\n                    var beforeSubcommand = subcommand.isBefore(position);\r\n                    var afterSubcommand = subcommand.isAfter(position);\r\n                    var subcommandValue = subcommand.getValue();\r\n                    if (\"NONE\".indexOf(subcommandValue.toUpperCase()) === 0) {\r\n                        if (beforeSubcommand) {\r\n                            // after a NONE, nothing to show\r\n                            return null;\r\n                        }\r\n                        return {\r\n                            signatures: [\r\n                                healthcheckNoneSignature\r\n                            ],\r\n                            activeSignature: 0,\r\n                            activeParameter: 0\r\n                        };\r\n                    }\r\n                    var activeHealthcheckParameter = beforeSubcommand ? 2 : afterSubcommand ? 0 : 1;\r\n                    return {\r\n                        signatures: [\r\n                            healthcheckCmdNormalSignature\r\n                        ],\r\n                        activeSignature: 0,\r\n                        activeParameter: activeHealthcheckParameter\r\n                    };\r\n                case \"LABEL\":\r\n                    var labelSignatures = [\r\n                        {\r\n                            label: \"LABEL key value\",\r\n                            documentation: this.documentation.getDocumentation(\"signatureLabel_Signature0\"),\r\n                            parameters: [\r\n                                {\r\n                                    label: \"key\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureLabel_Signature0_Param0\")\r\n                                },\r\n                                {\r\n                                    label: \"value\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureLabel_Signature0_Param1\")\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"LABEL key=value\",\r\n                            documentation: this.documentation.getDocumentation(\"signatureLabel_Signature1\"),\r\n                            parameters: [\r\n                                {\r\n                                    label: \"key\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureLabel_Signature1_Param0\")\r\n                                },\r\n                                {\r\n                                    label: \"value\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureLabel_Signature1_Param1\")\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"LABEL key=value key2=value2\",\r\n                            documentation: this.documentation.getDocumentation(\"signatureLabel_Signature2\"),\r\n                            parameters: [\r\n                                {\r\n                                    label: \"key\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureLabel_Signature2_Param0\")\r\n                                },\r\n                                {\r\n                                    label: \"value\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureLabel_Signature2_Param1\")\r\n                                },\r\n                                {\r\n                                    label: \"key2\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureLabel_Signature2_Param2\")\r\n                                },\r\n                                {\r\n                                    label: \"value2\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureLabel_Signature2_Param3\")\r\n                                }\r\n                            ]\r\n                        }\r\n                    ];\r\n                    return this.getPropertySignatureHelp(document, position, labelSignatures, instruction.getProperties());\r\n                case \"MAINTAINER\":\r\n                    return {\r\n                        signatures: [\r\n                            {\r\n                                label: \"MAINTAINER name\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureMaintainer\"),\r\n                                parameters: [\r\n                                    {\r\n                                        label: \"name\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureMaintainer_Param\")\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ],\r\n                        activeSignature: 0,\r\n                        activeParameter: 0\r\n                    };\r\n                case \"ONBUILD\":\r\n                    var onbuildArgs = instruction.getArguments();\r\n                    if (onbuildArgs.length > 0 && onbuildArgs[0].isBefore(position)) {\r\n                        return null;\r\n                    }\r\n                    return {\r\n                        signatures: [\r\n                            {\r\n                                label: \"ONBUILD INSTRUCTION\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureOnbuild\"),\r\n                                parameters: [\r\n                                    {\r\n                                        label: \"INSTRUCTION\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureOnbuild_Param\")\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ],\r\n                        activeSignature: 0,\r\n                        activeParameter: 0\r\n                    };\r\n                case \"RUN\":\r\n                    var run_1 = instruction;\r\n                    var runShellSignature = {\r\n                        label: \"RUN command parameter ...\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureRun_Signature0\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"command\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureRun_Signature0_Param0\")\r\n                            },\r\n                            {\r\n                                label: \"parameter\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureRun_Signature0_Param1\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureRun_Signature0_Param2\")\r\n                            }\r\n                        ]\r\n                    };\r\n                    var runJsonSignature = {\r\n                        label: \"RUN [ \\\"command\\\", \\\"parameter\\\", ... ]\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureRun_Signature1\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"[\"\r\n                            },\r\n                            {\r\n                                label: \"\\\"command\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureRun_Signature1_Param1\")\r\n                            },\r\n                            {\r\n                                label: \"\\\"parameter\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureRun_Signature1_Param2\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureRun_Signature1_Param3\")\r\n                            },\r\n                            {\r\n                                label: \"]\"\r\n                            }\r\n                        ]\r\n                    };\r\n                    return this.getJSONInstructionSignatureHelp(document, run_1, position, [runJsonSignature], runShellSignature, false, false, false, true);\r\n                case \"SHELL\":\r\n                    var shell = instruction;\r\n                    var shellSignatureHelp = {\r\n                        signatures: [\r\n                            {\r\n                                label: \"SHELL [ \\\"executable\\\", \\\"parameter\\\", ... ]\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureShell\"),\r\n                                parameters: [\r\n                                    {\r\n                                        label: \"[\"\r\n                                    },\r\n                                    {\r\n                                        label: \"\\\"executable\\\"\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureShell_Param1\")\r\n                                    },\r\n                                    {\r\n                                        label: \"\\\"parameter\\\"\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureShell_Param2\")\r\n                                    },\r\n                                    {\r\n                                        label: \"...\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureShell_Param3\")\r\n                                    },\r\n                                    {\r\n                                        label: \"]\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ],\r\n                        activeSignature: 0,\r\n                        activeParameter: null\r\n                    };\r\n                    shellSignatureHelp.activeParameter = this.getJSONSignatureActiveParameter(document, shell, position, false, false, true);\r\n                    return shellSignatureHelp.activeParameter === -1 ? null : shellSignatureHelp;\r\n                case \"STOPSIGNAL\":\r\n                    return {\r\n                        signatures: [\r\n                            {\r\n                                label: \"STOPSIGNAL signal\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureStopsignal\"),\r\n                                parameters: [\r\n                                    {\r\n                                        label: \"signal\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureStopsignal_Param\")\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ],\r\n                        activeSignature: 0,\r\n                        activeParameter: 0\r\n                    };\r\n                case \"USER\":\r\n                    var userSignatureHelp = {\r\n                        signatures: [\r\n                            {\r\n                                label: \"USER user\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureUser_Signature0\"),\r\n                                parameters: [\r\n                                    {\r\n                                        label: \"user\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureUser_Signature0_Param\")\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: \"USER user:group\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureUser_Signature1\"),\r\n                                parameters: [\r\n                                    {\r\n                                        label: \"user\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureUser_Signature1_Param0\")\r\n                                    },\r\n                                    {\r\n                                        label: \"group\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureUser_Signature1_Param1\")\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: \"USER uid\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureUser_Signature2\"),\r\n                                parameters: [\r\n                                    {\r\n                                        label: \"uid\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureUser_Signature2_Param\")\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                label: \"USER uid:gid\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureUser_Signature3\"),\r\n                                parameters: [\r\n                                    {\r\n                                        label: \"uid\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureUser_Signature3_Param0\")\r\n                                    },\r\n                                    {\r\n                                        label: \"gid\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureUser_Signature3_Param1\")\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ],\r\n                        activeSignature: 0,\r\n                        activeParameter: 0\r\n                    };\r\n                    var userSeparatorIndex = instruction.getTextContent().indexOf(\":\");\r\n                    if (userSeparatorIndex !== -1) {\r\n                        userSignatureHelp = {\r\n                            signatures: [\r\n                                {\r\n                                    label: \"USER user:group\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureUser_Signature1\"),\r\n                                    parameters: [\r\n                                        {\r\n                                            label: \"user\",\r\n                                            documentation: this.documentation.getDocumentation(\"signatureUser_Signature1_Param0\")\r\n                                        },\r\n                                        {\r\n                                            label: \"group\",\r\n                                            documentation: this.documentation.getDocumentation(\"signatureUser_Signature1_Param1\")\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    label: \"USER uid:gid\",\r\n                                    documentation: this.documentation.getDocumentation(\"signatureUser_Signature3\"),\r\n                                    parameters: [\r\n                                        {\r\n                                            label: \"uid\",\r\n                                            documentation: this.documentation.getDocumentation(\"signatureUser_Signature3_Param0\")\r\n                                        },\r\n                                        {\r\n                                            label: \"gid\",\r\n                                            documentation: this.documentation.getDocumentation(\"signatureUser_Signature3_Param1\")\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ],\r\n                            activeSignature: 0,\r\n                            activeParameter: 0\r\n                        };\r\n                        if (document.offsetAt(position) > document.offsetAt(instruction.getRange().start) + userSeparatorIndex) {\r\n                            userSignatureHelp.activeParameter = 1;\r\n                        }\r\n                    }\r\n                    return userSignatureHelp;\r\n                case \"VOLUME\":\r\n                    var volume = instruction;\r\n                    var volumeJsonSignature = {\r\n                        label: \"VOLUME [ \\\"/vol\\\", ... ]\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureVolume_Signature1\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"[\"\r\n                            },\r\n                            {\r\n                                label: \"\\\"/vol\\\"\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureVolume_Signature1_Param1\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureVolume_Signature1_Param2\")\r\n                            },\r\n                            {\r\n                                label: \"]\"\r\n                            }\r\n                        ]\r\n                    };\r\n                    var volumeShellSignature = {\r\n                        label: \"VOLUME /vol ...\",\r\n                        documentation: this.documentation.getDocumentation(\"signatureVolume_Signature0\"),\r\n                        parameters: [\r\n                            {\r\n                                label: \"/vol\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureVolume_Signature0_Param0\")\r\n                            },\r\n                            {\r\n                                label: \"...\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureVolume_Signature0_Param1\")\r\n                            }\r\n                        ]\r\n                    };\r\n                    return this.getJSONInstructionSignatureHelp(document, volume, position, [volumeJsonSignature], volumeShellSignature, false, true, true, true);\r\n                case \"WORKDIR\":\r\n                    return {\r\n                        signatures: [\r\n                            {\r\n                                label: \"WORKDIR /the/workdir/path\",\r\n                                documentation: this.documentation.getDocumentation(\"signatureWorkdir\"),\r\n                                parameters: [\r\n                                    {\r\n                                        label: \"/the/workdir/path\",\r\n                                        documentation: this.documentation.getDocumentation(\"signatureWorkdir_Param\")\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ],\r\n                        activeSignature: 0,\r\n                        activeParameter: 0\r\n                    };\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    DockerSignatures.prototype.getFromSignatureHelp = function (position, from) {\r\n        var baseImage = {\r\n            label: \"FROM baseImage\",\r\n            documentation: this.documentation.getDocumentation(\"signatureFrom_Signature0\"),\r\n            parameters: [\r\n                {\r\n                    label: \"baseImage\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature0_Param\")\r\n                }\r\n            ]\r\n        };\r\n        var baseImageTag = {\r\n            label: \"FROM baseImage:tag\",\r\n            documentation: this.documentation.getDocumentation(\"signatureFrom_Signature1\"),\r\n            parameters: [\r\n                {\r\n                    label: \"baseImage\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature1_Param0\")\r\n                },\r\n                {\r\n                    label: \"tag\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature1_Param1\")\r\n                }\r\n            ]\r\n        };\r\n        var baseImageDigest = {\r\n            label: \"FROM baseImage@digest\",\r\n            documentation: this.documentation.getDocumentation(\"signatureFrom_Signature2\"),\r\n            parameters: [\r\n                {\r\n                    label: \"baseImage\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature2_Param0\")\r\n                },\r\n                {\r\n                    label: \"digest\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature2_Param1\")\r\n                }\r\n            ]\r\n        };\r\n        var baseImageStage = {\r\n            label: \"FROM baseImage AS stage\",\r\n            documentation: this.documentation.getDocumentation(\"signatureFrom_Signature3\"),\r\n            parameters: [\r\n                {\r\n                    label: \"baseImage\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature3_Param0\")\r\n                },\r\n                {\r\n                    label: \"AS\",\r\n                },\r\n                {\r\n                    label: \"stage\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature3_Param2\")\r\n                }\r\n            ]\r\n        };\r\n        var baseImageTagStage = {\r\n            label: \"FROM baseImage:tag AS stage\",\r\n            documentation: this.documentation.getDocumentation(\"signatureFrom_Signature4\"),\r\n            parameters: [\r\n                {\r\n                    label: \"baseImage\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature4_Param0\")\r\n                },\r\n                {\r\n                    label: \"tag\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature4_Param1\")\r\n                },\r\n                {\r\n                    label: \"AS\",\r\n                },\r\n                {\r\n                    label: \"stage\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature4_Param3\")\r\n                }\r\n            ]\r\n        };\r\n        var baseImageDigestStage = {\r\n            label: \"FROM baseImage@digest AS stage\",\r\n            documentation: this.documentation.getDocumentation(\"signatureFrom_Signature5\"),\r\n            parameters: [\r\n                {\r\n                    label: \"baseImage\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature5_Param0\")\r\n                },\r\n                {\r\n                    label: \"digest\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature5_Param1\")\r\n                },\r\n                {\r\n                    label: \"AS\",\r\n                },\r\n                {\r\n                    label: \"stage\",\r\n                    documentation: this.documentation.getDocumentation(\"signatureFrom_Signature5_Param3\")\r\n                }\r\n            ]\r\n        };\r\n        var fromSignatures = [\r\n            baseImage, baseImageTag, baseImageDigest,\r\n            baseImageStage, baseImageTagStage, baseImageDigestStage\r\n        ];\r\n        var args = from.getArguments();\r\n        if (args.length >= 3 && args[2].isBefore(position)) {\r\n            return null;\r\n        }\r\n        else if (args.length === 0) {\r\n            return {\r\n                signatures: fromSignatures,\r\n                activeSignature: 0,\r\n                activeParameter: 0\r\n            };\r\n        }\r\n        var image = args[0].getValue();\r\n        var digest = image.indexOf('@') !== -1;\r\n        var tag = !digest && image.indexOf(':') !== -1;\r\n        var stagesOnly = args.length > 1 || args[0].isBefore(position);\r\n        return {\r\n            signatures: this.getFromSignatures(fromSignatures, tag, digest, stagesOnly),\r\n            activeSignature: 0,\r\n            activeParameter: this.getFromActiveParameter(position, from, tag, digest, args)\r\n        };\r\n    };\r\n    DockerSignatures.prototype.getFromSignatures = function (fromSignatures, tag, digest, stagesOnly) {\r\n        if (digest) {\r\n            return stagesOnly ? [fromSignatures[5]] : [fromSignatures[2], fromSignatures[5]];\r\n        }\r\n        else if (tag) {\r\n            return stagesOnly ? [fromSignatures[4]] : [fromSignatures[1], fromSignatures[4]];\r\n        }\r\n        return stagesOnly ? [fromSignatures[3], fromSignatures[4], fromSignatures[5]] : fromSignatures;\r\n    };\r\n    DockerSignatures.prototype.getFromActiveParameter = function (position, from, tag, digest, args) {\r\n        var inTag = tag && docker_1.Util.isInsideRange(position, from.getImageTagRange());\r\n        var inDigest = digest && docker_1.Util.isInsideRange(position, from.getImageDigestRange());\r\n        if (args.length === 1) {\r\n            if (args[0].isBefore(position)) {\r\n                return tag || digest ? 2 : 1;\r\n            }\r\n            return inTag || inDigest ? 1 : 0;\r\n        }\r\n        else if (args.length === 2) {\r\n            if (args[1].isBefore(position)) {\r\n                return tag || digest ? 3 : 2;\r\n            }\r\n            else if (docker_1.Util.isInsideRange(position, args[1].getRange()) || args[0].isBefore(position)) {\r\n                return tag || digest ? 2 : 1;\r\n            }\r\n            return inTag || inDigest ? 1 : 0;\r\n        }\r\n        if (docker_1.Util.isInsideRange(position, args[2].getRange()) || args[1].isBefore(position)) {\r\n            return tag || digest ? 3 : 2;\r\n        }\r\n        else if (docker_1.Util.isInsideRange(position, args[1].getRange()) || args[0].isBefore(position)) {\r\n            return tag || digest ? 2 : 1;\r\n        }\r\n        return inTag || inDigest ? 1 : 0;\r\n    };\r\n    DockerSignatures.prototype.getJSONInstructionSignatureHelp = function (document, instruction, position, jsonSignatures, shellSignature, hasFlags, jsonFirst, singleParameter, finalRepeats) {\r\n        var activeParameter = this.getJSONSignatureActiveParameter(document, instruction, position, hasFlags, singleParameter, finalRepeats);\r\n        if (activeParameter === -1) {\r\n            activeParameter = this.getSignatureActiveParameter(instruction, position, hasFlags, singleParameter ? 1 : 2, finalRepeats);\r\n            return {\r\n                signatures: [shellSignature],\r\n                activeSignature: 0,\r\n                activeParameter: activeParameter\r\n            };\r\n        }\r\n        else if (activeParameter === 0) {\r\n            if (jsonFirst) {\r\n                jsonSignatures.push(shellSignature);\r\n                return {\r\n                    signatures: jsonSignatures,\r\n                    activeSignature: 0,\r\n                    activeParameter: 0\r\n                };\r\n            }\r\n            jsonSignatures.unshift(shellSignature);\r\n            return {\r\n                signatures: jsonSignatures,\r\n                activeSignature: 0,\r\n                activeParameter: 0\r\n            };\r\n        }\r\n        else if (activeParameter === 1 && hasFlags) {\r\n            if (jsonFirst) {\r\n                jsonSignatures.push(shellSignature);\r\n                return {\r\n                    signatures: jsonSignatures,\r\n                    activeSignature: 0,\r\n                    activeParameter: 1\r\n                };\r\n            }\r\n            jsonSignatures.unshift(shellSignature);\r\n            return {\r\n                signatures: jsonSignatures,\r\n                activeSignature: 0,\r\n                activeParameter: 1\r\n            };\r\n        }\r\n        return {\r\n            signatures: jsonSignatures,\r\n            activeSignature: 0,\r\n            activeParameter: activeParameter\r\n        };\r\n    };\r\n    DockerSignatures.prototype.getJSONSignatureActiveParameter = function (document, instruction, position, hasFlags, singleParameter, finalRepeats) {\r\n        var flagsOffset = hasFlags ? 1 : 0;\r\n        if (hasFlags) {\r\n            var flags = instruction.getFlags();\r\n            if (flags.length > 0) {\r\n                var flagPosition = flags[flags.length - 1].getRange().end;\r\n                if (docker_1.Util.positionBefore(position, flagPosition) || docker_1.Util.positionEquals(position, flagPosition)) {\r\n                    return 0;\r\n                }\r\n            }\r\n        }\r\n        var closingBracket = instruction.getClosingBracket();\r\n        if (closingBracket) {\r\n            var range = closingBracket.getRange();\r\n            if (range.end.line === position.line && range.end.character === position.character) {\r\n                if (singleParameter) {\r\n                    return 3 + flagsOffset;\r\n                }\r\n                return 4 + flagsOffset;\r\n            }\r\n            else if (closingBracket.isBefore(position)) {\r\n                return -1;\r\n            }\r\n        }\r\n        var jsonStrings = instruction.getJSONStrings();\r\n        if (!singleParameter && jsonStrings.length > 1 && jsonStrings[1].isBefore(position)) {\r\n            if (jsonStrings.length === 2) {\r\n                return 3 + flagsOffset;\r\n            }\r\n            if (finalRepeats || docker_1.Util.isInsideRange(position, jsonStrings[jsonStrings.length - 1].getRange())) {\r\n                return 3 + flagsOffset;\r\n            }\r\n            return 2 + flagsOffset;\r\n        }\r\n        if (jsonStrings.length > 0 && jsonStrings[0].isBefore(position)) {\r\n            if (jsonStrings.length > 2) {\r\n                return 2 + flagsOffset;\r\n            }\r\n            var start = document.offsetAt(jsonStrings[0].getRange().end);\r\n            var end = document.offsetAt(position);\r\n            var between = document.getText().substring(start, end);\r\n            if (between.indexOf(',') === -1) {\r\n                return 1 + flagsOffset;\r\n            }\r\n            if (finalRepeats) {\r\n                return 2 + flagsOffset;\r\n            }\r\n            return 3 + flagsOffset;\r\n        }\r\n        var openingBracket = instruction.getOpeningBracket();\r\n        if (openingBracket) {\r\n            var range = openingBracket.getRange();\r\n            if ((range.end.line === position.line && range.end.character === position.character) || openingBracket.isBefore(position)) {\r\n                return 1 + flagsOffset;\r\n            }\r\n            return 0 + flagsOffset;\r\n        }\r\n        else if (instruction.getArguments().length === 0) {\r\n            return 0 + flagsOffset;\r\n        }\r\n        return -1;\r\n    };\r\n    DockerSignatures.prototype.getSignatureActiveParameter = function (instruction, position, hasFlags, max, finalRepeats) {\r\n        var flagsOffset = hasFlags ? 1 : 0;\r\n        var args = instruction.getArguments();\r\n        if (finalRepeats) {\r\n            for (var i = args.length - 1; i >= 0; i--) {\r\n                if (args[i].isBefore(position)) {\r\n                    return Math.min(i + 1, max) + flagsOffset;\r\n                }\r\n                else if (docker_1.Util.isInsideRange(position, args[i].getRange())) {\r\n                    return Math.min(i, max) + flagsOffset;\r\n                }\r\n            }\r\n        }\r\n        switch (args.length) {\r\n            case 1:\r\n                if (args[0].isBefore(position)) {\r\n                    return 2 + flagsOffset;\r\n                }\r\n                return 0 + flagsOffset;\r\n            default:\r\n                if (args[args.length - 1].isBefore(position) || docker_1.Util.isInsideRange(position, args[args.length - 1].getRange())) {\r\n                    return 2 + flagsOffset;\r\n                }\r\n                else if (args[0].isBefore(position)) {\r\n                    return 1 + flagsOffset;\r\n                }\r\n                return 0 + flagsOffset;\r\n        }\r\n    };\r\n    DockerSignatures.prototype.getPropertySignatureHelp = function (document, position, signatures, properties) {\r\n        return {\r\n            signatures: this.getPropertySignatures(document, position, signatures, properties),\r\n            activeSignature: 0,\r\n            activeParameter: this.getPropertySignatureActiveParameter(document, position, properties)\r\n        };\r\n    };\r\n    DockerSignatures.prototype.getPropertySignatures = function (document, position, signatures, properties) {\r\n        if (properties.length === 0) {\r\n            return signatures;\r\n        }\r\n        else if (properties.length === 1) {\r\n            var valueRange = properties[0].getValueRange();\r\n            if (valueRange === null) {\r\n                return DockerSignatures.isNameBefore(properties[0], position) ? [signatures[0]] : signatures;\r\n            }\r\n            var delimiter = document.getText().substring(document.offsetAt(properties[0].getNameRange().end), document.offsetAt(valueRange.start));\r\n            if (delimiter.indexOf('=') === -1) {\r\n                return [signatures[0]];\r\n            }\r\n            else if (DockerSignatures.isValueBefore(properties[0], position)) {\r\n                return [signatures[2]];\r\n            }\r\n        }\r\n        else {\r\n            return [signatures[2]];\r\n        }\r\n        return [signatures[1], signatures[2]];\r\n    };\r\n    DockerSignatures.prototype.getPropertySignatureActiveParameter = function (document, position, properties) {\r\n        if (properties.length === 0) {\r\n            return 0;\r\n        }\r\n        for (var i = properties.length - 1; i > 0; i--) {\r\n            if (DockerSignatures.isInValue(properties[i], position)) {\r\n                return 3;\r\n            }\r\n            else if (DockerSignatures.isNameBefore(properties[i], position) || DockerSignatures.isInName(properties[i], position)) {\r\n                return 2;\r\n            }\r\n        }\r\n        if (DockerSignatures.isInValue(properties[0], position)) {\r\n            return 1;\r\n        }\r\n        else if (DockerSignatures.isValueBefore(properties[0], position)) {\r\n            var delimiter = document.getText().substring(document.offsetAt(properties[0].getNameRange().end), document.offsetAt(properties[0].getValueRange().start));\r\n            return delimiter.indexOf('=') === -1 ? 1 : 2;\r\n        }\r\n        return DockerSignatures.isNameBefore(properties[0], position) ? 1 : 0;\r\n    };\r\n    DockerSignatures.isInName = function (property, position) {\r\n        return docker_1.Util.isInsideRange(position, property.getNameRange());\r\n    };\r\n    DockerSignatures.isNameBefore = function (property, position) {\r\n        var range = property.getNameRange();\r\n        if (DockerSignatures.isInName(property, position)) {\r\n            return false;\r\n        }\r\n        else if (range.start.line < position.line) {\r\n            return true;\r\n        }\r\n        return range.start.line === position.line ? range.end.character < position.character : false;\r\n    };\r\n    DockerSignatures.isInValue = function (property, position) {\r\n        var range = property.getValueRange();\r\n        return range ? docker_1.Util.isInsideRange(position, range) : false;\r\n    };\r\n    DockerSignatures.isValueBefore = function (property, position) {\r\n        var range = property.getValueRange();\r\n        if (range === null) {\r\n            return false;\r\n        }\r\n        else if (range.start.line < position.line) {\r\n            return true;\r\n        }\r\n        else if (range.start.line === position.line) {\r\n            if (range.start.line === range.end.line) {\r\n                return range.end.character < position.character;\r\n            }\r\n            return range.start.character < position.character;\r\n        }\r\n        return false;\r\n    };\r\n    return DockerSignatures;\r\n}());\r\nexports.DockerSignatures = DockerSignatures;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerSignatures.js\n// module id = 138\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Remy Suen. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nvar dockerfile_ast_1 = require(\"dockerfile-ast\");\r\nvar DockerSymbols = /** @class */ (function () {\r\n    function DockerSymbols() {\r\n    }\r\n    DockerSymbols.prototype.createSymbolInformation = function (name, textDocumentURI, range, kind) {\r\n        return {\r\n            name: name,\r\n            location: {\r\n                uri: textDocumentURI,\r\n                range: range\r\n            },\r\n            kind: kind\r\n        };\r\n    };\r\n    DockerSymbols.prototype.parseSymbolInformation = function (textDocument, content) {\r\n        var dockerfile = dockerfile_ast_1.DockerfileParser.parse(content);\r\n        var directive = dockerfile.getDirective();\r\n        var symbols = [];\r\n        if (directive !== null) {\r\n            symbols.push(this.createSymbolInformation(directive.getName(), textDocument.uri, directive.getNameRange(), vscode_languageserver_types_1.SymbolKind.Property));\r\n        }\r\n        for (var _i = 0, _a = dockerfile.getInstructions(); _i < _a.length; _i++) {\r\n            var instruction = _a[_i];\r\n            symbols.push(this.createSymbolInformation(instruction.getInstruction(), textDocument.uri, instruction.getInstructionRange(), vscode_languageserver_types_1.SymbolKind.Function));\r\n        }\r\n        return symbols;\r\n    };\r\n    return DockerSymbols;\r\n}());\r\nexports.DockerSymbols = DockerSymbols;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/dockerSymbols.js\n// module id = 139\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nvar DockerfileUtils = require(\"dockerfile-utils\");\r\nvar dockerAssist_1 = require(\"./dockerAssist\");\r\nvar dockerRegistryClient_1 = require(\"./dockerRegistryClient\");\r\nvar dockerCommands_1 = require(\"./dockerCommands\");\r\nvar dockerDefinition_1 = require(\"./dockerDefinition\");\r\nvar dockerHighlight_1 = require(\"./dockerHighlight\");\r\nvar dockerSymbols_1 = require(\"./dockerSymbols\");\r\nvar dockerSignatures_1 = require(\"./dockerSignatures\");\r\nvar dockerLinks_1 = require(\"./dockerLinks\");\r\nvar dockerPlainText_1 = require(\"./dockerPlainText\");\r\nvar dockerRename_1 = require(\"./dockerRename\");\r\nvar dockerHover_1 = require(\"./dockerHover\");\r\nvar dockerMarkdown_1 = require(\"./dockerMarkdown\");\r\nvar dockerFormatter_1 = require(\"./dockerFormatter\");\r\nvar LanguageService = /** @class */ (function () {\r\n    function LanguageService() {\r\n        this.markdownDocumentation = new dockerMarkdown_1.MarkdownDocumentation();\r\n    }\r\n    LanguageService.prototype.setLogger = function (logger) {\r\n        this.logger = logger;\r\n    };\r\n    LanguageService.prototype.computeCodeActions = function (textDocument, range, context) {\r\n        var dockerCommands = new dockerCommands_1.DockerCommands();\r\n        return dockerCommands.analyzeDiagnostics(context.diagnostics, textDocument.uri);\r\n    };\r\n    LanguageService.prototype.computeLinks = function (content) {\r\n        var dockerLinks = new dockerLinks_1.DockerLinks();\r\n        return dockerLinks.getLinks(content);\r\n    };\r\n    LanguageService.prototype.createWorkspaceEdit = function (content, command, args) {\r\n        var dockerCommands = new dockerCommands_1.DockerCommands();\r\n        return dockerCommands.createWorkspaceEdit(content, command, args);\r\n    };\r\n    LanguageService.prototype.computeCompletionItems = function (content, position, snippetSupport) {\r\n        var document = vscode_languageserver_types_1.TextDocument.create(\"\", \"\", 0, content);\r\n        var dockerAssist = new dockerAssist_1.DockerAssist(document, snippetSupport, new dockerRegistryClient_1.DockerRegistryClient(this.logger));\r\n        return dockerAssist.computeProposals(position);\r\n    };\r\n    LanguageService.prototype.resolveCompletionItem = function (item) {\r\n        if (!item.documentation) {\r\n            var dockerPlainText = new dockerPlainText_1.PlainTextDocumentation();\r\n            item.documentation = dockerPlainText.getDocumentation(item.data);\r\n        }\r\n        return item;\r\n    };\r\n    LanguageService.prototype.computeDefinition = function (textDocument, content, position) {\r\n        var dockerDefinition = new dockerDefinition_1.DockerDefinition();\r\n        return dockerDefinition.computeDefinition(textDocument, content, position);\r\n    };\r\n    LanguageService.prototype.computeHighlightRanges = function (textDocument, content, position) {\r\n        var dockerHighlight = new dockerHighlight_1.DockerHighlight();\r\n        return dockerHighlight.computeHighlightRanges(textDocument, content, position);\r\n    };\r\n    LanguageService.prototype.computeHover = function (content, position) {\r\n        var dockerHover = new dockerHover_1.DockerHover(this.markdownDocumentation);\r\n        return dockerHover.onHover(content, position);\r\n    };\r\n    LanguageService.prototype.computeSymbols = function (textDocument, content) {\r\n        var dockerSymbols = new dockerSymbols_1.DockerSymbols();\r\n        return dockerSymbols.parseSymbolInformation(textDocument, content);\r\n    };\r\n    LanguageService.prototype.computeSignatureHelp = function (content, position) {\r\n        var dockerSignature = new dockerSignatures_1.DockerSignatures();\r\n        return dockerSignature.computeSignatures(content, position);\r\n    };\r\n    LanguageService.prototype.computeRename = function (textDocument, content, position, newName) {\r\n        var dockerRename = new dockerRename_1.DockerRename();\r\n        return dockerRename.rename(textDocument, content, position, newName);\r\n    };\r\n    LanguageService.prototype.validate = function (content, settings) {\r\n        return DockerfileUtils.validate(content);\r\n    };\r\n    LanguageService.prototype.format = function (content, options) {\r\n        return DockerfileUtils.format(content, options);\r\n    };\r\n    LanguageService.prototype.formatRange = function (content, range, options) {\r\n        var dockerFormat = new dockerFormatter_1.DockerFormatter();\r\n        return dockerFormat.formatRange(content, range, options);\r\n    };\r\n    LanguageService.prototype.formatOnType = function (content, position, ch, options) {\r\n        var dockerFormat = new dockerFormatter_1.DockerFormatter();\r\n        return dockerFormat.formatOnType(content, position, ch, options);\r\n    };\r\n    return LanguageService;\r\n}());\r\nexports.LanguageService = LanguageService;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dockerfile-language-service/lib/languageService.js\n// module id = 140\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/url/util.js\n// module id = 141\n// module chunks = 0","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/util-deprecate/browser.js\n// module id = 142\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst protocol_1 = require(\"./protocol\");\nconst is = require(\"./utils/is\");\nfunction createConnection(connection, errorHandler, closeHandler) {\n    connection.onError((data) => { errorHandler(data[0], data[1], data[2]); });\n    connection.onClose(closeHandler);\n    let result = {\n        listen: () => connection.listen(),\n        sendRequest: (type, ...params) => connection.sendRequest(is.string(type) ? type : type.method, ...params),\n        onRequest: (type, handler) => connection.onRequest(is.string(type) ? type : type.method, handler),\n        sendNotification: (type, params) => connection.sendNotification(is.string(type) ? type : type.method, params),\n        onNotification: (type, handler) => connection.onNotification(is.string(type) ? type : type.method, handler),\n        trace: (value, tracer, sendNotification = false) => connection.trace(value, tracer, sendNotification),\n        initialize: (params) => connection.sendRequest(protocol_1.InitializeRequest.type, params),\n        shutdown: () => connection.sendRequest(protocol_1.ShutdownRequest.type, undefined),\n        exit: () => connection.sendNotification(protocol_1.ExitNotification.type),\n        onLogMessage: (handler) => connection.onNotification(protocol_1.LogMessageNotification.type, handler),\n        onShowMessage: (handler) => connection.onNotification(protocol_1.ShowMessageNotification.type, handler),\n        onTelemetry: (handler) => connection.onNotification(protocol_1.TelemetryEventNotification.type, handler),\n        didChangeConfiguration: (params) => connection.sendNotification(protocol_1.DidChangeConfigurationNotification.type, params),\n        didChangeWatchedFiles: (params) => connection.sendNotification(protocol_1.DidChangeWatchedFilesNotification.type, params),\n        didOpenTextDocument: (params) => connection.sendNotification(protocol_1.DidOpenTextDocumentNotification.type, params),\n        didChangeTextDocument: (params) => connection.sendNotification(protocol_1.DidChangeTextDocumentNotification.type, params),\n        didCloseTextDocument: (params) => connection.sendNotification(protocol_1.DidCloseTextDocumentNotification.type, params),\n        didSaveTextDocument: (params) => connection.sendNotification(protocol_1.DidSaveTextDocumentNotification.type, params),\n        onDiagnostics: (handler) => connection.onNotification(protocol_1.PublishDiagnosticsNotification.type, handler),\n        dispose: () => connection.dispose()\n    };\n    return result;\n}\nexports.createConnection = createConnection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-base-languageclient/lib/connection.js\n// module id = 143\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.timeout = undefined;\n        this.completionPromise = undefined;\n        this.onSuccess = undefined;\n        this.task = undefined;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        if (delay >= 0) {\n            this.cancelTimeout();\n        }\n        if (!this.completionPromise) {\n            this.completionPromise = new Promise((resolve) => {\n                this.onSuccess = resolve;\n            }).then(() => {\n                this.completionPromise = undefined;\n                this.onSuccess = undefined;\n                var result = this.task();\n                this.task = undefined;\n                return result;\n            });\n        }\n        if (delay >= 0 || this.timeout === void 0) {\n            this.timeout = setTimeout(() => {\n                this.timeout = undefined;\n                this.onSuccess(undefined);\n            }, delay >= 0 ? delay : this.defaultDelay);\n        }\n        return this.completionPromise;\n    }\n    forceDelivery() {\n        if (!this.completionPromise) {\n            return undefined;\n        }\n        this.cancelTimeout();\n        let result = this.task();\n        this.completionPromise = undefined;\n        this.onSuccess = undefined;\n        this.task = undefined;\n        return result;\n    }\n    isTriggered() {\n        return this.timeout !== void 0;\n    }\n    cancel() {\n        this.cancelTimeout();\n        this.completionPromise = undefined;\n    }\n    cancelTimeout() {\n        if (this.timeout !== void 0) {\n            clearTimeout(this.timeout);\n            this.timeout = undefined;\n        }\n    }\n}\nexports.Delayer = Delayer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-base-languageclient/lib/utils/async.js\n// module id = 144\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ValueUUID {\n    constructor(_value) {\n        this._value = _value;\n        // empty\n    }\n    asHex() {\n        return this._value;\n    }\n    equals(other) {\n        return this.asHex() === other.asHex();\n    }\n}\nclass V4UUID extends ValueUUID {\n    constructor() {\n        super([\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            '4',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._oneOf(V4UUID._timeHighBits),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n        ].join(''));\n    }\n    static _oneOf(array) {\n        return array[Math.floor(array.length * Math.random())];\n    }\n    static _randomHex() {\n        return V4UUID._oneOf(V4UUID._chars);\n    }\n}\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\n/**\n * An empty UUID that contains only zeros.\n */\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\nfunction v4() {\n    return new V4UUID();\n}\nexports.v4 = v4;\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nfunction isUUID(value) {\n    return _UUIDPattern.test(value);\n}\nexports.isUUID = isUUID;\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nfunction parse(value) {\n    if (!isUUID(value)) {\n        throw new Error('invalid uuid');\n    }\n    return new ValueUUID(value);\n}\nexports.parse = parse;\nfunction generateUuid() {\n    return v4().asHex();\n}\nexports.generateUuid = generateUuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-base-languageclient/lib/utils/uuid.js\n// module id = 145\n// module chunks = 0","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar events_1 = require(\"./events\");\r\nvar Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nvar shortcutEvent = Object.freeze(function (callback, context) {\r\n    var handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose: function () { clearTimeout(handle); } };\r\n});\r\nvar MutableToken = /** @class */ (function () {\r\n    function MutableToken() {\r\n        this._isCancelled = false;\r\n    }\r\n    MutableToken.prototype.cancel = function () {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this._emitter = undefined;\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\r\n        get: function () {\r\n            return this._isCancelled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\r\n        get: function () {\r\n            if (this._isCancelled) {\r\n                return shortcutEvent;\r\n            }\r\n            if (!this._emitter) {\r\n                this._emitter = new events_1.Emitter();\r\n            }\r\n            return this._emitter.event;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return MutableToken;\r\n}());\r\nvar CancellationTokenSource = /** @class */ (function () {\r\n    function CancellationTokenSource() {\r\n    }\r\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\r\n        get: function () {\r\n            if (!this._token) {\r\n                // be lazy and create the token only when\r\n                // actually needed\r\n                this._token = new MutableToken();\r\n            }\r\n            return this._token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CancellationTokenSource.prototype.cancel = function () {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    };\r\n    CancellationTokenSource.prototype.dispose = function () {\r\n        this.cancel();\r\n    };\r\n    return CancellationTokenSource;\r\n}());\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-jsonrpc/lib/cancellation.js\n// module id = 146\n// module chunks = 0","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nvar LinkedMap = /** @class */ (function () {\r\n    function LinkedMap() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    LinkedMap.prototype.clear = function () {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    };\r\n    LinkedMap.prototype.isEmpty = function () {\r\n        return !this._head && !this._tail;\r\n    };\r\n    Object.defineProperty(LinkedMap.prototype, \"size\", {\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinkedMap.prototype.has = function (key) {\r\n        return this._map.has(key);\r\n    };\r\n    LinkedMap.prototype.get = function (key) {\r\n        var item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    };\r\n    LinkedMap.prototype.set = function (key, value, touch) {\r\n        if (touch === void 0) { touch = Touch.None; }\r\n        var item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key: key, value: value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    };\r\n    LinkedMap.prototype.delete = function (key) {\r\n        var item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    };\r\n    LinkedMap.prototype.shift = function () {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        var item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    };\r\n    LinkedMap.prototype.forEach = function (callbackfn, thisArg) {\r\n        var current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    };\r\n    LinkedMap.prototype.forEachReverse = function (callbackfn, thisArg) {\r\n        var current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    };\r\n    LinkedMap.prototype.values = function () {\r\n        var result = [];\r\n        var current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    };\r\n    LinkedMap.prototype.keys = function () {\r\n        var result = [];\r\n        var current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    };\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    LinkedMap.prototype.addItemFirst = function (item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    };\r\n    LinkedMap.prototype.addItemLast = function (item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    };\r\n    LinkedMap.prototype.removeItem = function (item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    };\r\n    LinkedMap.prototype.touch = function (item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    };\r\n    return LinkedMap;\r\n}());\r\nexports.LinkedMap = LinkedMap;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-jsonrpc/lib/linkedMap.js\n// module id = 147\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * A error object return in a response in case a request\r\n * has failed.\r\n */\r\nvar ResponseError = /** @class */ (function (_super) {\r\n    __extends(ResponseError, _super);\r\n    function ResponseError(code, message, data) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        if (data !== void 0) {\r\n            _this.data = data;\r\n        }\r\n        Object.setPrototypeOf(_this, ResponseError.prototype);\r\n        return _this;\r\n    }\r\n    ResponseError.prototype.toJson = function () {\r\n        var result = {\r\n            code: this.code,\r\n            message: this.message\r\n        };\r\n        if (this.data !== void 0) {\r\n            result.data = this.data;\r\n        }\r\n        ;\r\n        return result;\r\n    };\r\n    return ResponseError;\r\n}(Error));\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nvar AbstractMessageType = /** @class */ (function () {\r\n    function AbstractMessageType(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    Object.defineProperty(AbstractMessageType.prototype, \"method\", {\r\n        get: function () {\r\n            return this._method;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AbstractMessageType.prototype, \"numberOfParams\", {\r\n        get: function () {\r\n            return this._numberOfParams;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AbstractMessageType;\r\n}());\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n */\r\nvar RequestType0 = /** @class */ (function (_super) {\r\n    __extends(RequestType0, _super);\r\n    function RequestType0(method) {\r\n        var _this = _super.call(this, method, 0) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType0;\r\n}(AbstractMessageType));\r\nexports.RequestType0 = RequestType0;\r\nvar RequestType = /** @class */ (function (_super) {\r\n    __extends(RequestType, _super);\r\n    function RequestType(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType;\r\n}(AbstractMessageType));\r\nexports.RequestType = RequestType;\r\nvar RequestType1 = /** @class */ (function (_super) {\r\n    __extends(RequestType1, _super);\r\n    function RequestType1(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType1;\r\n}(AbstractMessageType));\r\nexports.RequestType1 = RequestType1;\r\nvar RequestType2 = /** @class */ (function (_super) {\r\n    __extends(RequestType2, _super);\r\n    function RequestType2(method) {\r\n        var _this = _super.call(this, method, 2) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType2;\r\n}(AbstractMessageType));\r\nexports.RequestType2 = RequestType2;\r\nvar RequestType3 = /** @class */ (function (_super) {\r\n    __extends(RequestType3, _super);\r\n    function RequestType3(method) {\r\n        var _this = _super.call(this, method, 3) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType3;\r\n}(AbstractMessageType));\r\nexports.RequestType3 = RequestType3;\r\nvar RequestType4 = /** @class */ (function (_super) {\r\n    __extends(RequestType4, _super);\r\n    function RequestType4(method) {\r\n        var _this = _super.call(this, method, 4) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType4;\r\n}(AbstractMessageType));\r\nexports.RequestType4 = RequestType4;\r\nvar RequestType5 = /** @class */ (function (_super) {\r\n    __extends(RequestType5, _super);\r\n    function RequestType5(method) {\r\n        var _this = _super.call(this, method, 5) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType5;\r\n}(AbstractMessageType));\r\nexports.RequestType5 = RequestType5;\r\nvar RequestType6 = /** @class */ (function (_super) {\r\n    __extends(RequestType6, _super);\r\n    function RequestType6(method) {\r\n        var _this = _super.call(this, method, 6) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType6;\r\n}(AbstractMessageType));\r\nexports.RequestType6 = RequestType6;\r\nvar RequestType7 = /** @class */ (function (_super) {\r\n    __extends(RequestType7, _super);\r\n    function RequestType7(method) {\r\n        var _this = _super.call(this, method, 7) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType7;\r\n}(AbstractMessageType));\r\nexports.RequestType7 = RequestType7;\r\nvar RequestType8 = /** @class */ (function (_super) {\r\n    __extends(RequestType8, _super);\r\n    function RequestType8(method) {\r\n        var _this = _super.call(this, method, 8) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType8;\r\n}(AbstractMessageType));\r\nexports.RequestType8 = RequestType8;\r\nvar RequestType9 = /** @class */ (function (_super) {\r\n    __extends(RequestType9, _super);\r\n    function RequestType9(method) {\r\n        var _this = _super.call(this, method, 9) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return RequestType9;\r\n}(AbstractMessageType));\r\nexports.RequestType9 = RequestType9;\r\nvar NotificationType = /** @class */ (function (_super) {\r\n    __extends(NotificationType, _super);\r\n    function NotificationType(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType;\r\n}(AbstractMessageType));\r\nexports.NotificationType = NotificationType;\r\nvar NotificationType0 = /** @class */ (function (_super) {\r\n    __extends(NotificationType0, _super);\r\n    function NotificationType0(method) {\r\n        var _this = _super.call(this, method, 0) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType0;\r\n}(AbstractMessageType));\r\nexports.NotificationType0 = NotificationType0;\r\nvar NotificationType1 = /** @class */ (function (_super) {\r\n    __extends(NotificationType1, _super);\r\n    function NotificationType1(method) {\r\n        var _this = _super.call(this, method, 1) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType1;\r\n}(AbstractMessageType));\r\nexports.NotificationType1 = NotificationType1;\r\nvar NotificationType2 = /** @class */ (function (_super) {\r\n    __extends(NotificationType2, _super);\r\n    function NotificationType2(method) {\r\n        var _this = _super.call(this, method, 2) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType2;\r\n}(AbstractMessageType));\r\nexports.NotificationType2 = NotificationType2;\r\nvar NotificationType3 = /** @class */ (function (_super) {\r\n    __extends(NotificationType3, _super);\r\n    function NotificationType3(method) {\r\n        var _this = _super.call(this, method, 3) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType3;\r\n}(AbstractMessageType));\r\nexports.NotificationType3 = NotificationType3;\r\nvar NotificationType4 = /** @class */ (function (_super) {\r\n    __extends(NotificationType4, _super);\r\n    function NotificationType4(method) {\r\n        var _this = _super.call(this, method, 4) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType4;\r\n}(AbstractMessageType));\r\nexports.NotificationType4 = NotificationType4;\r\nvar NotificationType5 = /** @class */ (function (_super) {\r\n    __extends(NotificationType5, _super);\r\n    function NotificationType5(method) {\r\n        var _this = _super.call(this, method, 5) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType5;\r\n}(AbstractMessageType));\r\nexports.NotificationType5 = NotificationType5;\r\nvar NotificationType6 = /** @class */ (function (_super) {\r\n    __extends(NotificationType6, _super);\r\n    function NotificationType6(method) {\r\n        var _this = _super.call(this, method, 6) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType6;\r\n}(AbstractMessageType));\r\nexports.NotificationType6 = NotificationType6;\r\nvar NotificationType7 = /** @class */ (function (_super) {\r\n    __extends(NotificationType7, _super);\r\n    function NotificationType7(method) {\r\n        var _this = _super.call(this, method, 7) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType7;\r\n}(AbstractMessageType));\r\nexports.NotificationType7 = NotificationType7;\r\nvar NotificationType8 = /** @class */ (function (_super) {\r\n    __extends(NotificationType8, _super);\r\n    function NotificationType8(method) {\r\n        var _this = _super.call(this, method, 8) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType8;\r\n}(AbstractMessageType));\r\nexports.NotificationType8 = NotificationType8;\r\nvar NotificationType9 = /** @class */ (function (_super) {\r\n    __extends(NotificationType9, _super);\r\n    function NotificationType9(method) {\r\n        var _this = _super.call(this, method, 9) || this;\r\n        _this._ = undefined;\r\n        return _this;\r\n    }\r\n    return NotificationType9;\r\n}(AbstractMessageType));\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    var candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    var candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    var candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-jsonrpc/lib/messages.js\n// module id = 148\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path_1 = require(\"path\");\r\nvar os_1 = require(\"os\");\r\nvar crypto_1 = require(\"crypto\");\r\nvar net_1 = require(\"net\");\r\nvar messageReader_1 = require(\"./messageReader\");\r\nvar messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    var randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return \"\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-\" + randomSuffix + \"-sock\";\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), \"vscode-\" + randomSuffix + \".sock\");\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var connectResolve;\r\n    var connected = new Promise(function (resolve, _reject) {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        var server = net_1.createServer(function (socket) {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, function () {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: function () { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-jsonrpc/lib/pipeSupport.js\n// module id = 149\n// module chunks = 0","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar net_1 = require(\"net\");\r\nvar messageReader_1 = require(\"./messageReader\");\r\nvar messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var connectResolve;\r\n    var connected = new Promise(function (resolve, _reject) {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise(function (resolve, reject) {\r\n        var server = net_1.createServer(function (socket) {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', function () {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: function () { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding) {\r\n    if (encoding === void 0) { encoding = 'utf-8'; }\r\n    var socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vscode-jsonrpc/lib/socketSupport.js\n// module id = 150\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 151\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xtend/immutable.js\n// module id = 152\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 153\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 154\n// module chunks = 0"],"sourceRoot":""}